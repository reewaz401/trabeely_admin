{"version":3,"sources":["services/api_url.js","role.js","services/gotoPage.js","MultipleOption.js","services/axios.js","contexts/UserAuthentication.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Index.js","components/Headers/BannerHeader.js","views/TabArea.js","views/package/PackageForm.js","services/permisionHandler.js","contexts/AgentPackageContext.js","views/package/ItineraryForm.js","views/package/PackageTab.js","views/restaurant/RestaurantForm.js","contexts/AgentRestaurantContext.js","views/restaurant/FoodForm.js","views/restaurant/RestaurantTab.js","views/hotel/HotelForm.js","contexts/HotelContext.js","views/hotel/HotelRoomForm.js","views/hotel/HotelTab.js","views/club/ClubForm.js","views/club/ClubTab.js","components/Datatable/DataTable.js","components/Headers/NoActionBanner.js","views/pre-register/PreRegisters.js","contexts/PreLoaderContext.js","views/user/UserAdd.js","views/user/UserDetails.js","views/hotel/HotelDetails.js","views/package/PackageUpdate.js","views/package/PackageDetails.js","views/restaurant/RestaurantDetails.js","contexts/AgentClubContext.js","views/club/ClubDetails.js","views/booking/BoookingDetails.js","routes/routes_admin.js","routes/routes_travel.js","routes/routes_restaurant.js","routes/routes_club.js","routes/routes_hotel.js","ProtectedRoute.js","components/Headers/UserHeader.js","views/setting/Profile.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","views/auth/Login.js","views/auth/Denied.js","auth_routes.js","PublicRoute.js","layouts/Auth.js","index.js","views/package/PackageType.js"],"names":["BASE_URI","process","module","exports","LOGIN_API","REGISTER_API","LOGOUT_API","roleUpdateAPI","CHECK_PERMISSION","PACKAGE_API","PACKAGE_DELETE_API","PACKAGE_UPDATE_API","ITINERARY_API","AGENT_PACKAGE_API","PACKAGE_ALL_API","HOTEL_ADD_API","HOTEL_ROOM_ADD_API","AGENT_HOTEL_API","HOTEL_DELETE_API","HOTEL_ALL_API","RESTAURANT_ADD_API","FOOD_ADD_API","AGENT_RESTAURANT_API","RESTAURANT_DELETE_API","RESTAURANT_ALL_API","CLUB_ADD_API","AGENT_CLUB_API","CLUB_DELETE_API","CLUB_ALL_API","GALLERY_ADD_API","AGENT_GALLERY_API","GALLERY_DELETE_API","GALLERY_ALL_API","PRE_REGISTER_GET","APPROVE_PRE_REGISTER","GET_USER_PROFILE","USERS_GET","USERS_ADD_API","USER_DELETE_API","USER_UPDATE_API","USER_UPDATE_PASSWORD_API","value","label","token","user","path","localStorage","setItem","JSON","stringify","window","location","href","includesOption","name","ROOM_TYPE","FOOD_TYPE","AMENITIES","instance","axios","create","baseURL","withCredentials","headers","getItem","AuthContext","createContext","AuthContextProvider","children","parse","useState","isAuthenticated","setIsAuthenticated","authUser","setAuthUser","Provider","AdminNavbar","props","useContext","onLogout","e","a","preventDefault","post","data","success","replace","removeItem","alert","Navbar","className","expand","id","Container","fluid","to","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","DropdownMenu","right","DropdownItem","header","tag","Link","divider","onClick","Sidebar","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","bgColor","logo","navbarBrandProps","innerLink","outterLink","target","type","NavbarBrand","alt","imgAlt","src","aria-labelledby","Collapse","isOpen","Row","Col","xs","imgSrc","Form","InputGroup","Input","aria-label","placeholder","InputGroupAddon","addonType","InputGroupText","map","prop","key","NavItem","NavLink","layout","NavLinkRRD","activeClassName","icon","createLinks","defaultProps","Header","lg","xl","Card","CardBody","CardTitle","width","height","Index","BannerHeader","actions","md","action","TabArea","tabss","setActiveTab","activeTab","tabs","tab","index","visible","classnames","active","toggle","ValidationSchema","Yup","shape","title","required","price","destination","address","duration","cancelPolicy","minTraveler","overview","packageType","PackageForm","setPackageId","includes","setIncludes","validFiles","setValidFiles","Date","onChange","isPrice","setIsPrice","useToasts","addToast","removeAllToasts","images","setImages","people","discount","groupDiscount","setGroupDiscount","onImageSelectChange","imageList","addUpdateIndex","file","push","onAddPackage","values","length","appearance","autoDismiss","formData","FormData","append","i","property","Array","from","result","resetForm","current_save_id","response","error","onSelect","selectedList","onRemove","initialValues","isChangeDate","validationSchema","onSubmit","FormGroup","handleChange","errors","touched","p","temp","Button","color","displayValue","options","style","chips","background","searchBox","border","Fragment","PACKAGES_TYPE","htmlFor","format","minDate","for","rows","cols","multiple","maxNumber","dataURLKey","onImageUpload","onImageUpdate","onImageRemove","image","data_url","tooltip","class","get","PermissionHandler","PackagesContext","PackagesContextProvider","packages","setPackages","useEffect","permissionController","getAllPackages","getPackagesByUser","console","log","ItineraryForm","packageId","step","ItineraryModel","day","routeName","routeDesc","routeImg","obj","arr","itinerary","setItinerary","setDay","selectedFiles","useRef","option","newObj","_id","onUpdateItinerary","message","filteredArray","reduce","current","find","item","concat","tempday","PackageTab","TabContent","TabPane","tabId","contact","desc","country","RestaurantForm","startDate","endDate","onAddTrigger","err","videoUrl","RestaurantContext","RestaurantContextProvider","restaurants","setRestaurants","getAllRestaurant","getRestaurantByUser","foodName","FoodForm","restaurantId","setRestaurantId","foodType","setFoodType","onSelectRestaurant","onSelectFoodType","classfoodName","RestaurantTab","totalRoom","hotelDesc","HotelForm","setHotelId","amenities","setAmenities","onSelectAmenities","isMulti","HotelContext","HotelContextProvider","hotels","setHotels","getAllHotels","getHotelDetails","numberOfRoom","seat","HotelRoomForm","hotelId","roomType","setRoomType","onSelectRoomType","HotelTab","clubName","ClubForm","classclubName","ClubTab","DataTable","columns","defaultSorted","ColumnToggle","ToggleList","SearchBar","Search","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","rowEvents","row","rowIndex","pagination","paginationFactory","paginationProps","paginationTableProps","keyField","search","searchProps","classes","filter","filterFactory","baseProps","NoActionBanner","PreRegisters","business","setBusiness","getAllBusinessDetail","onApprove","put","status","reload","dataField","order","text","sort","formatter","cell","moment","createdAt","formatExtraData","confirmAction","confirmAlert","customUI","onClose","PreLoaderContext","override","css","PreloaderContextProvider","isLoading","setIsLoading","size","loading","email","gender","fullname","UserAdd","tabIndex","role","aria-hidden","data-dismiss","UsersDetails","users","setUsers","getAllUsers","onDeleteUser","delete","onUpdateRole","Roles","selected","confirmDelete","data-toggle","data-target","HotelDetails","onDeleteAction","textFilter","PackageUpdate","pckg","pkgId","setIsUpdate","initialValue","onUpdate","enableReinitialize","PackageDetails","updateData","setUpdateData","isUpdate","setPkgId","onDeletePackage","onPublish","onUpdateChange","confirm","RestaurantDetails","ClubContext","ClubContextProvider","clubs","setClubs","getClubByUser","ClubDetails","BookingDetails","adminRoutes","component","UserDetails","travelRoutes","restaurantRoutes","clubRoutes","hotelRoutes","access","ProtectedRoute","Component","rest","render","pathname","state","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","currentpassword","password","cpassword","Profile","onUpdatePassword","CardHeader","defaultValue","readOnly","Admin","mainContent","React","useLocation","granted","setGranted","then","catch","document","documentElement","scrollTop","scrollingElement","getRoutes","grant","getTextHeaderName","indexOf","ref","undefined","UncontrolledCollapse","toggler","Login","SignInSchema","min","Denied","onLogin","gotoPage","PublicRoute","createElement","Auth","body","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","authroutes","ReactDOM","placement","autoDismissTimeout","getElementById"],"mappings":"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","file":"static/js/main.128538e9.chunk.js","sourcesContent":["const BASE_URI = process.env.REACT_APP_BASE_URI;\r\nmodule.exports = {\r\n    LOGIN_API: BASE_URI + \"/auth/sign-in\",\r\n    REGISTER_API: BASE_URI + \"/auth/sign-up\",\r\n    LOGOUT_API: BASE_URI + \"/auth/logout\",\r\n    roleUpdateAPI: BASE_URI + \"/user/update-role/\",  //{id}\r\n    CHECK_PERMISSION: BASE_URI + \"/auth/permission-handler\",\r\n    //Package\r\n    PACKAGE_API: BASE_URI + \"/packages/add-package\",\r\n    PACKAGE_DELETE_API: BASE_URI + \"/packages/delete/\",//{id}\r\n    PACKAGE_UPDATE_API: BASE_URI + \"/packages/update/\",//{id}\r\n    ITINERARY_API: BASE_URI + \"/packages/add-itinerary\",\r\n    AGENT_PACKAGE_API: BASE_URI + \"/packages/agent-package\", \r\n    PACKAGE_ALL_API: BASE_URI + \"/packages\",\r\n    //Hotels\r\n    HOTEL_ADD_API:BASE_URI+\"/hotels/add-hotel\",\r\n    HOTEL_ROOM_ADD_API:BASE_URI+\"/hotels/add-room\",\r\n    AGENT_HOTEL_API:BASE_URI+\"/hotels/agent-hotel\",\r\n    HOTEL_DELETE_API:BASE_URI+\"/hotels/delete/\",//{id}\r\n    HOTEL_ALL_API: BASE_URI + \"/hotels\",\r\n    //Restaurant\r\n    RESTAURANT_ADD_API:BASE_URI+\"/restaurants/add-restaurant\",\r\n    FOOD_ADD_API:BASE_URI+\"/foods/add-food\",\r\n    AGENT_RESTAURANT_API:BASE_URI+\"/restaurants/agent-restaurant\",\r\n    RESTAURANT_DELETE_API:BASE_URI+\"/restaurants/delete/\",//{id}\r\n    RESTAURANT_ALL_API: BASE_URI + \"/restaurants\",\r\n    //Club\r\n    CLUB_ADD_API:BASE_URI+\"/club/add-club\",\r\n    AGENT_CLUB_API:BASE_URI+\"/club/agent-club\",\r\n    CLUB_DELETE_API:BASE_URI+\"/club/delete/\",//{id}\r\n    CLUB_ALL_API: BASE_URI + \"/club\",\r\n    \r\n    //GALLERY\r\n    GALLERY_ADD_API:BASE_URI+\"/gallery/add-gallery\",\r\n    AGENT_GALLERY_API:BASE_URI+\"/gallery/agent-gallery\",\r\n    GALLERY_DELETE_API:BASE_URI+\"/gallery/delete/\",//{id}\r\n    GALLERY_ALL_API: BASE_URI + \"/gallery\",\r\n    \r\n    //Admin Work\r\n    //Business\r\n    PRE_REGISTER_GET:BASE_URI+\"/auth/business-detail\",\r\n    APPROVE_PRE_REGISTER:BASE_URI+\"/auth/approve-business/\", //{id}\r\n    //Users\r\n    GET_USER_PROFILE:BASE_URI+\"/users/user-profile\",\r\n    USERS_GET:BASE_URI+\"/users\",\r\n    USERS_ADD_API:BASE_URI+\"/users/user-add\",\r\n    USER_DELETE_API:BASE_URI+\"/users/delete/\",//{id}\r\n    USER_UPDATE_API:BASE_URI+\"/users/update\",\r\n    USER_UPDATE_PASSWORD_API:BASE_URI+\"/users/update-password\"\r\n\r\n}","//Nodejs Version 12.18.4\r\nmodule.exports = [\r\n  { value: \"admin\", label: \"Admin\" },\r\n  { value: \"hotel\", label: \"Hotel\" },\r\n  { value: \"restaurant\", label: \"Restaurant\" },\r\n  { value: \"club\", label: \"Club\" },\r\n  { value: \"user\", label: \"User\" },\r\n  { value: \"travel\", label: \"Travel\" },\r\n]\r\n","module.exports = (token, user, path) => {\r\n    localStorage.setItem(\"_token\", token);\r\n    localStorage.setItem(\"_auth\", JSON.stringify(user));\r\n    window.location.href = path;\r\n};","//Nodejs Version 12.18.4\r\nmodule.exports = {\r\n    includesOption : [\r\n        { name: \"Bag\" },\r\n        { name: \"Fruits\" },\r\n        { name: \"Transportation\" },\r\n        { name: \"Guide Service\" },\r\n        { name: \"Sleeping Bag\" }\r\n    ],\r\n    ROOM_TYPE: [\r\n        { value: \"normal\", label: \"Normal Room\" },\r\n        { value: \"medium\", label: \"Medium Room\" },\r\n        { value: \"delux\", label: \"Delux Room\" },\r\n        { value: \"luxury\", label: \"Luxury Room\" }\r\n    ],\r\n    FOOD_TYPE:[\r\n        { value: \"spicy\", label: \"Spicy\" },\r\n        { value: \"continental\", label: \"Continental\" },\r\n        { value: \"fastFood\", label: \"Fast Food\" },\r\n        { value: \"dietary\", label: \"Dietary Dinner\" },\r\n        { value: \"casualFood \", label: \"Casual Food\" },\r\n        { value: \"cafe\", label: \"Cafe\" },\r\n    ],\r\n    AMENITIES:[\r\n        { value: \"ac\", label: \"Air Conditioning\" },\r\n        { value: \"attached-bathroom\", label: \"Attached bathroom\" },\r\n        { value: \"tv\", label: \"TV\" },\r\n        { value: \"balcony\", label: \"Balcony\" },\r\n        { value: \"terrace \", label: \"Terrace\" },\r\n        { value: \"wifi\", label: \"Free WIFI\" },\r\n        { value: \"room-service\", label: \"Room Service\" },\r\n        { value: \"bar\", label: \"Bar\" },\r\n        { value: \"swimming-pool\", label: \"Swimming pool\" },\r\n        { value: \"sauna\", label: \"Sauna\" },\r\n        { value: \"frontdesk\", label: \"24-hour Front desk\" },\r\n        { value: \"hotwater\", label: \"Hot water\" },\r\n    ]\r\n\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: process.env.REACT_APP_BASE_URI,\r\n\twithCredentials: true,\r\n\t// headers: {\r\n\t\t// \t'CSRF-Token': csrfToken_generate(),\r\n\t\t//   },\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\"Authorization\": \"Bearer \" + localStorage.getItem(\"_token\")\r\n\t\t}\r\n})\r\n\r\nexport default instance","import React, { createContext, useState } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const user = JSON.parse(localStorage.getItem('_auth'))\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    return user !== null ? true : false\r\n  })\r\n  const [authUser, setAuthUser] = useState(() => {\r\n    return user !== null ? user : {}\r\n  })\r\n  return <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, authUser, setAuthUser }}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\nimport axios from '../../services/axios'\nimport { LOGOUT_API } from '../../services/api_url'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nconst AdminNavbar = (props) => {\n  const {  authUser } = useContext(AuthContext)\n\n  const onLogout = async e => {\n    e.preventDefault()\n    try {\n      let result = await axios.post(LOGOUT_API)\n      if (result.data.success) {\n        window.location.replace('/')\n        localStorage.removeItem('_token')\n        localStorage.removeItem('_auth')\n      }\n    } catch (error) {\n      alert(\"Logout Failed\");\n    }\n  }\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n            <h2 className=\"text-white\">{props.brandText}</h2>\n          </Link>\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    {/* //use profile */}\n                    {/* <img\n                      alt=\"...\"\n                      src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n                    /> */}\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      {authUser.name}\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/app/profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => onLogout(e)}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","import React, { useState,useContext,useEffect } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n      return routes.map((prop, key) => {\n        return (\n          <NavItem key={key}>\n            <NavLink\n              to={prop.layout + prop.path}\n              tag={NavLinkRRD}\n              onClick={closeCollapse}\n              activeClassName=\"active\"\n            >\n              <i className={prop.icon} />\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      });\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n    <Navbar\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\n      expand=\"md\"\n      id=\"sidenav-main\"\n    >\n      <Container fluid>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Brand */}\n        {logo ? (\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={`${process.env.PUBLIC_URL}/res/img/logo30.png`}\n            />\n            {/* <h4>TRABEELY-ADMIN</h4> */}\n          </NavbarBrand>\n        ) : null}\n        {/* User */}\n        <Nav className=\"align-items-center d-md-none\">\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav className=\"nav-link-icon\">\n              <i className=\"ni ni-bell-55\" />\n            </DropdownToggle>\n            <DropdownMenu\n              aria-labelledby=\"navbar-default_dropdown_1\"\n              className=\"dropdown-menu-arrow\"\n              right\n            >\n              <DropdownItem>Action</DropdownItem>\n              <DropdownItem>Another action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Something else here</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav>\n              <Media className=\"align-items-center\">\n                <span className=\"avatar avatar-sm rounded-circle\">\n                  <img\n                    alt=\"...\"\n                    src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n                  />\n                </span>\n              </Media>\n            </DropdownToggle>\n            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n              <DropdownItem className=\"noti-title\" header tag=\"div\">\n                <h6 className=\"text-overflow m-0\">Welcome!</h6>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-single-02\" />\n                <span>My profile</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-settings-gear-65\" />\n                <span>Settings</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-calendar-grid-58\" />\n                <span>Activity</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-support-16\" />\n                <span>Support</span>\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <i className=\"ni ni-user-run\" />\n                <span>Logout</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* Collapse */}\n        <Collapse navbar isOpen={collapseOpen}>\n          {/* Collapse header */}\n          <div className=\"navbar-collapse-header d-md-none\">\n            <Row>\n              {logo ? (\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  {logo.innerLink ? (\n                    <Link to={logo.innerLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </Link>\n\n                  ) : (\n                    <a href={logo.outterLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </a>\n                  )}\n                </Col>\n              ) : null}\n              <Col className=\"collapse-close\" xs=\"6\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={toggleCollapse}\n                >\n                  <span />\n                  <span />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          {/* Form */}\n          <Form className=\"mt-4 mb-3 d-md-none\">\n            <InputGroup className=\"input-group-rounded input-group-merge\">\n              <Input\n                aria-label=\"Search\"\n                className=\"form-control-rounded form-control-prepended\"\n                placeholder=\"Search\"\n                type=\"search\"\n              />\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <span className=\"fa fa-search\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n          {/* Navigation */}\n          <Nav navbar>{createLinks(routes)}</Nav>\n          {/* Divider */}\n          <hr className=\"my-3\" />\n          {/* Heading */}\n          <h6 className=\"navbar-heading text-muted\">Policy</h6>\n          {/* Navigation */}\n\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","import React from \"react\";\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Users\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                        Total User: 0\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow.png`} alt=\"\"/>\n                      </span>\n                      <span className=\"text-nowrap\"> </span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                        Packages\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">0</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                      <img width=\"100\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow4.png`} alt=\"\"/>\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Hotels\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">0</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-warning mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow5.png`} alt=\"\"/>\n                      </span>\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Restaurants\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">0%</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow6.png`} alt=\"\"/>\n\n                      </span>\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// reactstrap components\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n\nimport Header from \"components/Headers/Header.js\";\n\nconst Index = (props) => {\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"bg-gradient-default shadow\">\n              {/* <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Sales value</h2>\n                  </div>\n                  <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody> */}\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            {/* <Car€ */}\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            {/* <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Page visits</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Page name</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\">Unique users</th>\n                    <th scope=\"col\">Bounce rate</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">/argon/</th>\n                    <td>4,569</td>\n                    <td>340</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/index.html</th>\n                    <td>3,985</td>\n                    <td>319</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/charts.html</th>\n                    <td>3,513</td>\n                    <td>294</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      36,49%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/tables.html</th>\n                    <td>2,050</td>\n                    <td>147</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/profile.html</th>\n                    <td>1,795</td>\n                    <td>190</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card> */}\n          </Col>\n          <Col xl=\"4\">\n            {/* <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Social traffic</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Referral</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>1,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">60%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"60\"\n                            barClassName=\"bg-gradient-danger\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>5,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">70%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"70\"\n                            barClassName=\"bg-gradient-success\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Google</th>\n                    <td>4,807</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">80%</span>\n                        <div>\n                          <Progress max=\"100\" value=\"80\" />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Instagram</th>\n                    <td>3,678</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">75%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"75\"\n                            barClassName=\"bg-gradient-info\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">twitter</th>\n                    <td>2,645</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">30%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"30\"\n                            barClassName=\"bg-gradient-warning\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card> */}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst BannerHeader = ({actions}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-8 pt-1 pt-lg-7 d-flex align-items-center\">\r\n        {/* Mask */}\r\n        <span className=\"mask bg-gradient-default opacity-7\" />\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"action\">\r\n                {actions.map((action) =>\r\n                  <a\r\n                    className=\"text-white\"\r\n                    href={action.path}\r\n                    // onClick={(e) => e.preventDefault()}\r\n                  >\r\n                  {action.icon}  {action.name}\r\n                  </a>)}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BannerHeader;\r\n","import React from 'react'\r\nimport { Nav, NavLink, NavItem, } from \"reactstrap\";\r\nimport classnames from 'classnames'\r\nfunction TabArea({ tabss, setActiveTab, activeTab }) {\r\n    const toggle = tab => {\r\n\r\n        if (activeTab !== tab) {\r\n            setActiveTab(tab);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Nav tabs>\r\n                {tabss.map((tab, index) => (\r\n                    tab.visible ? (\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: activeTab === tab.id })}\r\n                                onClick={() => toggle(tab.id)}\r\n                            >\r\n                                <i className={tab.icon}></i> {tab.name}\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    ) : \"\"\r\n\r\n                ))}\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TabArea\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { PACKAGES_TYPE } from './PackageType';\r\nimport { PACKAGE_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { includesOption } from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Field is required'),\r\n    price: Yup.string().required('Field is required'),\r\n    destination: Yup.string().required('Field is required'),\r\n    address: Yup.string().required('Field is required'),\r\n    duration: Yup.string().required('Field is required'),\r\n    cancelPolicy: Yup.string().required('Field is required'),\r\n    minTraveler: Yup.string().required('Field is required'),\r\n    overview: Yup.string().required('Field is required'),\r\n    packageType: Yup.string().required('Field is required'),\r\n})\r\nfunction PackageForm({ setActiveTab, setPackageId }) {\r\n\r\n    const [includes, setIncludes] = useState([]);\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [value, onChange] = useState(new Date());\r\n    const [isPrice, setIsPrice] = useState(false)\r\n    const [isItinerary, setIsItinerary] = useState(false)\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n    const GroupDiscountModel = {\r\n        people: 0,\r\n        discount: 0,\r\n    }\r\n\r\n    const [groupDiscount, setGroupDiscount] = useState([GroupDiscountModel]);\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddPackage = async (values, actions) => {\r\n\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else if (includes.length == 0) {\r\n            addToast(\"You have not included item for package !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"package\");\r\n            formData.append(\"startDate\", value);\r\n            //Includes Array\r\n            for (var i = 0; i < includes.length; i++) {\r\n                formData.append('includes', includes[i].name);\r\n            }\r\n            //Package Image Arrary\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            formData.append(\"groupDiscount\", JSON.stringify(groupDiscount));\r\n            //Non-Array Value to store package desc, name, title\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(PACKAGE_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    actions.resetForm();\r\n                    setPackageId(result.data.current_save_id);\r\n                    setActiveTab(\"2\")\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.error, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n\r\n    const onRemove = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        title: '',\r\n                        price: '',\r\n                        destination: '',\r\n                        address: '',\r\n                        duration: '',\r\n                        cancelPolicy: ``,\r\n                        minTraveler: '',\r\n                        isChangeDate: false,\r\n                        overview: '',\r\n                        packageType: ''\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddPackage(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">Add Packages</h6>\r\n                            <div className=\"pl-lg-4\">\r\n\r\n                                {!isPrice ? (\r\n                                    <React.Fragment>\r\n                                        <Row>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Package Type  </label>\r\n                                                    <select onChange={props.handleChange} name='packageType' className='form-control'>\r\n                                                        <option>Select Package Type</option>\r\n                                                        {PACKAGES_TYPE.map((data, i) => (\r\n                                                            <option key={i} value={data}\r\n                                                            // selected={type?.includes(data.packageType)}\r\n                                                            >\r\n                                                                {data}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\"\r\n                                                        htmlFor=\"input-username\" >Package Title</label>\r\n                                                    <input\r\n                                                        name='title'\r\n                                                        className='form-control'\r\n                                                        placeholder='e.g: anapurna base camp'\r\n                                                        value={props.values.title}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.title && props.touched.title ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.title}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\"\r\n                                                        htmlFor=\"input-first-name\"\r\n                                                    > Destination</label>\r\n                                                    <Field\r\n                                                        name='destination'\r\n                                                        className='form-control'\r\n                                                        placeholder='e.g. Kathmandu'\r\n                                                        value={props.values.destination}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.destination && props.touched.destination ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.destination}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\"\r\n                                                        htmlFor=\"input-address\">\r\n                                                        Meeting Point  </label>\r\n                                                    <Field\r\n                                                        name='address'\r\n                                                        className='form-control'\r\n                                                        placeholder='Enter address'\r\n                                                        value={props.values.address}\r\n                                                        onChange={props.handleChange('address')}\r\n                                                    />\r\n                                                    {props.errors.address && props.touched.address ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"2\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Minimum traveler</label>\r\n                                                    <Field\r\n                                                        name='minTraveler'\r\n                                                        className='form-control'\r\n                                                        placeholder='Enter minimum traveler'\r\n                                                        value={props.values.minTraveler}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.minTraveler && props.touched.minTraveler ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.minTraveler}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"2\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Duration  </label>\r\n                                                    <Field\r\n                                                        name='duration'\r\n                                                        className='form-control'\r\n                                                        placeholder='Enter duration'\r\n                                                        value={props.values.duration}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.duration && props.touched.duration ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.duration}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">\r\n                                                        Start Date  </label>\r\n                                                    <DateTimePicker\r\n                                                        className=\"react-datetime-picker form-control\"\r\n                                                        onChange={onChange}\r\n                                                        value={value}\r\n                                                        format=\"y-MM-dd h:mm:ss a\"\r\n                                                        minDate={new Date()}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\" for=\"changedate\">\r\n                                                        Are you flexible to let user change booking date  </label>\r\n                                                      <span className=\"pl-lg-4\"> \r\n                                                          <Field \r\n                                                        id=\"changedate\"\r\n                                                        type=\"checkbox\"\r\n                                                        className='form-check-input'\r\n                                                        name=\"isChangeDate\" />  \r\n                                             {props.values.isChangeDate ? \"Yes\": \"No\"}</span>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Overview </label>\r\n                                                    <textarea\r\n                                                        rows=\"4\"\r\n                                                        cols=\"40\"\r\n                                                        name='overview'\r\n                                                        className='form-control'\r\n                                                        placeholder='Specify your package overview'\r\n                                                        value={props.values.overview}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.overview && props.touched.overview ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.overview}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <hr className=\"my-4\" />\r\n                                        <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                                        <div className=\"pl-lg-4\">\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <ImageUploading\r\n                                                            multiple\r\n                                                            value={images}\r\n                                                            onChange={onImageSelectChange}\r\n                                                            maxNumber={maxNumber}\r\n                                                            dataURLKey=\"data_url\"\r\n                                                        >\r\n                                                            {({\r\n                                                                imageList,\r\n                                                                onImageUpload,\r\n                                                                onImageUpdate,\r\n                                                                onImageRemove,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                    <Row>\r\n                                                                        <Col md=\"2\">\r\n                                                                            <div\r\n                                                                                onClick={onImageUpload}>\r\n                                                                                <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                            </div>\r\n                                                                        </Col>\r\n                                                                        <Col md=\"8\">\r\n                                                                            {imageList.length != 0 ?\r\n                                                                                <div className=\"form-group multi-preview\">\r\n                                                                                    {imageList.map((image, index) => (\r\n                                                                                        <Row>\r\n                                                                                            <div className=\"col-md-8\">\r\n                                                                                                <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                                    <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                                </CardTitle>\r\n                                                                                            </div>\r\n                                                                                            <Col className=\"col-auto\">\r\n                                                                                                <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                                <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                            </Col>\r\n                                                                                        </Row>\r\n                                                                                    ))}\r\n                                                                                </div> : \"Image not selected.\"}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </>\r\n                                                            )}\r\n                                                        </ImageUploading>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <>\r\n                                        <Row>\r\n                                            <Col lg=\"2\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Price per person  </label>\r\n                                                    <Field\r\n                                                        name='price'\r\n                                                        className='form-control'\r\n                                                        placeholder='Price per person'\r\n                                                        value={props.values.price}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.price && props.touched.price ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <h2>10% Commission wil be charged on every booking</h2></Col>\r\n                                        </Row>\r\n                                        <h6 className=\"heading-small text-muted mb-4\"> Group Discount</h6>\r\n                                        <Row>\r\n                                            <Col lg=\"4\">\r\n                                                {groupDiscount.map((p, index) => {\r\n                                                    return (\r\n                                                        <Row>\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <label\r\n                                                                        className=\"form-control-label\">Number of people </label>\r\n                                                                    <Field\r\n                                                                        name='people'\r\n                                                                        className='form-control'\r\n                                                                        placeholder='Enter number of people'\r\n                                                                        // value={p.people ? p.people: null}\r\n                                                                        onChange={e => {\r\n                                                                            const people = e.target.value;\r\n                                                                            var temp = groupDiscount\r\n                                                                            temp[index].people = people\r\n                                                                            setGroupDiscount(temp)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <label\r\n                                                                        className=\"form-control-label\"> Discount (in Rs) </label>\r\n                                                                    <Field\r\n                                                                        name='discount'\r\n                                                                        className='form-control'\r\n                                                                        placeholder='Enter your discount rate'\r\n                                                                        // value={p}\r\n                                                                        onChange={e => {\r\n                                                                            const discount = e.target.value;\r\n                                                                            var temp = groupDiscount\r\n                                                                            temp[index].discount = discount\r\n                                                                            setGroupDiscount(temp)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                        </Row>\r\n                                                    );\r\n                                                })}\r\n                                            </Col>\r\n                                            <Button\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault()\r\n                                                    setGroupDiscount(discount => [\r\n                                                        ...discount,\r\n                                                        {\r\n                                                            people: \"\",\r\n                                                            discount: \"\",\r\n                                                        }\r\n                                                    ]);\r\n                                                }}\r\n                                                className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                                                <li className=\"fas fa-plus\"></li>\r\n                                            </Button>\r\n                                        </Row>\r\n                                        <hr className=\"my-2\" />\r\n                                        <Row>\r\n                                            <Col lg=\"6\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Include Section </label>\r\n                                                    <Multiselect\r\n                                                        displayValue=\"key\"\r\n                                                        className='form-control'\r\n                                                        options={includesOption}\r\n                                                        displayValue=\"name\"\r\n                                                        onSelect={onSelect}\r\n                                                        onRemove={onRemove}\r\n                                                        style={{\r\n                                                            chips: { background: \"#0f367c\" },\r\n                                                            searchBox: {\r\n                                                                border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">\r\n                                                        Cancellation Policy </label>\r\n                                                    <select onChange={props.handleChange} name='cancelPolicy' className='form-control'>\r\n                                                        <option value=\"\">Select Cancel Policy</option>\r\n                                                        <option value=\"One day before check in (6 pm)\">One day before check in (6 pm)</option>\r\n                                                        <option value=\"Two day before check in (6 pm)\">Two day before check in (6 pm)</option>\r\n                                                    </select>\r\n                                                    {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <div className='pl-lg-4 form-group'>\r\n                                <div className=\"text-left\">\r\n                                    {isPrice ? (\r\n                                        <>\r\n                                            <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(false)} type=\"button\">\r\n                                                Back </button>\r\n                                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                Confirm</button>\r\n                                        </>) :\r\n                                        <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(true)} type=\"button\">\r\n                                            Next\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default PackageForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import axios from '../services/axios'\r\nimport { CHECK_PERMISSION } from '../services/api_url'\r\nasync function PermissionHandler() {\r\n \r\n   try {\r\n    const result = await axios.get(CHECK_PERMISSION)\r\n    if (result.data.success) {\r\n        return result.data;\r\n    } else{\r\n        return false;\r\n    }\r\n   } catch (error) {\r\n    return false;\r\n\r\n    // if (error.response) {\r\n    //     alert(error.response.data.message)\r\n    //   }\r\n   }\r\n\r\n}\r\nexport default PermissionHandler\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport { AGENT_PACKAGE_API, PACKAGE_ALL_API } from '../services/api_url'\r\nimport PermissionHandler from 'services/permisionHandler'\r\n\r\nexport const PackagesContext = createContext()\r\n\r\nconst PackagesContextProvider = ({ children }) => {\r\n  const [packages, setPackages] = useState([])\r\n\r\n  useEffect(() => {\r\n    permissionController()\r\n  }, [])\r\n  const permissionController = async () => {\r\n    try {\r\n      let permission = await PermissionHandler();\r\n      if (permission.data.type === \"admin\") {\r\n        getAllPackages(); //for admin\r\n      } else {\r\n        getPackagesByUser();//for agent\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const getPackagesByUser = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_PACKAGE_API)\r\n      if (result.data.success) {\r\n        setPackages(result.data.packages)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Packages Error: ', error)\r\n    }\r\n  }\r\n\r\n  const getAllPackages = async () => {\r\n    try {\r\n      let result = await axios.get(PACKAGE_ALL_API)\r\n      console.log(result)\r\n      if (result.data.success) {\r\n        setPackages(result.data.packages)\r\n\r\n      }\r\n    } catch (error) {\r\n      alert(\"data fetching error\")\r\n    }\r\n  }\r\n\r\n  return <PackagesContext.Provider value={{ packages, setPackages }}>{children}</PackagesContext.Provider>\r\n}\r\n\r\nexport default PackagesContextProvider","\r\nimport React, { useState, useContext, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport axios from '../../services/axios'\r\nimport { ITINERARY_API } from '../../services/api_url';\r\nimport { PackagesContext } from '../../contexts/AgentPackageContext'\r\nimport _ from \"lodash\"\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport ImageUploading from \"react-images-uploading\";\r\n\r\n\r\nfunction ItineraryForm({packageId}) {\r\n    var step = 1\r\n    const ItineraryModel = {\r\n        day: step,\r\n        routeName: '',\r\n        routeDesc: '',\r\n        routeImg: ''\r\n    }\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (key, value, name) => {\r\n        obj = {\r\n            key: key,\r\n            value: value,\r\n            name: name,\r\n        };\r\n\r\n        arr.push(obj);\r\n    };\r\n\r\n    const { packages } = useContext(PackagesContext)\r\n    const [itinerary, setItinerary] = useState([ItineraryModel]);\r\n    const [itineraryImage, setItineraryImage] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [day, setDay] = useState(step)\r\n    const { addToast } = useToasts()\r\n    const [preview, setPreview] = useState([]);\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    //    let pckgJSON = {}\r\n    const getSelectedImage = (files) => {\r\n        let fileObj = [];\r\n        let fileArray = []\r\n        fileObj.push(files)\r\n        for (let i = 0; i < fileObj[0].length; i++) {\r\n            fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n        }\r\n        setPreview(fileArray)\r\n        setItineraryImage(fileObj);\r\n    };\r\n    useEffect(() => {\r\n        packages.map((option, i) =>\r\n            newObj(i, option._id, option.title, option.title)\r\n        );\r\n    }, [arr])\r\n    const onUpdateItinerary = async (e) => {\r\n     \r\n        const formData = new FormData();\r\n        formData.append(\"event\", \"itinerary\");\r\n        formData.append(\"packageId\", packageId);\r\n        //Itinerary Array\r\n        Array.from(validFiles).map(function (value, index) {\r\n            formData.append(\"picture\", validFiles[index]);\r\n        })\r\n        formData.append(\"itinerary\", JSON.stringify(itinerary));\r\n        try {\r\n            let result = await axios.post(ITINERARY_API, formData);\r\n            if (result.data.success) {\r\n                addToast(\"Itinerary Added\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.href=\"/app/package-view\"\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                addToast(error.response.data.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setId(selectedList[0].value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        let filteredArray = selectedFiles.reduce((file, current) => {\r\n            const x = file.find(item => item.name === current.name);\r\n            if (!x) {\r\n                return file.concat([current]);\r\n            } else {\r\n                return file;\r\n            }\r\n        }, []);\r\n        setValidFiles([...filteredArray]);\r\n\r\n    }, [selectedFiles]);\r\n    const handleFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            // add to an array so we can display the name of file\r\n            setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n            // add a new property called invalid\r\n            // files\\[i\\]['invalid'] = true;\r\n            // add to the same array so we can display the name of the file\r\n            // set error message\r\n        }\r\n    }\r\n    const removeFile = (name) => {\r\n        // find the index of the item\r\n        // remove the item from array\r\n        const validFileIndex = validFiles.findIndex(e => e.name === name);\r\n        validFiles.splice(validFileIndex, 1);\r\n        // update validFiles array\r\n        setValidFiles([...validFiles]);\r\n        const selectedFileIndex = selectedFiles.findIndex(e => e.name === name);\r\n        selectedFiles.splice(selectedFileIndex, 1);\r\n        // update selectedFiles array\r\n        setSelectedFiles([...selectedFiles]);\r\n    }\r\n    const handleFileChange = () => {\r\n        getSelectedImage(fileInputRef.current.files)\r\n        if (fileInputRef.current.files.length) {\r\n            handleFiles(fileInputRef.current.files);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"bg-secondary shadow mb-4\">\r\n                <CardBody>\r\n                    <h3 className=\"text-muted mb-4\">Make sure you have added your itinerary correctly (Dont refresh page)</h3>\r\n                    {/* <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label className=\"form-control-label\">Package Type</label>\r\n                            <Multiselect\r\n                                selectionLimit=\"1\"\r\n                                displayValue=\"name\"\r\n                                className='form-control'\r\n                                options={arr}\r\n                                onSelect={onSelect}\r\n                                style={{\r\n                                    searchBox: {\r\n                                        border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col> */}\r\n                    <div className=\"pl-lg-4\">\r\n                        {itinerary.map((p, index) => {\r\n                            return (\r\n                                <>\r\n                                    <Row>\r\n                                        <label className=\"my-4\">Day {step++}</label>\r\n                                        <Col md=\"2\">\r\n                                            <FormGroup>\r\n                                                <label\r\n                                                    className=\"form-control-label\"\r\n                                                    htmlFor=\"input-address\"\r\n                                                > Route Name </label>\r\n                                                <input\r\n                                                    name='routeName'\r\n                                                    className='form-control'\r\n                                                    placeholder='enter route name'\r\n                                                    onChange={e => {\r\n                                                        const routeName = e.target.value;\r\n                                                        var temp = itinerary\r\n                                                        temp[index].routeName = routeName\r\n                                                        setItinerary(temp)\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md=\"6\">\r\n                                            <FormGroup>\r\n                                                <label\r\n                                                    className=\"form-control-label\"\r\n                                                    htmlFor=\"input-description\"\r\n                                                > Route Description </label>\r\n                                                <textarea\r\n                                                    rows=\"2\"\r\n                                                    cols=\"40\"\r\n                                                    name='routeDesc'\r\n                                                    className='form-control'\r\n                                                    placeholder='enter route description'\r\n                                                    onChange={e => {\r\n                                                        const routeDesc = e.target.value;\r\n                                                        var temp = itinerary\r\n                                                        temp[index].routeDesc = routeDesc\r\n                                                        setItinerary(temp)\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {/* <Col md=\"2\">\r\n                                            <FormGroup>\r\n                                                <label\r\n                                                    className=\"form-control-label\" htmlFor=\"input-description\">Image</label>\r\n                                                <input\r\n                                                    name=\"picture\"\r\n                                                    type=\"file\"\r\n                                                    accept=\"image/png, image/jpeg, image/jpg\"\r\n                                                    // onChange={(e) => getSelectedImage(e)}\r\n                                                    ref={fileInputRef}\r\n                                                    onChange={() => handleFileChange()}\r\n                                                    className=\"form-control\"\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col> */}\r\n                                        {/* {itinerary.length === index + 1 && <Button className=\"btn btn-danger\" onClick={(e) => removeForm(index)}>Remove</Button>} */}\r\n                                    </Row>\r\n                                </>\r\n                            );\r\n                        })}\r\n\r\n                        {/* {preview.length <= 0 ? \"\" :\r\n                            <div className=\"form-group multi-preview\">\r\n                                {validFiles && validFiles.map((file, i) =>\r\n                                    <>\r\n                                        <span><i className=\"fa fa-times\" onClick={() => removeFile(file.name)}></i></span>\r\n                                        <img height=\"100\" width=\"100\" className=\"img-fluid\" alt=\"Responsive image\" src={URL.createObjectURL(file)} />\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            </div>} */}\r\n                        <Button\r\n                            onClick={(e) => {\r\n                                e.preventDefault()\r\n                                let tempday = day\r\n                                tempday++;\r\n                                setDay(tempday)\r\n                                setItinerary(itinerary => [\r\n                                    ...itinerary,\r\n                                    {\r\n                                        day: tempday,\r\n                                        routeName: \"\",\r\n                                        routeDesc: \"\",\r\n                                        routeImg: '',\r\n                                    }\r\n                                ]);\r\n                            }}\r\n                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                            <li className=\"fas fa-plus\"></li>\r\n                        </Button>\r\n                        {day > 1 ? (<Button\r\n                            onClick={(e) => onUpdateItinerary(e)}\r\n                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                            Add Itinerary\r\n                        </Button>) :\r\n                            \"\"}\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItineraryForm\r\n\r\n\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  CardBody,\r\n  Card,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport PackageForm from \"./PackageForm\";\r\nimport ItineraryForm from \"./ItineraryForm\";\r\nconst PackageTab = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [packageId, setPackageId] = useState('');\r\n\r\n  const tabs = [\r\n    { id: \"1\", name: \"Package Information\", icon: \"fas fa-plus-square text-green\", visible: true },\r\n    { id: \"2\", name: \"Itinerary\", icon: \"fas fa-edit text-green\", visible: true }\r\n  ]\r\n  const actions = [\r\n    { icon: (<i class=\"fas fa-eye\"></i>), path: \"/app/package-view\", name: \"View Package List\" },\r\n  ]\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <PackageForm activeTab={activeTab} setActiveTab={setActiveTab} setPackageId={setPackageId} />\r\n              </TabPane>\r\n              {packageId !== \"\" ?\r\n                <TabPane tabId=\"2\">\r\n                  <ItineraryForm activeTab={activeTab} setActiveTab={setActiveTab} packageId={packageId} />\r\n                </TabPane> : (\r\n                  <Card className=\"bg-secondary shadow mb-4\">\r\n                    <CardBody>\r\n                      <h4>To add itinerary please first add your required package.</h4>\r\n                    </CardBody></Card>\r\n                )}\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PackageTab;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { RESTAURANT_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    address: Yup.string().required('Address room is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    desc: Yup.string().required('Description is required'),\r\n    country: Yup.string().required('Country is required'),\r\n})\r\n\r\nfunction RestaurantForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n    const [dateRange, setDateRange] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"hotel\");\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(RESTAURANT_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Hotels Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        address: '',\r\n                        contact: '',\r\n                        videoUrl: '',\r\n                        desc: '',\r\n                        country: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Restaurant Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Restaurant Name</label>\r\n                                            <input\r\n                                                name='name'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.name}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.name && props.touched.name ? (\r\n                                                <small className='form-text text-danger'>{props.errors.name}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country</label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Address  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact  </label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='desc'\r\n                                                className='form-control'\r\n                                                placeholder='Enter hotel description'\r\n                                                value={props.values.desc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.desc && props.touched.desc ? (\r\n                                                <small className='form-text text-danger'>{props.errors.desc}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                           \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default RestaurantForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport { AGENT_RESTAURANT_API, RESTAURANT_ALL_API } from '../services/api_url'\r\nimport PermissionHandler from 'services/permisionHandler'\r\n\r\nexport const RestaurantContext = createContext()\r\n\r\nconst RestaurantContextProvider = ({ children }) => {\r\n  const [restaurants, setRestaurants] = useState([])\r\n\r\n  useEffect(() => {\r\n    permissionController()\r\n  }, [])\r\n  const permissionController = async () => {\r\n    try {\r\n      let permission = await PermissionHandler();\r\n      if (permission.data.type === \"admin\") {\r\n        getAllRestaurant(); //for admin\r\n      } else {\r\n        getRestaurantByUser();//for agent\r\n      }\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const getRestaurantByUser = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_RESTAURANT_API)\r\n      if (result.data.success) {\r\n        setRestaurants(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Restaurant Error: ', error)\r\n    }\r\n  }\r\n  const getAllRestaurant = async () => {\r\n    try {\r\n      let result = await axios.get(RESTAURANT_ALL_API)\r\n      if (result.data.success) {\r\n        setRestaurants(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Restaurant Error: ', error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getRestaurantByUser()\r\n  }, [])\r\n\r\n  return <RestaurantContext.Provider value={{ restaurants, setRestaurants }}>{children}</RestaurantContext.Provider>\r\n}\r\n\r\nexport default RestaurantContextProvider","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { FOOD_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nimport { FOOD_TYPE } from 'MultipleOption';\r\nimport {RestaurantContext} from '../../contexts/AgentRestaurantContext'\r\nconst ValidationSchema = Yup.object().shape({\r\n    foodName: Yup.string().required('Name is required'),\r\n    price: Yup.string().required('Contact is required'),\r\n})\r\nfunction FoodForm() {\r\n    const {restaurants} =  useContext(RestaurantContext)\r\n    const [restaurantId, setRestaurantId] = useState('')\r\n    const [foodType, setFoodType] = useState('')\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 4;\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n    useEffect(() => {\r\n        restaurants.map((option, i) =>\r\n            newObj(option._id, option.name)\r\n        );\r\n    }, [arr])\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    const onSelectRestaurant = (item) => {\r\n        setRestaurantId(item.value)\r\n    }\r\n    const onSelectFoodType = (item) => {\r\n        setFoodType(item.value)\r\n    }\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"food\");\r\n            formData.append(\"foodType\", foodType);\r\n            formData.append(\"restaurant\", restaurantId);\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(FOOD_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    addToast(\"Food Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        foodName: '',\r\n                        price: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Food Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\" >Restaurant Name</label>\r\n                                            <Select\r\n                                                onChange={onSelectRestaurant}\r\n                                                options={arr} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Food Name</label>\r\n                                            <Field\r\n                                                name='foodName'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.foodName}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.foodName && props.touched.foodName ? (\r\n                                                <small classfoodName='form-text text-danger'>{props.errors.foodName}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='Enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Food Types</label>\r\n                                            <Select onChange={onSelectFoodType}\r\n                                                options={FOOD_TYPE} />\r\n                                        </FormGroup>\r\n                                    </Col> \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FoodForm\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport RestaurantForm from './RestaurantForm'\r\nimport FoodForm from \"./FoodForm\";\r\nconst RestaurantTab = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const tabs =[\r\n    {id:\"1\",name:\"Add Restaurant\",icon:\"fas fa-plus-square text-green\",visible: true},\r\n    {id:\"2\",name:\"Food Section\",icon:\"fas fa-plus-square text-green\",visible: true},\r\n]\r\n  const actions =[\r\n    {icon:(<i class=\"fas fa-eye\"></i>) ,path:\"/app/restaurant-view\",name:\"View Restaurant List\"},\r\n]\r\n\r\n\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <RestaurantForm /> {/* //Adding Hotel */}   \r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <FoodForm/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantTab;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\n// import { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from \"react-select\"\r\nimport { AMENITIES } from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    totalRoom: Yup.string().required('Total room is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    cancelPolicy: Yup.string().required('Cancel Policy is required'),\r\n    hotelDesc: Yup.string().required('Description is required')\r\n})\r\nfunction HotelForm({setActiveTab, setHotelId}) {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [amenities, setAmenities] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"hotel\");\r\n            //Amenities Array\r\n            for (var i = 0; i < amenities.length; i++) {\r\n                formData.append('amenities', amenities[i].value);\r\n            }\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(HOTEL_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    setHotelId(result.data.current_save_id);\r\n                    setActiveTab(\"2\")\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onSelectAmenities = (value) => {\r\n        setAmenities(value)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        totalRoom: '',\r\n                        address: '',\r\n                        country: '',\r\n                        // checkIn: '',\r\n                        // checkOut: '',\r\n                        cancelPolicy:'',\r\n                        hotelDesc: '',\r\n                        contact: '',\r\n                        videoUrl: ''\r\n                    }}\r\n                    // validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Hotel Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Hotel Name</label>\r\n                                            <input\r\n                                                name='name'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.name}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.name && props.touched.name ? (\r\n                                                <small className='form-text text-danger'>{props.errors.name}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Total Room</label>\r\n                                            <Field\r\n                                                name='totalRoom'\r\n                                                className='form-control'\r\n                                                placeholder='Enter total room'\r\n                                                value={props.values.totalRoom}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.totalRoom && props.touched.totalRoom ? (\r\n                                                <small className='form-text text-danger'>{props.errors.totalRoom}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country  </label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">\r\n                                                Address  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='hotelDesc'\r\n                                                className='form-control'\r\n                                                placeholder='Enter hotel description'\r\n                                                value={props.values.hotelDesc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Amenities</label>\r\n                                            <Select\r\n                                                isMulti\r\n                                                onChange={onSelectAmenities}\r\n                                                options={AMENITIES} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact</label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact number'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">\r\n                                                        Cancellation Policy </label>\r\n                                                    <select onChange={props.handleChange} name='cancelPolicy' className='form-control'>\r\n                                                        <option value=\"\">Select Cancel Policy</option>\r\n                                                        <option value=\"One day before check in (6 pm)\">One day before check in (6 pm)</option>\r\n                                                        <option value=\"Two day before check in (6 pm)\">Two day before check in (6 pm)</option>\r\n                                                    </select>\r\n                                                    {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                </Row>\r\n                                {/* //For check in check out  */}\r\n                                {/* <h6 className=\"heading-small text-muted mb-4\"> Amenities</h6>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-videoUrl\">\r\n                                                Check In/Out </label>\r\n                                            <DateRangePicker\r\n                                                onChange={item => setDateRange([item.selection])}\r\n                                                showSelectionPreview={true}\r\n                                                moveRangeOnFirstSelection={false}\r\n                                                months={2}\r\n                                                ranges={dateRange}\r\n                                                direction=\"horizontal\"\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                </Row> */}\r\n                                \r\n                                <hr className=\"my-4\" />\r\n                                <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                                    <Row>\r\n                                        <Col md=\"12\">\r\n                                            <FormGroup>\r\n                                                <ImageUploading\r\n                                                    multiple\r\n                                                    value={images}\r\n                                                    onChange={onImageSelectChange}\r\n                                                    maxNumber={maxNumber}\r\n                                                    dataURLKey=\"data_url\"\r\n                                                >\r\n                                                    {({\r\n                                                        imageList,\r\n                                                        onImageUpload,\r\n                                                        onImageUpdate,\r\n                                                        onImageRemove,\r\n                                                    }) => (\r\n                                                        <>\r\n                                                            <Row>\r\n                                                                <Col md=\"2\">\r\n                                                                    <div\r\n                                                                        onClick={onImageUpload}>\r\n                                                                        <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col md=\"8\">\r\n                                                                    {imageList.length != 0 ?\r\n                                                                        <div className=\"form-group multi-preview\">\r\n                                                                            {imageList.map((image, index) => (\r\n                                                                                <Row>\r\n                                                                                    <div className=\"col-md-8\">\r\n                                                                                        <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                            <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                        </CardTitle>\r\n                                                                                    </div>\r\n                                                                                    <Col className=\"col-auto\">\r\n                                                                                        <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                        <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                    </Col>\r\n                                                                                </Row>\r\n                                                                            ))}\r\n                                                                        </div> : \"Image not selected.\"}\r\n\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </>\r\n                                                    )}\r\n                                                </ImageUploading>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                            </div>\r\n\r\n                            <div className='pl-lg-4 form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default HotelForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport { AGENT_HOTEL_API, HOTEL_ALL_API } from '../services/api_url'\r\nimport PermissionHandler from 'services/permisionHandler'\r\n\r\nexport const HotelContext = createContext()\r\n\r\nconst HotelContextProvider = ({ children }) => {\r\n  const [hotels, setHotels] = useState([])\r\n  useEffect(() => {\r\n    permissionController()\r\n  }, [])\r\n  const permissionController = async () => {\r\n    try {\r\n      let permission = await PermissionHandler();\r\n      if (permission.data.type === \"admin\") {\r\n        getAllHotels(); //for admin\r\n      } else {\r\n        getHotelDetails();//for agent\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const getHotelDetails = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_HOTEL_API)\r\n      if (result.data.success) {\r\n        setHotels(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Hotel Error: ', error)\r\n    }\r\n  }\r\n\r\n  const getAllHotels = async () => {\r\n    try {\r\n      let result = await axios.get(HOTEL_ALL_API)\r\n      console.log(result)\r\n      if (result.data.success) {\r\n        setHotels(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      alert(\"data fetching error\")\r\n    }\r\n  }\r\n\r\n  return <HotelContext.Provider value={{ hotels, setHotels }}>{children}</HotelContext.Provider>\r\n}\r\n\r\nexport default HotelContextProvider","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_ROOM_ADD_API, AGENT_HOTEL_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nimport { HotelContext } from '../../contexts/HotelContext'\r\nimport { ROOM_TYPE } from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    price: Yup.string().required('Price is required'),\r\n    numberOfRoom: Yup.string().required('Total room is required'),\r\n    seat: Yup.string().required('seat is required'),\r\n})\r\n\r\nfunction HotelRoomForm({hotelId}) {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const [roomType, setRoomType] = useState(\"\");\r\n    const maxNumber = 10;\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n   \r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"room\");\r\n            formData.append(\"hotelId\", hotelId);\r\n            formData.append(\"type\", roomType);\r\n            //Package Image Arrary\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            //Non-Array Value to store package desc, name, title\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(HOTEL_ROOM_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Room Added. Add more if you want to\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const onSelectRoomType = (roomType) => {\r\n        setRoomType(roomType.value)\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        price:\"\",\r\n                        numberOfRoom: '',\r\n                        seat: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Hotel Room Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    {/* <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-username\" >Hotel Name</label>\r\n                                            <Select\r\n                                                onChange={onSelectHotelOption}\r\n                                                options={arr} />\r\n                                        </FormGroup>\r\n                                    </Col> */}\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-price\"\r\n                                            >Room Type</label>\r\n                                            <Select\r\n                                                onChange={onSelectRoomType}\r\n                                                options={ROOM_TYPE} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"> Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Number of room  </label>\r\n                                            <Field\r\n                                                name='numberOfRoom'\r\n                                                className='form-control'\r\n                                                placeholder='Enter number of room'\r\n                                                value={props.values.numberOfRoom}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.numberOfRoom && props.touched.numberOfRoom ? (\r\n                                                <small className='form-text text-danger'>{props.errors.numberOfRoom}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Available Seat(Person per bed)</label>\r\n                                            <Field\r\n                                                name='seat'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Seat per person'\r\n                                                value={props.values.seat}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.seat && props.touched.seat ? (\r\n                                                <small className='form-text text-danger'>{props.errors.seat}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                        <Col md=\"2\">\r\n                                                                <div \r\n                                                                    onClick={onImageUpload}>\r\n                                                                   <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default HotelRoomForm","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  TabContent,\r\n  TabPane,\r\n  CardBody,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport HotelForm from \"./HotelForm\";\r\nimport HotelRoomForm from \"./HotelRoomForm\";\r\nconst HotelTab = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [hotelId, setHotelId] = useState('');\r\n\r\n  const tabs = [\r\n    { id: \"1\", name: \"Add\", icon: \"fas fa-plus-square text-green\", visible: true },\r\n    { id: \"2\", name: \"Room\", icon: \"fas fa-edit text-green\", visible: true }\r\n  ]\r\n  const actions = [\r\n    { icon: (<i class=\"fas fa-eye\"></i>), path: \"/app/hotel-view\", name: \"View Hotel List\" },\r\n  ]\r\n\r\n\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <HotelForm activeTab={activeTab} setActiveTab={setActiveTab} setHotelId={setHotelId} /> {/* //Adding Hotel */}\r\n              </TabPane>\r\n              {hotelId !== \"\" ?\r\n                <TabPane tabId=\"2\">\r\n                  <HotelRoomForm activeTab={activeTab} setActiveTab={setActiveTab} hotelId={hotelId} />\r\n                </TabPane> : (\r\n                  <Card className=\"bg-secondary shadow mb-4\">\r\n                    <CardBody>\r\n                      <h4>To add room please {hotelId}  first add your hotel detail.</h4>\r\n                    </CardBody></Card>\r\n                )}\r\n\r\n\r\n\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotelTab;\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { CLUB_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nconst ValidationSchema = Yup.object().shape({\r\n    clubName: Yup.string().required('Name is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n})\r\nfunction ClubForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 4;\r\n  \r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    const onAddTrigger = async (values, actions) => {\r\n     \r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"club\");\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(CLUB_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    addToast(\"Club Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        clubName: '',\r\n                        address: '',\r\n                        country: '',\r\n                        desc: '',\r\n                        contact: ''\r\n                    }}\r\n                    // validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                               Club Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                  \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Club Name</label>\r\n                                            <Field\r\n                                                name='clubName'\r\n                                                className='form-control'\r\n                                                placeholder='Enter club name'\r\n                                                value={props.values.clubName}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.clubName && props.touched.clubName ? (\r\n                                                <small classclubName='form-text text-danger'>{props.errors.clubName}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country</label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact</label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>    \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Address</label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                              {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>                                \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"8\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description</label>\r\n                                            <Field\r\n                                                name='desc'\r\n                                                className='form-control'\r\n                                                placeholder='Describe about your club in detail.'\r\n                                                value={props.values.desc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                              {props.errors.desc && props.touched.desc ? (\r\n                                                <small className='form-text text-danger'>{props.errors.desc}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ClubForm\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    TabContent,\r\n    TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport ClubForm from \"./ClubForm\";\r\nconst ClubTab = () => {\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n    const tabs = [\r\n        { id: \"1\", name: \"Add\", icon: \"fas fa-plus-square text-green\",visible: false },\r\n    ]\r\n    const actions = [\r\n        { icon: (<i class=\"fas fa-eye\"></i>), path: \"/app/club-view\", name: \"View Club List\" },\r\n    ]\r\n    return (\r\n        <>\r\n            <BannerHeader actions={actions} />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                <Row>\r\n                    <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n                        <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ClubForm /> {/* //Adding Hotel */}\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClubTab;\r\n","import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Col } from 'reactstrap';\r\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nconst DataTable = ({ columns, data, defaultSorted }) => {\r\n  const { ToggleList } = ColumnToggle;\r\n  const { SearchBar } = Search;\r\n  const options = {\r\n    custom: true,\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: '<<',\r\n    prePageText: '<',\r\n    nextPageText: '>',\r\n    lastPageText: '>>',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: data.length\r\n  };\r\n  const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\r\n    sortOrder === 'asc' ? 'demo-sorting-asc' : 'demo-sorting-desc'\r\n  );\r\n  \r\n  const rowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n      //  console.log(row);\r\n    }\r\n  };\r\n  const rowStyle2 = (row, rowIndex) => {\r\n    const style = {};\r\n    if (row.id > 3) {\r\n      style.backgroundColor = '#c8e6c9';\r\n    } else {\r\n      style.backgroundColor = '#00BFFF';\r\n    }\r\n  \r\n    if (rowIndex > 2) {\r\n      style.fontWeight = 'bold';\r\n      style.color = 'white';\r\n    }\r\n  \r\n    return style;\r\n  };\r\n  // const rowStyle = { backgroundColor: '#c8e6c9', height: '70px', fontSize:\"100px\"};\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"id\"\r\n        columns={columns}\r\n        data={data}\r\n        search\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <hr />\r\n              <SearchBar\r\n                className=\"col-md-12\"\r\n                style={{ width: '300px' }}\r\n                placeholder=\"Search\"\r\n                {...props.searchProps} />\r\n              <BootstrapTable\r\n                classes=\"table-responsive table-dark table-f\"\r\n                keyField=\"id\"\r\n                data={data}\r\n                columns={columns}\r\n                rowEvents={rowEvents}\r\n                filter={filterFactory()}\r\n                defaultSorted={defaultSorted}\r\n                {...props.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </ToolkitProvider>\r\n      <PaginationListStandalone {...paginationProps} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <PaginationProvider\r\n      pagination={\r\n        paginationFactory(options)\r\n      }\r\n    >\r\n      {contentTable}\r\n    </PaginationProvider>\r\n  );\r\n}\r\n\r\n// import BootstrapTable from 'react-bootstrap-table-next';\r\n// import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\n// import filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n// import paginationFactory from 'react-bootstrap-table2-paginator';\r\n// const DataTable = ({ columns, data,defaultSorted }) => {\r\n//     return (\r\n//         <BootstrapTable\r\n//            bodyClasses=\"foo\"\r\n//             bootstrap4\r\n//             keyField=\"id\"\r\n//             data={data}\r\n//             columns={columns}\r\n//             defaultSorted={defaultSorted}\r\n//         />\r\n//     )\r\n// }\r\n\r\nexport default DataTable;","import React from \"react\";\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst NoActionBanner = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-2 pt-1 pt-lg-7 d-flex align-items-center\">\r\n        <span className=\"mask bg-gradient-default opacity-7\" />\r\n        {/* <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"action\">\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoActionBanner;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { APPROVE_PRE_REGISTER, PRE_REGISTER_GET } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\n\r\nfunction PreRegisters() {\r\n    const { addToast } = useToasts()\r\n    const [business, setBusiness] = useState([])\r\n    const confirmAction = (_id) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Confirmation for business approval.</h4>\r\n                        <p>Are you sure you want to confirm this business? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => {\r\n                                onApprove(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Approve</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const getAllBusinessDetail = async () => {\r\n        try {\r\n            let result = await axios.get(PRE_REGISTER_GET)\r\n            if (result.data.success) {\r\n                setBusiness(result.data.data)\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Data fetching error\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onApprove = async (id) => {\r\n        try {\r\n            let result = await axios.put(APPROVE_PRE_REGISTER + id,{\r\n                status:true\r\n            })\r\n            if (result.data.success) {\r\n                window.location.reload();\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Cannot Approve\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n        const onApproveAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div >\r\n                {row.status ? \"\" :<Button className=\"btn btn-success button\" onClick={(e) => confirmAction(row._id)}><i class=\"fas fa-check-double\"></i></Button>}\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc' \r\n    }];\r\n    const statusFormat = (cell, row, rowIndex, formatExtraData) => {\r\n        return <div >\r\n            {!row.status ? <span className=\"text-red\">Pending</span> :<span className=\"text-green\">Approved</span>}\r\n        </div>\r\n    }\r\n    const columns = [\r\n        { dataField: 'fullName',text: 'Name', },\r\n        { dataField: 'businessName', text: 'Business'},\r\n        { dataField: 'address', text: 'Address' },\r\n        { dataField: 'email', text: 'Email' },\r\n        { dataField: 'contact', text: 'Contact' },\r\n        { dataField: 'businessFor', text: 'Approach' },\r\n        { dataField: 'other', text: 'Other' },\r\n        { dataField: 'createdAt',sort:defaultSorted, text: 'Date',formatter:(cell,row)=>{return <span >{moment(row.createdAt).format(\"dddd, MMMM Do YYYY\")}</span>}},\r\n        { dataField: 'status', text: 'Approval', formatter: statusFormat },\r\n        { dataField: 'Action', text: 'Action', formatter: onApproveAction },\r\n    ];\r\n    useEffect(() => {\r\n        getAllBusinessDetail()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={business} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PreRegisters\r\n","import React, { useState, createContext } from 'react'\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\n\r\nexport const PreLoaderContext = createContext()\r\n\r\nconst override = css`\r\n\tdisplay: block;\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tborder-color: #5491d4;\r\n\tz-index: 10000;\r\n\t\r\n`\r\n\r\nconst PreloaderContextProvider = ({ children }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\treturn (\r\n\t\t<PreLoaderContext.Provider value={{ isLoading, setIsLoading }}>\r\n\t\t\t{children}\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='pre-loader'></div>\r\n\t\t\t\t\t<GridLoader css={override} size={20} color={'#5491d4'} loading={isLoading} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</PreLoaderContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default PreloaderContextProvider\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { USERS_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nconst ValidationSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    gender: Yup.string().required('Gender is required'),\r\n    fullname: Yup.string().required('Fullname is required')\r\n})\r\nfunction UserAdd() {\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const onAddTrigger = async (values, actions) => {\r\n        try {\r\n            let result = await axios.post(USERS_ADD_API, values);\r\n            if (result.data.success) {\r\n                removeAllToasts()\r\n                window.location.reload();\r\n            }else{\r\n                addToast(result.data.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                removeAllToasts()\r\n                addToast(error.response.data.err, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">User Add Form</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            contact: '',\r\n                            gender: '',\r\n                            country: '',\r\n                            address: '',\r\n                            fullname: ''\r\n                        }}\r\n                        validationSchema={ValidationSchema}\r\n                        onSubmit={(values, actions) => {\r\n                            onAddTrigger(values, actions)\r\n                        }}>\r\n                        {props => (\r\n                            <Form className='col-md-12'>\r\n                                <div className=\"pl-lg-2\">\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Full Name</label>\r\n                                                <input\r\n                                                    name='fullname'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter your fullname'\r\n                                                    value={props.values.fullname}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.fullname && props.touched.fullname ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.fullname}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Email</label>\r\n                                                <Field\r\n                                                    name='email'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter email'\r\n                                                    value={props.values.email}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.email && props.touched.email ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.email}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Country  </label>\r\n                                                <Field\r\n                                                    name='country'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter country'\r\n                                                    value={props.values.country}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.country && props.touched.country ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Address  </label>\r\n                                                <Field\r\n                                                    name='address'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter address'\r\n                                                    value={props.values.address}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.address && props.touched.address ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Gender</label>\r\n                                                <select className='form-control' name=\"gender\"\r\n                                                    onChange={props.handleChange}>\r\n                                                    <option value=\"male\">Male</option>\r\n                                                    <option value=\"female\">Female</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Contact </label>\r\n                                                <Field\r\n                                                    name='contact'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter contact'\r\n                                                    value={props.values.contact}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.contact && props.touched.contact ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div className='pl-lg-4 form-group'>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAdd","import React, { useState, useContext, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { USERS_GET, USER_DELETE_API, USER_UPDATE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { PreLoaderContext } from '../../contexts/PreLoaderContext'\r\nimport Roles from '../../role'\r\nimport UserAdd from './UserAdd'\r\n\r\nfunction UsersDetails() {\r\n    const { setIsLoading } = useContext(PreLoaderContext)\r\n    const { addToast } = useToasts()\r\n    const [users, setUsers] = useState([])\r\n\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} User</h4>\r\n                        <p>Are you sure you want to delete this data? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteUser(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const getAllUsers = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            let result = await axios.get(USERS_GET)\r\n            console.log(result)\r\n            if (result.data.success) {\r\n                setIsLoading(false)\r\n\r\n                setUsers(result.data.users)\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n\r\n            if (error.response) {\r\n                addToast(error.response.data.error, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const onDeleteUser = async (id) => {\r\n        try {\r\n            let result = await axios.delete(USER_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Cannot delete\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onUpdateRole = async (e, id) => {\r\n        try {\r\n            let result = await axios.put(USER_UPDATE_API, {\r\n                type: e.target.value,\r\n                _id: id\r\n            })\r\n            if (result.data.success) {\r\n                window.location.reload();\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Update failed\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const actionOptionRow = (cell, row, rowIndex, formatExtraData) => {\r\n        return <>\r\n            <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-edit\"></i></Button>\r\n            <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.fullname)}><i class=\"fas fa-trash\"></i></Button>\r\n        </>\r\n    }\r\n    const userRoleSelection = (cell, row, rowIndex, formatExtraData) => {\r\n        return <>\r\n            <select className=\"form-control\" onChange={(e) => onUpdateRole(e, row._id)}>\r\n                <option>Not assigned</option>\r\n                {Roles.map((role) =>\r\n                    <option value={role.value} selected={row.type?.includes(role.value)}>\r\n                        {role.label}\r\n                    </option>\r\n                )}\r\n\r\n            </select>\r\n        </>\r\n    }\r\n    const columns = [\r\n        { dataField: 'fullname', text: 'Full Name' },\r\n        { dataField: 'email', text: 'Email' },\r\n        { dataField: 'contact', text: 'Contact' },\r\n        { dataField: 'gender', text: 'Gender' },\r\n        { dataField: 'country', text: 'Country' },\r\n        { dataField: 'address', text: 'Address' },\r\n        { dataField: 'type', text: 'Role', formatter: userRoleSelection },\r\n        { dataField: 'Action', text: 'Action', formatter: actionOptionRow },\r\n        // { dataField: 'userImage', text: 'Date', formatter: (cell, row) => { return <img src={row.userImage}/> } },\r\n    ];\r\n    useEffect(() => {\r\n        getAllUsers()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <UserAdd/>\r\n                    <div className=\"pb-3\">\r\n                        <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"><i class=\"fas fa-plus-circle\"></i></button>\r\n                    </div>\r\n                    <DataTable columns={columns} data={users} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersDetails\r\n","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { HotelContext } from 'contexts/HotelContext'\r\n\r\nfunction HotelDetails() {\r\n    const { addToast } = useToasts()\r\n    const {hotels} = useContext(HotelContext);\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Hotel</h4>\r\n                        <p>Are you sure you want to delete this hotel? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(HOTEL_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onDateText = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n           <span >{moment(row.startDate).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const columns = [\r\n        { dataField: 'name', text: 'Hotel Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'totalRoom', text: 'Total Room',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'hotelDesc', text: 'Description',filter: textFilter() },\r\n        { dataField: 'videoUrl', text: 'Link'},\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    // useEffect(() => {\r\n    //     getAllHotels()\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={hotels} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HotelDetails\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { PACKAGES_TYPE } from './PackageType';\r\nimport { PACKAGE_UPDATE_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { includesOption } from '../../MultipleOption'\r\n\r\nfunction PackageUpdate({ pckg, pkgId, setIsUpdate }) {\r\n    const initialValue = pckg;\r\n    const [includes, setIncludes] = useState([]);\r\n    const [value, onChange] = useState(new Date());\r\n    const [isPrice, setIsPrice] = useState(false)\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const GroupDiscountModel = {\r\n        people: 0,\r\n        discount: 0,\r\n    }\r\n    const [groupDiscount, setGroupDiscount] = useState([GroupDiscountModel]);\r\n    const onUpdate = async (values, actions) => {\r\n        console.log(pckg);\r\n        return\r\n        const formData = new FormData();\r\n        formData.append(\"event\", \"package\");\r\n        formData.append(\"startDate\", value);\r\n        formData.append(\"_id\", pkgId);\r\n        //Includes Array\r\n        for (var i = 0; i < includes.length; i++) {\r\n            formData.append('includes', includes[i].name);\r\n        }\r\n        formData.append(\"groupDiscount\", JSON.stringify(groupDiscount));\r\n        //Non-Array Value to store package desc, name, title\r\n        for (const property in values) {\r\n            formData.append(property, values[property]);\r\n        }\r\n        try {\r\n            let result = await axios.post(PACKAGE_UPDATE_API, formData);\r\n            if (result.data.success) {\r\n                removeAllToasts()\r\n                actions.resetForm();\r\n                addToast(\"Packages Added\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                removeAllToasts()\r\n                addToast(error.response.data.error, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n\r\n    const onRemove = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"pb-3\">\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={(e) => setIsUpdate(false)}\r\n                >Bacl to list</button>\r\n            </div>\r\n            <Formik\r\n            enableReinitialize\r\n                initialValues={initialValue}\r\n                // validationSchema={ValidationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    onUpdate(values, actions)\r\n                }}>\r\n                {props => (\r\n                    <Form className='mt-2'>\r\n                        <h6 className=\"heading-small text-muted mb-4\">Add Packages</h6>\r\n                        <div className=\"pl-lg-4\">\r\n                            {!isPrice ? (\r\n                                <React.Fragment>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Package Type  </label>\r\n                                                <select onChange={props.handleChange} name='packageType' className='form-control'>\r\n                                                    <option>Select Package Type</option>\r\n                                                    {PACKAGES_TYPE.map((data, i) => (\r\n                                                        <option key={i} value={data}\r\n                                                        // selected={type?.includes(data.packageType)}\r\n                                                        >\r\n                                                            {data}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\"\r\n                                                    htmlFor=\"input-username\" >Package Title</label>\r\n                                                <input\r\n                                                    name='title'\r\n                                                    className='form-control'\r\n                                                    placeholder='e.g: anapurna base camp'\r\n                                                    value={props.values.title}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.title && props.touched.title ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.title}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                       \r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\"\r\n                                                    htmlFor=\"input-first-name\"\r\n                                                > Destination</label>\r\n                                                <Field\r\n                                                    name='destination'\r\n                                                    className='form-control'\r\n                                                    placeholder='e.g. Kathmandu'\r\n                                                    value={props.values.destination}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.destination && props.touched.destination ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.destination}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\"\r\n                                                    htmlFor=\"input-address\">\r\n                                                    Meeting Point  </label>\r\n                                                <Field\r\n                                                    name='address'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter address'\r\n                                                    value={props.values.address}\r\n                                                    onChange={props.handleChange('address')}\r\n                                                />\r\n                                                {props.errors.address && props.touched.address ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"2\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Minimum traveler</label>\r\n                                                <Field\r\n                                                    name='minTraveler'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter minimum traveler'\r\n                                                    value={props.values.minTraveler}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.minTraveler && props.touched.minTraveler ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.minTraveler}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"2\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Duration  </label>\r\n                                                <Field\r\n                                                    name='duration'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter duration'\r\n                                                    value={props.values.duration}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.duration && props.touched.duration ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.duration}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Start Date  </label>\r\n                                                <DateTimePicker\r\n                                                    className=\"react-datetime-picker form-control\"\r\n                                                    onChange={onChange}\r\n                                                    value={value}\r\n                                                    format=\"y-MM-dd h:mm:ss a\"\r\n                                                    minDate={new Date()}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg=\"12\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Overview </label>\r\n                                                <textarea\r\n                                                    rows=\"4\"\r\n                                                    cols=\"40\"\r\n                                                    name='overview'\r\n                                                    className='form-control'\r\n                                                    placeholder='Specify your package overview'\r\n                                                    value={props.values.overview}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.overview && props.touched.overview ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.overview}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <>\r\n                                    <Row>\r\n                                        <Col lg=\"2\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Price per person  </label>\r\n                                                <Field\r\n                                                    name='price'\r\n                                                    className='form-control'\r\n                                                    placeholder='Price per person'\r\n                                                    value={props.values.price}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.price && props.touched.price ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <h2>10% Commission wil be charged on every booking</h2></Col>\r\n                                    </Row>\r\n                                    <h6 className=\"heading-small text-muted mb-4\"> Group Discount</h6>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            {groupDiscount.map((p, index) => {\r\n                                                return (\r\n                                                    <Row>\r\n                                                        <Col md=\"6\">\r\n                                                            <FormGroup>\r\n                                                                <label\r\n                                                                    className=\"form-control-label\">Number of people </label>\r\n                                                                <Field\r\n                                                                    name='people'\r\n                                                                    className='form-control'\r\n                                                                    placeholder='Enter number of people'\r\n                                                                    // value={p.people ? p.people: null}\r\n                                                                    onChange={e => {\r\n                                                                        const people = e.target.value;\r\n                                                                        var temp = groupDiscount\r\n                                                                        temp[index].people = people\r\n                                                                        setGroupDiscount(temp)\r\n                                                                    }}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md=\"6\">\r\n                                                            <FormGroup>\r\n                                                                <label\r\n                                                                    className=\"form-control-label\"> Discount (in Rs) </label>\r\n                                                                <Field\r\n                                                                    name='discount'\r\n                                                                    className='form-control'\r\n                                                                    placeholder='Enter your discount rate'\r\n                                                                    // value={p}\r\n                                                                    onChange={e => {\r\n                                                                        const discount = e.target.value;\r\n                                                                        var temp = groupDiscount\r\n                                                                        temp[index].discount = discount\r\n                                                                        setGroupDiscount(temp)\r\n                                                                    }}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                    </Row>\r\n                                                );\r\n                                            })}\r\n                                        </Col>\r\n                                        <Button\r\n                                            onClick={(e) => {\r\n                                                e.preventDefault()\r\n                                                setGroupDiscount(discount => [\r\n                                                    ...discount,\r\n                                                    {\r\n                                                        people: \"\",\r\n                                                        discount: \"\",\r\n                                                    }\r\n                                                ]);\r\n                                            }}\r\n                                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                                            <li className=\"fas fa-plus\"></li>\r\n                                        </Button>\r\n                                    </Row>\r\n                                    <hr className=\"my-2\" />\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Include Section </label>\r\n                                                <Multiselect\r\n                                                    displayValue=\"key\"\r\n                                                    className='form-control'\r\n                                                    options={includesOption}\r\n                                                    displayValue=\"name\"\r\n                                                    onSelect={onSelect}\r\n                                                    onRemove={onRemove}\r\n                                                    style={{\r\n                                                        chips: { background: \"#0f367c\" },\r\n                                                        searchBox: {\r\n                                                            border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"12\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Cancellation Policy </label>\r\n                                                <select onChange={props.handleChange} name='cancelPolicy' className='form-control'>\r\n                                                    <option value=\"One day before check in (6 pm)\">One day before check in (6 pm)</option>\r\n                                                    <option value=\"Two day before check in (6 pm)\">Two day before check in (6 pm)</option>\r\n                                                </select>\r\n                                                {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <div className='pl-lg-4 form-group'>\r\n                            <div className=\"text-left\">\r\n                                {isPrice ? (\r\n                                    <>\r\n                                        <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(false)} type=\"button\">\r\n                                            Back </button>\r\n                                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                                            Confirm</button>\r\n                                    </>) :\r\n                                    <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(true)} type=\"button\">\r\n                                        Next\r\n                                        </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PackageUpdate\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { useContext,useState } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { PACKAGE_UPDATE_API, PACKAGE_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { PackagesContext } from 'contexts/AgentPackageContext'\r\nimport PackageUpdate from './PackageUpdate'\r\n\r\nfunction PackageDetails() {\r\n    const { addToast } = useToasts()\r\n    const [updateData, setUpdateData] = useState([])\r\n    const [isUpdate, setIsUpdate] = useState(false)\r\n    const [pkgId, setPkgId] = useState(\"\")\r\n    const { packages } = useContext(PackagesContext)\r\n    const confirm = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">{title}</h4>\r\n                        <p>Are you sure? This action cannot be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeletePackage(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Confirm it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const onUpdateChange = (id, pckg) => {\r\n        setIsUpdate(true);\r\n        setUpdateData(pckg);\r\n        setPkgId(id);\r\n    }\r\n    const onDeletePackage = async (id) => {\r\n        try {\r\n            let result = await axios.delete(PACKAGE_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onPublish = async (e, id) => {\r\n        try {\r\n            let result = await axios.put(PACKAGE_UPDATE_API, {\r\n                _id: id,\r\n                status: true\r\n            })\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Publish failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const onDraftAndPublish = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <div>\r\n                {!row.status ? (\r\n                    <Button className=\"btn btn-success\" onClick={(e) => onPublish(e, row._id)}><i class=\"fas fa-share\"></i></Button>\r\n                ) : <span className=\"text-green\">Published</span>}\r\n            </div>\r\n        );\r\n    }\r\n    const onDateText = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <span >{moment(row.startDate).format(\"llll\")}</span>\r\n            </>\r\n        );\r\n    };\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{ width: \"250px\" }}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => onUpdateChange(row._id, row)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirm(row._id, `Delete this ${row.title}`)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'title', text: 'Title', sort: true, filter: textFilter() },\r\n        { dataField: 'packageType', text: 'Type', filter: textFilter() },\r\n        { dataField: 'destination', text: 'Destination', filter: textFilter() },\r\n        { dataField: 'address', text: 'Meeting Point', filter: textFilter() },\r\n        { dataField: 'price', text: 'price', sort: true, filter: textFilter() },\r\n        { dataField: 'minTraveler', text: 'Min Traveler', sort: true, filter: textFilter() },\r\n        { dataField: 'startDate', text: 'Date', formatter: onDateText },\r\n        { dataField: 'status', text: 'Status', sort: true, formatter: onDraftAndPublish },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    // useEffect(() => {\r\n    //     getAllPackages()\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    {isUpdate ? <PackageUpdate pckg={updateData} pkgId={pkgId} setIsUpdate={setIsUpdate}/>:\r\n                    <DataTable columns={columns} data={packages} defaultSorted={defaultSorted} /> }\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PackageDetails\r\n","import React, { useState, useEffect, useMemo, useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { RESTAURANT_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport 'moment-precise-range-plugin';\r\nimport { RestaurantContext } from 'contexts/AgentRestaurantContext'\r\n\r\nfunction RestaurantDetails() {\r\n    const { addToast } = useToasts()\r\n    const { restaurants } = useContext(RestaurantContext)\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Restaurant</h4>\r\n                        <p>Are you sure you want to delete this restaurant? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    // delete selected restaurant\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(RESTAURANT_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{ width: \"200px\" }}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const columns = [\r\n        { dataField: 'name', text: 'Hotel Name', sort: true, filter: textFilter() },\r\n        { dataField: 'address', text: 'Address', filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact', filter: textFilter() },\r\n        { dataField: 'desc', text: 'Description', filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={restaurants} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestaurantDetails\r\n","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport axios from '../services/axios'\r\nimport {AGENT_CLUB_API} from '../services/api_url'\r\n\r\nimport {PreLoaderContext} from '../contexts/PreLoaderContext'\r\nexport const ClubContext = createContext()\r\n\r\nconst ClubContextProvider = ({ children }) => {\r\n  const { setIsLoading } = useContext(PreLoaderContext)\r\n\r\n  const [clubs, setClubs] = useState([])\r\n\r\n  // get all Club\r\n  const getClubByUser = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      let result = await axios.get(AGENT_CLUB_API)\r\n      if (result.data.success) {\r\n      setIsLoading(false)\r\n        setClubs(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      // console.error('Get All Club Error: ', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClubByUser()\r\n  }, [])\r\n\r\n  return <ClubContext.Provider value={{ clubs, setClubs }}>{children}</ClubContext.Provider>\r\n}\r\n\r\nexport default ClubContextProvider","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { CLUB_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { ClubContext } from 'contexts/AgentClubContext'\r\n\r\nfunction ClubDetails() {\r\n    const { addToast } = useToasts()\r\n    const {clubs} = useContext(ClubContext);\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Club</h4>\r\n                        <p>Are you sure you want to delete this club? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(CLUB_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'clubName', text: 'Club Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n \r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={clubs} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClubDetails\r\n","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { CLUB_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { ClubContext } from 'contexts/AgentClubContext'\r\n\r\nfunction BookingDetails() {\r\n    const { addToast } = useToasts()\r\n    const {clubs} = useContext(ClubContext);\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Club</h4>\r\n                        <p>Are you sure you want to delete this club? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    // delete selected Packages\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(CLUB_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const deleteAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'date', text: 'Booking Date', sort: true,filter: textFilter() },\r\n        { dataField: 'bookedFrom', text: 'Available',filter: textFilter() },\r\n        { dataField: 'type', text: 'Booking Type', filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: deleteAction },\r\n    ];\r\n \r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={clubs} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookingDetails\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport PackageTab from \"views/package/PackageTab\";\r\nimport RestaurantTab from \"views/restaurant/RestaurantTab\";\r\nimport HotelTab from \"views/hotel/HotelTab\";\r\nimport ClubTab from \"views/club/ClubTab\";\r\nimport PreRegisters from \"views/pre-register/PreRegisters\";\r\nimport UserDetails from \"views/user/UserDetails\";\r\nimport HotelDetails from \"views/hotel/HotelDetails\";\r\nimport PackageDetails from \"views/package/PackageDetails\";\r\nimport RestaurantDetails from \"views/restaurant/RestaurantDetails\";\r\nimport ClubDetails from \"views/club/ClubDetails\";\r\nimport BookingDetails from \"views/booking/BoookingDetails\";\r\nvar adminRoutes =[\r\n    {\r\n      path: \"/dashboard\",\r\n      name: \"Dashboard\",\r\n      icon: \"ni ni-tv-2 text-primary\",\r\n      component: Index,\r\n      layout: \"/app\"\r\n    },\r\n    {\r\n      path: \"/package\",\r\n      name: \"Add Package\",\r\n      icon: \"fas fa-route text-blue\",\r\n      component: PackageTab,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/package-view\",\r\n      name: \"Package List\",\r\n      icon: \"fas fa-route text-blue\",\r\n      component: PackageDetails,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/hotel\",\r\n      name: \"Add Hotel\",\r\n      icon: \"fa fa-bed text-orange\",\r\n      component: HotelTab,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/hotel-view\",\r\n      name: \"Hotel List\",\r\n      icon: \"fa fa-bed text-orange\",\r\n      component: HotelDetails,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/restaurant\",\r\n      name: \"Add Restaurant\",\r\n      icon: \"fas fa-utensils text-yellow\",\r\n      component: RestaurantTab,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/restaurant-view\",\r\n      name: \"Restaurant List\",\r\n      icon: \"fas fa-utensils text-yellow\",\r\n      component: RestaurantDetails,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/club\",\r\n      name: \"Add Club\",\r\n      icon: \"fas fa-glass-cheers text-orange\",\r\n      component: ClubTab,\r\n      layout: \"/app\"\r\n    },\r\n    {\r\n      path: \"/club-view\",\r\n      name: \"Club List\",\r\n      icon: \"fas fa-glass-cheers text-orange\",\r\n      component: ClubDetails,\r\n      layout: \"/app\"\r\n    },\r\n    // {\r\n    //   path: \"/gallery\",\r\n    //   name: \"Gallery\",\r\n    //   icon: \"fas fa-images text-blue\",\r\n    //   // component: Register,\r\n    //   layout: \"/app\"\r\n    // },\r\n    {\r\n      path: \"/booking\",\r\n      name: \"Booking\",\r\n      icon: \"fas fa-images text-blue\",\r\n      component: BookingDetails,\r\n      layout: \"/app\"\r\n    },\r\n    // {\r\n    //   path: \"/review\",\r\n    //   name: \"Review\",\r\n    //   icon: \"fas fa-images text-blue\",\r\n    //   component: ReviewDetails,\r\n    //   layout: \"/app\"\r\n    // },\r\n    {\r\n      path: \"/registration\",\r\n      name: \"Pre-Registration\",\r\n      icon: \"fas fa-check text-orange\",\r\n      component: PreRegisters,\r\n      layout: \"/app\"\r\n    },\r\n    {\r\n      path: \"/users\",\r\n      name: \"Users\",\r\n      icon: \"fas fa-user text-orange\",\r\n      component: UserDetails,\r\n      layout: \"/app\"\r\n    },\r\n\r\n ]\r\n\r\nexport default adminRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport PackageDetails from \"views/package/PackageDetails\";\r\nimport PackageTab from \"views/package/PackageTab\";\r\nvar travelRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\",\r\n    },\r\n  {\r\n    path: \"/package\",\r\n    name: \"Package Add\",\r\n    icon: \"fas fa-route text-blue\",\r\n    component: PackageTab,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/package-view\",\r\n    name: \"Package List\",\r\n    icon: \"fas fa-route text-blue\",\r\n    component: PackageDetails,\r\n    layout: \"/app\",\r\n  }\r\n];\r\n\r\nexport default travelRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport RestaurantDetails from \"views/restaurant/RestaurantDetails\";\r\nimport RestaurantTab from \"views/restaurant/RestaurantTab\";\r\nvar restaurantRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\"\r\n      },\r\n  {\r\n    path: \"/restaurant\",\r\n    name: \"Restaurant Add\",\r\n    icon: \"fas fa-utensils text-yellow\",\r\n    component: RestaurantTab,\r\n    layout: \"/app\"\r\n    },\r\n  {\r\n    path: \"/restaurant-view\",\r\n    name: \"Restaurant List\",\r\n    icon: \"fas fa-utensils text-yellow\",\r\n    component: RestaurantDetails,\r\n    layout: \"/app\"\r\n    }\r\n];\r\n\r\nexport default restaurantRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport ClubTab from \"views/club/ClubTab\";\r\nimport ClubDetails from \"views/club/ClubDetails\";\r\nvar clubRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/club\",\r\n    name: \"Club Add\",\r\n    icon: \"fas fa-glass-cheers text-orange\",\r\n    component: ClubTab,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/club-view\",\r\n    name: \"Club List\",\r\n    icon: \"fas fa-glass-cheers text-orange\",\r\n    component: ClubDetails,\r\n    layout: \"/app\",\r\n  },\r\n];\r\n\r\nexport default clubRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport HotelTab from \"views/hotel/HotelTab\";\r\nimport HotelDetails from \"views/hotel/HotelDetails\";\r\nvar hotelRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\",\r\n    access:\"all\"\r\n    },\r\n  {\r\n    path: \"/hotel\",\r\n    name: \"Hotel Add\",\r\n    icon: \"fa fa-bed text-orange\",\r\n    component: HotelTab,\r\n    layout: \"/app\",\r\n    access:\"hotel\"\r\n  },\r\n  {\r\n    path: \"/hotel-view\",\r\n    name: \"Hotel List\",\r\n    icon: \"fa fa-bed text-orange\",\r\n    component: HotelDetails,\r\n    layout: \"/app\",\r\n    access:\"hotel\"\r\n  }\r\n];\r\n\r\nexport default hotelRoutes;\r\n","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './contexts/UserAuthentication'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/sign-in', state: { from: props.location } }} />)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useContext } from \"react\";\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nimport { AuthContext } from '../../contexts/UserAuthentication'\nconst UserHeader = () => {\n  const {  authUser } = useContext(AuthContext)\n\n  return (\n    <>\n      <div\n        className=\"header pb-8 d-flex align-items-center\"\n        style={{\n          minHeight: \"300px\",\n          backgroundImage:\n            `url(${process.env.PUBLIC_URL}/res/img/logo7.png)`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center top\",\n        }}\n      >\n        {/* Mask */}\n        <span className=\"mask bg-gradient-default opacity-8\" />\n        {/* Header container */}\n        <Container className=\"align-items-center\" fluid>\n          <Row>\n            <Col lg=\"7\" md=\"10\">\n              <h4 className=\"text-white\">Currently loged in: {authUser.email}</h4>\n              <p className=\"text-white mt-0\"></p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default UserHeader;\n","import React, { useState, useEffect, useContext } from \"react\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Input,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from 'yup'\nimport { USER_UPDATE_PASSWORD_API } from '../../services/api_url'\nimport axios from '../../services/axios'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nimport { useToasts } from 'react-toast-notifications'\n\nconst ValidationSchema = Yup.object().shape({\n  currentpassword: Yup.string().required('Field is required'),\n  password: Yup.string().required('Field is required'),\n  cpassword: Yup.string().required('Field is required'),\n})\nconst Profile = () => {\n  // const [profile, setProfile] = useState({})\n  const { authUser } = useContext(AuthContext)\n  const { addToast, removeAllToasts } = useToasts()\n  const onUpdatePassword = async (values, actions) => {\n    try {\n      if (values.password === values.cpassword) {\n        let result = await axios.post(USER_UPDATE_PASSWORD_API, values)\n        if (result.data.success) {\n          addToast(result.data.message, {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          actions.resetForm();\n          window.location.reload();\n        }else{\n          addToast(result.data.message, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      } else {\n        addToast(\"Password not match\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (error) {\n      if (error.response) {\n        removeAllToasts()\n        addToast(error.response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n  }\n  return (\n    <>\n      <UserHeader />\n      {/* Page content */}\n      <Container className=\"mt--6\" fluid>\n        <Row>\n          <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n            <Card className=\"card-profile shadow\">\n              <Row className=\"justify-content-center\">\n                <Col className=\"order-lg-2\" lg=\"3\">\n                  <div className=\"card-profile-image\">\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <img\n                        alt=\"no profile\"\n                        className=\"rounded-circle\"\n                        src={`${process.env.PUBLIC_URL}/res/img/default_user.svg`}\n                      />\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n              <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                <div className=\"d-flex justify-content-between\">\n                  {/* //Content */}\n                </div>\n              </CardHeader>\n              <CardBody className=\"pt-0 pt-md-4\">\n                <Row>\n                  <div className=\"col\">\n                    <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                      {/* <div>\n                        <span className=\"heading\">22</span>\n                        <span className=\"description\">Friends</span>\n                      </div>\n                      <div>\n                        <span className=\"heading\">10</span>\n                        <span className=\"description\">Photos</span>\n                      </div>\n                      <div>\n                        <span className=\"heading\">89</span>\n                        <span className=\"description\">Comments</span>\n                      </div> */}\n                    </div>\n                  </div>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col className=\"order-xl-1\" xl=\"8\">\n            <Card className=\"bg-secondary shadow\">\n              <CardHeader className=\"bg-white border-0\">\n                <Row className=\"align-items-center\">\n                  <Col xs=\"8\">\n                    <h3 className=\"mb-0\">My account</h3>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"pl-lg-4\">\n                  <Row>\n                    <Col lg=\"6\">\n                      <FormGroup>\n                        <label className=\"form-control-label\"   >\n                          Your full name\n                          </label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          defaultValue={authUser.name}\n                          readOnly\n                          placeholder=\"Username\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col lg=\"6\">\n                      <FormGroup>\n                        <label\n                          className=\"form-control-label\" >\n                          Email address\n                          </label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          value={authUser.email}\n                          placeholder={authUser.email}\n                          type=\"email\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </div>\n\n                <hr className=\"my-4\" />\n                {/* Address */}\n                <h6 className=\"heading-small text-muted mb-4\">\n                  Password Section\n                  </h6>\n                <div className=\"pl-lg-4\">\n                  <Formik\n                    initialValues={{\n                      currentpassword: '',\n                      password: '',\n                      cpassword: '',\n                    }}\n                    validationSchema={ValidationSchema}\n                    onSubmit={(values, actions) => {\n                      onUpdatePassword(values, actions)\n                    }}>\n                    {props => (\n                      <Form className='mt-2'>\n                        <Row>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label\n                                className=\"form-control-label\">Current Password</label>\n                              <Field\n                                type=\"password\"\n                                name=\"currentpassword\"\n                                className=\"form-control\"\n                                placeholder=\"Enter your current password\"\n                                value={props.values.currentpassword}\n                                onChange={props.handleChange}\n                              />\n                              {props.errors.currentpassword && props.touched.currentpassword ? (\n                                <small className='form-text text-danger'>{props.errors.currentpassword}</small>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label\n                                className=\"form-control-label\">New Password\n                          </label>\n                              <Field\n                                name=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Enter your new password\"\n                                type=\"text\"\n                                value={props.values.password}\n                                onChange={props.handleChange}\n                              />\n                              {props.errors.password && props.touched.password ? (\n                                <small className='form-text text-danger'>{props.errors.password}</small>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label\n                                className=\"form-control-label\">Confirm Password\n                          </label>\n                              <Field\n                                name=\"cpassword\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm new password\"\n                                type=\"text\"\n                                value={props.values.cpassword}\n                                onChange={props.handleChange}\n                              />\n                              {props.errors.cpassword && props.touched.cpassword ? (\n                                <small className='form-text text-danger'>{props.errors.cpassword}</small>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                        <div className=\"text-left\">\n                          <button className=\"btn btn-primary\" type=\"submit\">Update Your New Password</button>\n                        </div>\n                      </Form>\n                    )}\n                  </Formik>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","\nimport React, { useState } from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport { AuthContext } from '../contexts/UserAuthentication'\n\nimport routes from \"../routes/routes\";\nimport adminRoutes from \"../routes/routes_admin\";\nimport travelRoutes from \"../routes/routes_travel\";\nimport restaurantRoutes from \"../routes/routes_restaurant\";\nimport clubRoutes from \"../routes/routes_club\";\nimport hotelRoutes from \"../routes/routes_hotel\";\nimport ProtectedRoute from \"ProtectedRoute\";\nimport PackageDetails from \"views/package/PackageDetails\";\nimport HotelDetails from \"views/hotel/HotelDetails\";\nimport RestaurantDetails from \"views/restaurant/RestaurantDetails\";\nimport ClubDetails from \"views/club/ClubDetails\";\nimport PermissionHandler from \"services/permisionHandler\";\nimport Profile from \"views/setting/Profile\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  // const {authUser} = useContext(AuthContext)\n  const [granted, setGranted] = useState(\"\")\n  React.useEffect(() => {\n    PermissionHandler().then(result => setGranted(result.data.type)).catch(err => console.log(err))\n  }, [])\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes, grant) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/app\") {\n        return (\n          <ProtectedRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />)\n      } else {\n        return null;\n      }\n    });\n  };\n  const getTextHeaderName = (header) => {\n    for (let i = 0; i < header.length; i++) {\n      if (\n        props.location.pathname.indexOf(header[i].layout + header[i].path) !==\n        -1\n      ) {\n        return header[i].name;\n      }\n    }\n  }\n  const getBrandText = (path) => {\n    if (granted === \"admin\") {\n     return getTextHeaderName(adminRoutes);\n    } else if (granted === \"travel\") {\n     return getTextHeaderName(travelRoutes);\n    } else if (granted === \"hotel\") {\n     return getTextHeaderName(hotelRoutes);\n    } else if (granted === \"club\") {\n     return getTextHeaderName(clubRoutes);\n    } else if (granted === \"restaurant\") {\n     return getTextHeaderName(restaurantRoutes);\n    }\n    return \"loading . . .\";\n  };\n\n  return (\n    <>\n      {granted === \"admin\" ? <Sidebar\n        {...props}\n        routes={adminRoutes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"travel\" ? <Sidebar\n        {...props}\n        routes={travelRoutes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"restaurant\" ? <Sidebar\n        {...props}\n        routes={restaurantRoutes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"club\" ? <Sidebar\n        {...props}\n        routes={clubRoutes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"hotel\" ? <Sidebar\n        {...props}\n        routes={hotelRoutes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {/* <ProtectedRoute path=\"/app/package-view\" component={PackageDetails} />\n          <ProtectedRoute path=\"/app/hotel-view\" component={HotelDetails} />\n          <ProtectedRoute path=\"/app/restaurant-view\" component={RestaurantDetails} />\n          <ProtectedRoute path=\"/app/club-view\" component={ClubDetails} />\n        <ProtectedRoute path=\"/app/profile/\" component={Profile} /> */}\n          <ProtectedRoute path=\"/app/profile/\" component={Profile} />\n          {granted === undefined && <Redirect from=\"*\" to=\"/\" />}\n          {granted === \"admin\" && getRoutes(adminRoutes, granted)}\n          {granted === \"travel\" && getRoutes(travelRoutes, granted)}\n          {granted === \"hotel\" && getRoutes(hotelRoutes, granted)}\n          {granted === \"restaurant\" && getRoutes(restaurantRoutes, granted)}\n          {granted === \"club\" && getRoutes(clubRoutes, granted)}\n\n        </Switch>\n        {/* <Container fluid>\n          <AdminFooter />\n        </Container> */}\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={`${process.env.PUBLIC_URL}/res/img/logo30.png`}\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nconst Login = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <a\n                  className=\"font-weight-bold ml-1\"\n                  href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                  target=\"_blank\"\n                >\n                 Scout-Admin\n                </a>\n              </div>\n            </Col>\n            \n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  Col,\n} from \"reactstrap\";\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from 'yup'\nimport axios from '../../services/axios'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nimport { useToasts } from 'react-toast-notifications'\nimport { LOGIN_API } from \"services/api_url\";\nimport gotoPage from \"services/gotoPage\";\nimport {PreLoaderContext} from '../../contexts/PreLoaderContext'\nconst SignInSchema = Yup.object().shape({\n  email: Yup.string().email().required('Email is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters long').required('Password is required'),\n})\nconst Login = () => {\n  const { setIsLoading } = useContext(PreLoaderContext)\n  const { setIsAuthenticated, setAuthUser } = useContext(AuthContext)\n  const { addToast } = useToasts()\n  \n  //For Agent Authentication\n  const onLogin = async (values) => {\n    try {\n      setIsLoading(true)\n      let result = await axios.post(LOGIN_API, values);\n      if (result.data.success) {\n      setIsLoading(false)\n        setAuthUser(result.data.user)\n        setIsAuthenticated(true)\n        gotoPage(result.data.user.token, result.data.user, \"/app/dashboard\")\n      }\n    } catch (error) {\n      setIsLoading(false)\n      if (error.response) {\n        addToast(error.response.data.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n  }\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n         \n          <CardBody className=\"px-lg-5 py-lg-2\">\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={SignInSchema}\n              onSubmit={values => {\n                onLogin(values)\n              }}\n            >\n              {props => (\n                <Form className='mt-5'>\n                  <div className='form-group'>\n                    <label className='font-weight-bold'>Email</label>\n                    <Field\n                      name='email'\n                      className='form-control'\n                      placeholder='e.g: example@gmail.com'\n                      value={props.values.email}\n                      onChange={props.handleChange('email')}\n                    />\n                    {props.errors.email && props.touched.email ? (\n                      <small className='form-text text-danger'>{props.errors.email}</small>\n                    ) : null}\n                  </div>\n\n                  <div className='form-group'>\n                    <label className='font-weight-bold'>Password</label>\n                    <Input\n                      name='password'\n                      type='password'\n                      className='form-control'\n                      placeholder='********'\n                      value={props.values.password}\n                      onChange={props.handleChange('password')}\n                    />\n                    {props.errors.password && props.touched.password ? (\n                      <small className='form-text text-danger'>{props.errors.password}</small>\n                    ) : null}\n                  </div>\n                  <div className='form-group'>\n                    <div className=\"text-center\">\n                      <Button className=\"my-4\" color=\"primary\" type=\"submit\">\n                        Sign in\n                     </Button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n} from \"reactstrap\";\r\nconst Denied = () => {\r\n  \r\n  return (\r\n    <>\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardBody className=\"px-lg-5 py-lg-2\">\r\n           <h1>Permission Denied</h1>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Denied;\r\n","import Login from \"views/auth/Login.js\";\r\nimport Denied from \"views/auth/Denied.js\";\r\n\r\nvar routes = [\r\n    {\r\n      path: \"/login\",\r\n      name: \"Login\",\r\n      icon: \"fas fa-sign-in-alt text-yellow\",\r\n      component: Login,\r\n      layout: \"/auth\",\r\n    },\r\n    {\r\n      path: \"/fail\",\r\n      name: \"Fail\",\r\n      component: Denied,\r\n      layout: \"/auth\",\r\n    }    \r\n  ];\r\n\r\n  export default routes;","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './contexts/UserAuthentication'\r\nconst PublicRoute = ({ component, ...rest }) => {\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuthenticated ? (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/app/dashboard\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                        React.createElement(component, props)\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default PublicRoute\r\n","import React from \"react\";\nimport { useLocation, Switch, Redirect, Route } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\nimport authroutes from \"auth_routes\";\nimport PublicRoute from '../PublicRoute'\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <PublicRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col  md=\"12\">\n                  <h1 className=\"text-white\">Authentication (Restaurant/Hotel/Tour/Travel)</h1>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(authroutes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      {/* <AuthFooter /> */}\n    </>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport \"react-responsive-combo-box/dist/index.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport AuthContextProvider from './contexts/UserAuthentication'\nimport { ToastProvider } from 'react-toast-notifications'\nimport PackagesContextProvider from \"contexts/AgentPackageContext\";\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport HotelContextProvider from \"contexts/HotelContext\";\nimport RestaurantContextProvider from \"contexts/AgentRestaurantContext\";\nimport PreloaderContextProvider from \"contexts/PreLoaderContext\";\nimport ClubContextProvider from \"contexts/AgentClubContext\";\nReactDOM.render(\n  <PreloaderContextProvider>\n    <PackagesContextProvider>\n        <HotelContextProvider>\n          <RestaurantContextProvider>\n            <ClubContextProvider>\n              <AuthContextProvider>\n                <ToastProvider placement='top-center' autoDismissTimeout='3000'>\n                  <BrowserRouter>\n                    <Switch>\n                      <Route path=\"/app\" render={(props) => <AdminLayout {...props} />} />\n                      <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n                      <Redirect from=\"/\" to=\"/auth/login\" />\n                    </Switch>\n                  </BrowserRouter>\n                </ToastProvider>\n              </AuthContextProvider>\n            </ClubContextProvider>\n          </RestaurantContextProvider>\n        </HotelContextProvider>\n    </PackagesContextProvider>\n  </PreloaderContextProvider>\n  ,\n  document.getElementById(\"root\")\n);\n","module.exports = {\r\n    PACKAGES_TYPE: [\r\n      \"Weekend\",\"Tour\",\"Trek\",\r\n    ]\r\n  }\r\n  "],"sourceRoot":""}