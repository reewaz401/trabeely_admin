{"version":3,"sources":["services/api_url.js","role.js","services/gotoPage.js","MultipleOption.js","services/axios.js","contexts/UserAuthentication.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Index.js","components/Headers/BannerHeader.js","views/TabArea.js","views/package/PackageForm.js","services/permisionHandler.js","contexts/AgentPackageContext.js","views/package/ItineraryForm.js","views/package/PackageTab.js","views/restaurant/RestaurantForm.js","contexts/AgentRestaurantContext.js","views/restaurant/FoodForm.js","views/restaurant/RestaurantTab.js","views/hotel/HotelForm.js","contexts/HotelContext.js","views/hotel/HotelRoomForm.js","views/hotel/HotelTab.js","views/club/ClubForm.js","views/club/ClubTab.js","components/Datatable/DataTable.js","components/Headers/NoActionBanner.js","views/pre-register/PreRegisters.js","contexts/PreLoaderContext.js","views/user/UserAdd.js","views/user/UserDetails.js","components/Headers/TitlePage.js","views/hotel/HotelDetails.js","views/package/PackageUpdate.js","views/package/PackageDetails.js","views/restaurant/RestaurantDetails.js","contexts/AgentClubContext.js","views/club/ClubDetails.js","contexts/PermissionContext.js","views/booking/BoookingDetails.js","routes/routes_admin.js","routes/routes_travel.js","routes/routes_restaurant.js","routes/routes_club.js","routes/routes_hotel.js","ProtectedRoute.js","components/Headers/UserHeader.js","views/setting/Profile.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","views/auth/Login.js","views/auth/Denied.js","auth_routes.js","PublicRoute.js","layouts/Auth.js","index.js","views/package/PackageType.js","role_access.js"],"names":["BASE_URI","process","module","exports","LOGIN_API","REGISTER_API","LOGOUT_API","roleUpdateAPI","CHECK_PERMISSION","PACKAGE_API","PACKAGE_DELETE_API","PACKAGE_UPDATE_API","ITINERARY_API","AGENT_PACKAGE_API","PACKAGE_ALL_API","HOTEL_ADD_API","HOTEL_ROOM_ADD_API","AGENT_HOTEL_API","HOTEL_DELETE_API","HOTEL_ALL_API","RESTAURANT_ADD_API","FOOD_ADD_API","AGENT_RESTAURANT_API","RESTAURANT_DELETE_API","RESTAURANT_ALL_API","CLUB_ADD_API","AGENT_CLUB_API","CLUB_DELETE_API","CLUB_ALL_API","GALLERY_ADD_API","AGENT_GALLERY_API","GALLERY_DELETE_API","GALLERY_ALL_API","PRE_REGISTER_GET","APPROVE_PRE_REGISTER","GET_USER_PROFILE","USERS_GET","USERS_ADD_API","USER_DELETE_API","USER_UPDATE_API","USER_UPDATE_PASSWORD_API","GET_BOOKING_BY_AGENT_API","CONFIRM_BOOKING_FOR_AGENT_API","value","label","token","user","path","localStorage","setItem","JSON","stringify","window","location","href","includesOption","name","ROOM_TYPE","FOOD_TYPE","AMENITIES","instance","axios","create","baseURL","withCredentials","headers","getItem","AuthContext","createContext","AuthContextProvider","children","parse","useState","isAuthenticated","setIsAuthenticated","authUser","setAuthUser","Provider","AdminNavbar","props","useContext","onLogout","e","a","preventDefault","post","data","success","replace","removeItem","alert","Navbar","className","expand","id","Container","fluid","to","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","DropdownMenu","right","DropdownItem","header","tag","Link","divider","onClick","Sidebar","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","bgColor","logo","navbarBrandProps","innerLink","outterLink","target","type","NavbarBrand","alt","imgAlt","src","aria-labelledby","Collapse","isOpen","Row","Col","xs","imgSrc","Form","InputGroup","Input","aria-label","placeholder","InputGroupAddon","addonType","InputGroupText","map","prop","key","NavItem","NavLink","layout","NavLinkRRD","activeClassName","icon","createLinks","defaultProps","Header","lg","xl","Card","CardBody","CardTitle","width","height","Index","BannerHeader","actions","md","action","TabArea","tabss","setActiveTab","activeTab","tabs","tab","index","visible","classnames","active","toggle","ValidationSchema","Yup","shape","title","required","price","destination","address","duration","cancelPolicy","minTraveler","overview","packageType","PackageForm","setPackageId","country","setCountry","includes","setIncludes","validFiles","setValidFiles","Date","onChange","isPrice","setIsPrice","useToasts","addToast","removeAllToasts","images","setImages","people","discount","groupDiscount","setGroupDiscount","onImageSelectChange","imageList","addUpdateIndex","file","push","onAddPackage","values","formData","FormData","append","i","length","property","Array","from","result","resetForm","current_save_id","response","error","appearance","autoDismiss","onSelect","selectedList","onRemove","initialValues","isChangeDate","validationSchema","onSubmit","FormGroup","handleChange","errors","touched","p","temp","Button","color","displayValue","options","style","chips","background","searchBox","border","Fragment","PACKAGES_TYPE","htmlFor","valueType","priorityOptions","val","selectCountry","format","minDate","rows","cols","multiple","maxNumber","dataURLKey","onImageUpload","onImageUpdate","onImageRemove","image","data_url","tooltip","get","PermissionHandler","PackagesContext","PackagesContextProvider","packages","setPackages","useEffect","permissionController","getAllPackages","getPackagesByUser","console","log","ItineraryForm","packageId","step","ItineraryModel","day","routeName","routeDesc","routeImg","obj","arr","itinerary","setItinerary","setDay","selectedFiles","useRef","option","newObj","_id","onUpdateItinerary","message","filteredArray","reduce","current","find","item","concat","tempday","PackageTab","TabContent","TabPane","tabId","contact","desc","RestaurantForm","startDate","endDate","onAddTrigger","err","videoUrl","RestaurantContext","RestaurantContextProvider","restaurants","setRestaurants","getAllRestaurant","getRestaurantByUser","foodName","FoodForm","restaurantId","setRestaurantId","foodType","setFoodType","onSelectRestaurant","onSelectFoodType","classfoodName","RestaurantTab","totalRoom","hotelDesc","HotelForm","setHotelId","amenities","setAmenities","onSelectAmenities","isMulti","HotelContext","HotelContextProvider","hotels","setHotels","getAllHotels","getHotelDetails","numberOfRoom","seat","HotelRoomForm","hotelId","roomType","setRoomType","onSelectRoomType","HotelTab","clubName","ClubForm","classclubName","ClubTab","DataTable","columns","defaultSorted","ColumnToggle","ToggleList","SearchBar","Search","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","rowEvents","row","rowIndex","pagination","paginationFactory","paginationProps","paginationTableProps","keyField","search","searchProps","classes","filter","filterFactory","baseProps","NoActionBanner","PreRegisters","business","setBusiness","getAllBusinessDetail","onApprove","put","status","reload","dataField","order","text","sort","formatter","cell","moment","createdAt","formatExtraData","confirmAction","confirmAlert","customUI","onClose","PreLoaderContext","override","css","PreloaderContextProvider","isLoading","setIsLoading","size","loading","email","gender","fullname","UserAdd","tabIndex","role","aria-hidden","data-dismiss","UsersDetails","users","setUsers","getAllUsers","onDeleteUser","delete","onUpdateRole","Roles","selected","confirmDelete","data-toggle","data-target","TitlePage","HotelDetails","onDeleteAction","textFilter","PackageUpdate","pckg","pkgId","setIsUpdate","initialValue","onUpdate","enableReinitialize","PackageDetails","updateData","setUpdateData","isUpdate","setPkgId","onDeletePackage","onPublish","onUpdateChange","confirm","RestaurantDetails","ClubContext","ClubContextProvider","clubs","setClubs","getClubByUser","ClubDetails","PermissionContext","PermissionContextProvider","granted","setGranted","then","catch","BookingDetails","bookingDate","setBookingDate","getBookingDetail","onBookinConfirm","actionList","dateFormat","bookDate","statusFormat","peopleFormat","adult","child","numberOfPeople","hotelColumn","travelColumn","ADMINISTRATOR","TRAVEL","HOTEL_AGENT","adminRoutes","component","UserDetails","travelRoutes","restaurantRoutes","clubRoutes","hotelRoutes","access","ProtectedRoute","Component","rest","render","pathname","state","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","currentpassword","password","cpassword","Profile","onUpdatePassword","CardHeader","defaultValue","readOnly","Admin","mainContent","React","useLocation","document","documentElement","scrollTop","scrollingElement","getRoutes","grant","getTextHeaderName","routess","ref","undefined","UncontrolledCollapse","toggler","Login","SignInSchema","min","Denied","onLogin","gotoPage","PublicRoute","createElement","Auth","body","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","authroutes","ReactDOM","placement","autoDismissTimeout","getElementById","CLUB_AGENT","GUIDE","USER","RESTAURANT"],"mappings":"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","file":"static/js/main.7e6c09f4.chunk.js","sourcesContent":["const BASE_URI = process.env.REACT_APP_BASE_URI;\r\nmodule.exports = {\r\n    LOGIN_API: BASE_URI + \"/auth/sign-in\",\r\n    REGISTER_API: BASE_URI + \"/auth/sign-up\",\r\n    LOGOUT_API: BASE_URI + \"/auth/logout\",\r\n    roleUpdateAPI: BASE_URI + \"/user/update-role/\",  //{id}\r\n    CHECK_PERMISSION: BASE_URI + \"/auth/permission-handler\",\r\n    //Package\r\n    PACKAGE_API: BASE_URI + \"/packages/add-package\",\r\n    PACKAGE_DELETE_API: BASE_URI + \"/packages/delete/\",//{id}\r\n    PACKAGE_UPDATE_API: BASE_URI + \"/packages/update/\",//{id}\r\n    ITINERARY_API: BASE_URI + \"/packages/add-itinerary\",\r\n    AGENT_PACKAGE_API: BASE_URI + \"/packages/agent-package\",\r\n    PACKAGE_ALL_API: BASE_URI + \"/packages\",\r\n    //Hotels\r\n    HOTEL_ADD_API: BASE_URI + \"/hotels/add-hotel\",\r\n    HOTEL_ROOM_ADD_API: BASE_URI + \"/hotels/add-room\",\r\n    AGENT_HOTEL_API: BASE_URI + \"/hotels/agent-hotel\",\r\n    HOTEL_DELETE_API: BASE_URI + \"/hotels/delete/\",//{id}\r\n    HOTEL_ALL_API: BASE_URI + \"/hotels\",\r\n    //Restaurant\r\n    RESTAURANT_ADD_API: BASE_URI + \"/restaurants/add-restaurant\",\r\n    FOOD_ADD_API: BASE_URI + \"/foods/add-food\",\r\n    AGENT_RESTAURANT_API: BASE_URI + \"/restaurants/agent-restaurant\",\r\n    RESTAURANT_DELETE_API: BASE_URI + \"/restaurants/delete/\",//{id}\r\n    RESTAURANT_ALL_API: BASE_URI + \"/restaurants\",\r\n    //Club\r\n    CLUB_ADD_API: BASE_URI + \"/club/add-club\",\r\n    AGENT_CLUB_API: BASE_URI + \"/club/agent-club\",\r\n    CLUB_DELETE_API: BASE_URI + \"/club/delete/\",//{id}\r\n    CLUB_ALL_API: BASE_URI + \"/club\",\r\n\r\n    //GALLERY\r\n    GALLERY_ADD_API: BASE_URI + \"/gallery/add-gallery\",\r\n    AGENT_GALLERY_API: BASE_URI + \"/gallery/agent-gallery\",\r\n    GALLERY_DELETE_API: BASE_URI + \"/gallery/delete/\",//{id}\r\n    GALLERY_ALL_API: BASE_URI + \"/gallery\",\r\n\r\n    //Admin Work\r\n    //Business\r\n    PRE_REGISTER_GET: BASE_URI + \"/auth/business-detail\",\r\n    APPROVE_PRE_REGISTER: BASE_URI + \"/auth/approve-business/\", //{id}\r\n    //Users\r\n    GET_USER_PROFILE: BASE_URI + \"/users/user-profile\",\r\n    USERS_GET: BASE_URI + \"/users\",\r\n    USERS_ADD_API: BASE_URI + \"/users/user-add\",\r\n    USER_DELETE_API: BASE_URI + \"/users/delete/\",//{id}\r\n    USER_UPDATE_API: BASE_URI + \"/users/update\",\r\n    USER_UPDATE_PASSWORD_API: BASE_URI + \"/users/update-password\",\r\n\r\n    //Booking\r\n    GET_BOOKING_BY_AGENT_API: BASE_URI + \"/booking/agent-booking-detail\",\r\n    CONFIRM_BOOKING_FOR_AGENT_API: BASE_URI + \"/booking/confirm-booking\",\r\n\r\n}","//Nodejs Version 12.18.4\r\nmodule.exports = [\r\n  { value: \"admin\", label: \"Admin\" },\r\n  { value: \"hotel\", label: \"Hotel\" },\r\n  { value: \"restaurant\", label: \"Restaurant\" },\r\n  { value: \"club\", label: \"Club\" },\r\n  { value: \"user\", label: \"User\" },\r\n  { value: \"travel\", label: \"Travel\" },\r\n]\r\n","module.exports = (token, user, path) => {\r\n    localStorage.setItem(\"_token\", token);\r\n    localStorage.setItem(\"_auth\", JSON.stringify(user));\r\n    window.location.href = path;\r\n};","//Nodejs Version 12.18.4\r\nmodule.exports = {\r\n    includesOption : [\r\n        { name: \"Bag\" },\r\n        { name: \"Fruits\" },\r\n        { name: \"Transportation\" },\r\n        { name: \"Guide Service\" },\r\n        { name: \"Sleeping Bag\" }\r\n    ],\r\n    ROOM_TYPE: [\r\n        { value: \"normal\", label: \"Normal Room\" },\r\n        { value: \"medium\", label: \"Medium Room\" },\r\n        { value: \"delux\", label: \"Delux Room\" },\r\n        { value: \"luxury\", label: \"Luxury Room\" }\r\n    ],\r\n    FOOD_TYPE:[\r\n        { value: \"spicy\", label: \"Spicy\" },\r\n        { value: \"continental\", label: \"Continental\" },\r\n        { value: \"fastFood\", label: \"Fast Food\" },\r\n        { value: \"dietary\", label: \"Dietary Dinner\" },\r\n        { value: \"casualFood \", label: \"Casual Food\" },\r\n        { value: \"cafe\", label: \"Cafe\" },\r\n    ],\r\n    AMENITIES:[\r\n        { value: \"ac\", label: \"Air Conditioning\" },\r\n        { value: \"attached-bathroom\", label: \"Attached bathroom\" },\r\n        { value: \"tv\", label: \"TV\" },\r\n        { value: \"balcony\", label: \"Balcony\" },\r\n        { value: \"terrace \", label: \"Terrace\" },\r\n        { value: \"wifi\", label: \"Free WIFI\" },\r\n        { value: \"room-service\", label: \"Room Service\" },\r\n        { value: \"bar\", label: \"Bar\" },\r\n        { value: \"swimming-pool\", label: \"Swimming pool\" },\r\n        { value: \"sauna\", label: \"Sauna\" },\r\n        { value: \"frontdesk\", label: \"24-hour Front desk\" },\r\n        { value: \"hotwater\", label: \"Hot water\" },\r\n    ]\r\n\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: process.env.REACT_APP_BASE_URI,\r\n\twithCredentials: true,\r\n\t// headers: {\r\n\t\t// \t'CSRF-Token': csrfToken_generate(),\r\n\t\t//   },\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\"Authorization\": \"Bearer \" + localStorage.getItem(\"_token\")\r\n\t\t}\r\n})\r\n\r\nexport default instance","import React, { createContext, useState } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const user = JSON.parse(localStorage.getItem('_auth'))\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    return user !== null ? true : false\r\n  })\r\n  const [authUser, setAuthUser] = useState(() => {\r\n    return user !== null ? user : {}\r\n  })\r\n  return <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, authUser, setAuthUser }}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\nimport axios from '../../services/axios'\nimport { LOGOUT_API } from '../../services/api_url'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nconst AdminNavbar = (props) => {\n  const {  authUser } = useContext(AuthContext)\n\n  const onLogout = async e => {\n    e.preventDefault()\n    try {\n      let result = await axios.post(LOGOUT_API)\n      if (result.data.success) {\n        window.location.replace('/')\n        localStorage.removeItem('_token')\n        localStorage.removeItem('_auth')\n      }\n    } catch (error) {\n      alert(\"Logout Failed\");\n    }\n  }\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n          {props.brandText}\n          </Link>\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    {/* //use profile */}\n                    {/* <img\n                      alt=\"...\"\n                      src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n                    /> */}\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      {authUser.name}\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/app/profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => onLogout(e)}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","import React, { useState,useContext,useEffect } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n      return routes.map((prop, key) => {\n        return (\n          <NavItem key={key}>\n            <NavLink\n              to={prop.layout + prop.path}\n              tag={NavLinkRRD}\n              onClick={closeCollapse}\n              activeClassName=\"active\"\n            >\n              <i className={prop.icon} />\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      });\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n    <Navbar\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\n      expand=\"md\"\n      id=\"sidenav-main\"\n    >\n      <Container fluid>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Brand */}\n        {logo ? (\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={`${process.env.PUBLIC_URL}/res/img/logo30.png`}\n            />\n            {/* <h4>TRABEELY-ADMIN</h4> */}\n          </NavbarBrand>\n        ) : null}\n        {/* User */}\n        <Nav className=\"align-items-center d-md-none\">\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav className=\"nav-link-icon\">\n              <i className=\"ni ni-bell-55\" />\n            </DropdownToggle>\n            <DropdownMenu\n              aria-labelledby=\"navbar-default_dropdown_1\"\n              className=\"dropdown-menu-arrow\"\n              right\n            >\n              <DropdownItem>Action</DropdownItem>\n              <DropdownItem>Another action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Something else here</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav>\n              <Media className=\"align-items-center\">\n                <span className=\"avatar avatar-sm rounded-circle\">\n                  <img\n                    alt=\"...\"\n                    src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n                  />\n                </span>\n              </Media>\n            </DropdownToggle>\n            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n              <DropdownItem className=\"noti-title\" header tag=\"div\">\n                <h6 className=\"text-overflow m-0\">Welcome!</h6>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-single-02\" />\n                <span>My profile</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-settings-gear-65\" />\n                <span>Settings</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-calendar-grid-58\" />\n                <span>Activity</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-support-16\" />\n                <span>Support</span>\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <i className=\"ni ni-user-run\" />\n                <span>Logout</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* Collapse */}\n        <Collapse navbar isOpen={collapseOpen}>\n          {/* Collapse header */}\n          <div className=\"navbar-collapse-header d-md-none\">\n            <Row>\n              {logo ? (\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  {logo.innerLink ? (\n                    <Link to={logo.innerLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </Link>\n\n                  ) : (\n                    <a href={logo.outterLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </a>\n                  )}\n                </Col>\n              ) : null}\n              <Col className=\"collapse-close\" xs=\"6\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={toggleCollapse}\n                >\n                  <span />\n                  <span />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          {/* Form */}\n          <Form className=\"mt-4 mb-3 d-md-none\">\n            <InputGroup className=\"input-group-rounded input-group-merge\">\n              <Input\n                aria-label=\"Search\"\n                className=\"form-control-rounded form-control-prepended\"\n                placeholder=\"Search\"\n                type=\"search\"\n              />\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <span className=\"fa fa-search\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n          {/* Navigation */}\n          <Nav navbar>{createLinks(routes)}</Nav>\n          {/* Divider */}\n          <hr className=\"my-3\" />\n          {/* Heading */}\n          <h6 className=\"navbar-heading text-muted\">Policy</h6>\n          {/* Navigation */}\n\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","import React from \"react\";\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Users\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                        Total User: 0\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow.png`} alt=\"\"/>\n                      </span>\n                      <span className=\"text-nowrap\"> </span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                        Packages\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">0</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                      <img width=\"100\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow4.png`} alt=\"\"/>\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Hotels\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">0</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-warning mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow5.png`} alt=\"\"/>\n                      </span>\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Restaurants\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">0%</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow6.png`} alt=\"\"/>\n\n                      </span>\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// reactstrap components\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n\nimport Header from \"components/Headers/Header.js\";\n\nconst Index = (props) => {\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"bg-gradient-default shadow\">\n              {/* <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Sales value</h2>\n                  </div>\n                  <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody> */}\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            {/* <Car€ */}\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            {/* <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Page visits</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Page name</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\">Unique users</th>\n                    <th scope=\"col\">Bounce rate</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">/argon/</th>\n                    <td>4,569</td>\n                    <td>340</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/index.html</th>\n                    <td>3,985</td>\n                    <td>319</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/charts.html</th>\n                    <td>3,513</td>\n                    <td>294</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      36,49%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/tables.html</th>\n                    <td>2,050</td>\n                    <td>147</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/profile.html</th>\n                    <td>1,795</td>\n                    <td>190</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card> */}\n          </Col>\n          <Col xl=\"4\">\n            {/* <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Social traffic</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Referral</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>1,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">60%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"60\"\n                            barClassName=\"bg-gradient-danger\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>5,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">70%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"70\"\n                            barClassName=\"bg-gradient-success\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Google</th>\n                    <td>4,807</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">80%</span>\n                        <div>\n                          <Progress max=\"100\" value=\"80\" />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Instagram</th>\n                    <td>3,678</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">75%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"75\"\n                            barClassName=\"bg-gradient-info\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">twitter</th>\n                    <td>2,645</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">30%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"30\"\n                            barClassName=\"bg-gradient-warning\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card> */}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst BannerHeader = ({actions}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-8 pt-1 pt-lg-7 d-flex align-items-center\">\r\n        {/* Mask */}\r\n        <span className=\"mask bg-gradient-default opacity-7\" />\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"action\">\r\n                {actions.map((action) =>\r\n                  <a\r\n                    className=\"text-white\"\r\n                    href={action.path}\r\n                    // onClick={(e) => e.preventDefault()}\r\n                  >\r\n                  {action.icon}  {action.name}\r\n                  </a>)}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BannerHeader;\r\n","import React from 'react'\r\nimport { Nav, NavLink, NavItem, } from \"reactstrap\";\r\nimport classnames from 'classnames'\r\nfunction TabArea({ tabss, setActiveTab, activeTab }) {\r\n    const toggle = tab => {\r\n\r\n        if (activeTab !== tab) {\r\n            setActiveTab(tab);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Nav tabs>\r\n                {tabss.map((tab, index) => (\r\n                    tab.visible ? (\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: activeTab === tab.id })}\r\n                                onClick={() => toggle(tab.id)}\r\n                            >\r\n                                <i className={tab.icon}></i> {tab.name}\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    ) : \"\"\r\n\r\n                ))}\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TabArea\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { PACKAGES_TYPE } from './PackageType';\r\nimport { PACKAGE_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { includesOption } from '../../MultipleOption'\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\n\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Field is required'),\r\n    price: Yup.string().required('Field is required'),\r\n    destination: Yup.string().required('Field is required'),\r\n    address: Yup.string().required('Field is required'),\r\n    duration: Yup.string().required('Field is required'),\r\n    cancelPolicy: Yup.string().required('Field is required'),\r\n    minTraveler: Yup.string().required('Field is required'),\r\n    overview: Yup.string().required('Field is required'),\r\n    packageType: Yup.string().required('Field is required'),\r\n})\r\nfunction PackageForm({ setActiveTab, setPackageId }) {\r\n\r\n    const [country, setCountry] = useState(\"\");\r\n    const [includes, setIncludes] = useState([]);\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [value, onChange] = useState(new Date());\r\n    const [isPrice, setIsPrice] = useState(false)\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n    const GroupDiscountModel = {\r\n        people: 0,\r\n        discount: 0,\r\n    }\r\n\r\n    const [groupDiscount, setGroupDiscount] = useState([GroupDiscountModel]);\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddPackage = async (values, actions) => {\r\n\r\n        // if (validFiles.length == 0) {\r\n        //     addToast(\"You have not selected any images !\", {\r\n        //         appearance: \"error\",\r\n        //         autoDismiss: true,\r\n        //     });\r\n        // } else if (includes.length == 0) {\r\n        //     addToast(\"You have not included item for package !\", {\r\n        //         appearance: \"error\",\r\n        //         autoDismiss: true,\r\n        //     });\r\n        // } else {\r\n     \r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"package\");\r\n            formData.append(\"startDate\", value);\r\n            formData.append(\"country\", country);\r\n            //Includes Array\r\n           \r\n            for (var i = 0; i < includes.length; i++) {\r\n                formData.append('includes', includes[i].name);\r\n            }\r\n            //Package Image Arrary\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            formData.append(\"groupDiscount\", JSON.stringify(groupDiscount));\r\n            //Non-Array Value to store package desc, name, title\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(PACKAGE_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    actions.resetForm();\r\n                    setPackageId(result.data.current_save_id);\r\n                    setActiveTab(\"2\")\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.error, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    // }\r\n\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n\r\n    const onRemove = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n    const selectCountry = (val) => {\r\n        setCountry(val)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        title: '',\r\n                        price: '',\r\n                        destination: '',\r\n                        address: '',\r\n                        duration: '',\r\n                        cancelPolicy: ``,\r\n                        minTraveler: '',\r\n                        isChangeDate: false,\r\n                        overview: '',\r\n                        packageType: ''\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddPackage(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">Add Packages</h6>\r\n                            <div className=\"pl-lg-4\">\r\n\r\n                                {!isPrice ? (\r\n                                    <React.Fragment>\r\n                                        <Row>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Package Type  </label>\r\n                                                    <select onChange={props.handleChange} name='packageType' className='form-control'>\r\n                                                        <option>Select Package Type</option>\r\n                                                        {PACKAGES_TYPE.map((data, i) => (\r\n                                                            <option key={i} value={data}\r\n                                                            // selected={type?.includes(data.packageType)}\r\n                                                            >\r\n                                                                {data}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\"\r\n                                                        htmlFor=\"input-username\" >Package Title</label>\r\n                                                    <input\r\n                                                        name='title'\r\n                                                        className='form-control'\r\n                                                        placeholder='e.g: anapurna base camp'\r\n                                                        value={props.values.title}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.title && props.touched.title ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.title}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Country</label>\r\n                                                    <CountryDropdown\r\n                                                        className='form-control'\r\n                                                        value={country}\r\n                                                        valueType=\"full\"\r\n                                                        // whitelist={[\"NP\", \"US\"]}\r\n                                                        priorityOptions={[\"NP\", \"US\", \"GB\"]}\r\n                                                        onChange={(val) => selectCountry(val)} />\r\n\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\"\r\n                                                        htmlFor=\"input-first-name\"\r\n                                                    > Destination</label>\r\n                                                    <Field\r\n                                                        name='destination'\r\n                                                        className='form-control'\r\n                                                        placeholder='e.g. Kathmandu'\r\n                                                        value={props.values.destination}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.destination && props.touched.destination ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.destination}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\"\r\n                                                        htmlFor=\"input-address\">\r\n                                                        Meeting Point  </label>\r\n                                                    <Field\r\n                                                        name='address'\r\n                                                        className='form-control'\r\n                                                        placeholder='Enter address'\r\n                                                        value={props.values.address}\r\n                                                        onChange={props.handleChange('address')}\r\n                                                    />\r\n                                                    {props.errors.address && props.touched.address ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"2\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Minimum traveler</label>\r\n                                                    <Field\r\n                                                        name='minTraveler'\r\n                                                        className='form-control'\r\n                                                        placeholder='Enter minimum traveler'\r\n                                                        value={props.values.minTraveler}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.minTraveler && props.touched.minTraveler ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.minTraveler}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"2\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Duration  </label>\r\n                                                    <Field\r\n                                                        name='duration'\r\n                                                        className='form-control'\r\n                                                        placeholder='Enter duration'\r\n                                                        value={props.values.duration}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.duration && props.touched.duration ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.duration}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">\r\n                                                        Start Date  </label>\r\n                                                    <DateTimePicker\r\n                                                        className=\"react-datetime-picker form-control\"\r\n                                                        onChange={onChange}\r\n                                                        value={value}\r\n                                                        format=\"y-MM-dd h:mm:ss a\"\r\n                                                        minDate={new Date()}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                         \r\n                                            <Col lg=\"4\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\" htmlFor=\"changedate\">\r\n                                                        Are you flexible to let user change booking date  </label>\r\n                                                    <span className=\"pl-lg-4\">\r\n                                                        <Field\r\n                                                            id=\"changedate\"\r\n                                                            type=\"checkbox\"\r\n                                                            className='form-check-input'\r\n                                                            name=\"isChangeDate\" />\r\n                                                        {props.values.isChangeDate ? \"Yes\" : \"No\"}</span>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Overview </label>\r\n                                                    <textarea\r\n                                                        rows=\"4\"\r\n                                                        cols=\"40\"\r\n                                                        name='overview'\r\n                                                        className='form-control'\r\n                                                        placeholder='Specify your package overview'\r\n                                                        value={props.values.overview}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.overview && props.touched.overview ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.overview}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <hr className=\"my-4\" />\r\n                                        <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                                        <div className=\"pl-lg-4\">\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <ImageUploading\r\n                                                            multiple\r\n                                                            value={images}\r\n                                                            onChange={onImageSelectChange}\r\n                                                            maxNumber={maxNumber}\r\n                                                            dataURLKey=\"data_url\"\r\n                                                        >\r\n                                                            {({\r\n                                                                imageList,\r\n                                                                onImageUpload,\r\n                                                                onImageUpdate,\r\n                                                                onImageRemove,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                    <Row>\r\n                                                                        <Col md=\"2\">\r\n                                                                            <div\r\n                                                                                onClick={onImageUpload}>\r\n                                                                                <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                            </div>\r\n                                                                        </Col>\r\n                                                                        <Col md=\"8\">\r\n                                                                            {imageList.length != 0 ?\r\n                                                                                <div className=\"form-group multi-preview\">\r\n                                                                                    {imageList.map((image, index) => (\r\n                                                                                        <Row>\r\n                                                                                            <div className=\"col-md-8\">\r\n                                                                                                <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                                    <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                                </CardTitle>\r\n                                                                                            </div>\r\n                                                                                            <Col className=\"col-auto\">\r\n                                                                                                <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i className=\"fas fa-edit\"></i></Button>\r\n                                                                                                <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i className=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                            </Col>\r\n                                                                                        </Row>\r\n                                                                                    ))}\r\n                                                                                </div> : \"Image not selected.\"}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </>\r\n                                                            )}\r\n                                                        </ImageUploading>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <>\r\n                                        <Row>\r\n                                            <Col lg=\"2\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Price per person  </label>\r\n                                                    <Field\r\n                                                        name='price'\r\n                                                        className='form-control'\r\n                                                        placeholder='Price per person'\r\n                                                        value={props.values.price}\r\n                                                        onChange={props.handleChange}\r\n                                                    />\r\n                                                    {props.errors.price && props.touched.price ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"4\">\r\n                                                <h2>10% Commission wil be charged on every booking</h2></Col>\r\n                                        </Row>\r\n                                        <h6 className=\"heading-small text-muted mb-4\"> Group Discount</h6>\r\n                                        <Row>\r\n                                            <Col lg=\"4\">\r\n                                                {groupDiscount.map((p, index) => {\r\n                                                    return (\r\n                                                        <Row>\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <label\r\n                                                                        className=\"form-control-label\">Number of people </label>\r\n                                                                    <Field\r\n                                                                        name='people'\r\n                                                                        className='form-control'\r\n                                                                        placeholder='Enter number of people'\r\n                                                                        // value={p.people ? p.people: null}\r\n                                                                        onChange={e => {\r\n                                                                            const people = e.target.value;\r\n                                                                            var temp = groupDiscount\r\n                                                                            temp[index].people = people\r\n                                                                            setGroupDiscount(temp)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <label\r\n                                                                        className=\"form-control-label\"> Discount (in Rs) </label>\r\n                                                                    <Field\r\n                                                                        name='discount'\r\n                                                                        className='form-control'\r\n                                                                        placeholder='Enter your discount rate'\r\n                                                                        // value={p}\r\n                                                                        onChange={e => {\r\n                                                                            const discount = e.target.value;\r\n                                                                            var temp = groupDiscount\r\n                                                                            temp[index].discount = discount\r\n                                                                            setGroupDiscount(temp)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n\r\n                                                        </Row>\r\n                                                    );\r\n                                                })}\r\n                                            </Col>\r\n                                            <Button\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault()\r\n                                                    setGroupDiscount(discount => [\r\n                                                        ...discount,\r\n                                                        {\r\n                                                            people: \"\",\r\n                                                            discount: \"\",\r\n                                                        }\r\n                                                    ]);\r\n                                                }}\r\n                                                className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                                                <li className=\"fas fa-plus\"></li>\r\n                                            </Button>\r\n                                        </Row>\r\n                                        <hr className=\"my-2\" />\r\n                                        <Row>\r\n                                            <Col lg=\"6\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">Include Section </label>\r\n                                                    <Multiselect\r\n                                                        displayValue=\"key\"\r\n                                                        className='form-control'\r\n                                                        options={includesOption}\r\n                                                        displayValue=\"name\"\r\n                                                        onSelect={onSelect}\r\n                                                        onRemove={onRemove}\r\n                                                        style={{\r\n                                                            chips: { background: \"#0f367c\" },\r\n                                                            searchBox: {\r\n                                                                border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label className=\"form-control-label\">\r\n                                                        Cancellation Policy </label>\r\n                                                    <select onChange={props.handleChange} name='cancelPolicy' className='form-control'>\r\n                                                        <option value=\"\">Select Cancel Policy</option>\r\n                                                        <option value=\"One day before check in (6 pm)\">One day before check in (6 pm)</option>\r\n                                                        <option value=\"Two day before check in (6 pm)\">Two day before check in (6 pm)</option>\r\n                                                    </select>\r\n                                                    {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                        <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                                    ) : null}\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <div className='pl-lg-4 form-group'>\r\n                                <div className=\"text-left\">\r\n                                    {isPrice ? (\r\n                                        <>\r\n                                            <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(false)} type=\"button\">\r\n                                                Back </button>\r\n                                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                Confirm</button>\r\n                                        </>) :\r\n                                        <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(true)} type=\"button\">\r\n                                            Next\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default PackageForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import axios from '../services/axios'\r\n\r\nimport { CHECK_PERMISSION, LOGOUT_API } from '../services/api_url'\r\nasync function PermissionHandler() {\r\n    try {\r\n        const result = await axios.get(CHECK_PERMISSION)\r\n        if (result.data.success) {\r\n            return result.data;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        return false\r\n        // localStorage.removeItem('_token')\r\n        // localStorage.removeItem('_auth')\r\n        // if (error.response) {\r\n        //     addToast(error.response.data.message+\" Please logout!\", {\r\n        //         appearance: \"error\",\r\n        //         autoDismiss: true,\r\n        //     });\r\n        // }\r\n        // if (error.response) {\r\n        //     alert(error.response.data.message)\r\n        //   }\r\n    }\r\n\r\n}\r\nexport default PermissionHandler\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport { AGENT_PACKAGE_API, PACKAGE_ALL_API } from '../services/api_url'\r\nimport PermissionHandler from 'services/permisionHandler'\r\nexport const PackagesContext = createContext()\r\n\r\nconst PackagesContextProvider = ({ children }) => {\r\n  const [packages, setPackages] = useState([])\r\n  useEffect(() => {\r\n    permissionController()\r\n  }, [])\r\n  const permissionController = async () => {\r\n    try {\r\n      let permission = await PermissionHandler();\r\n      if (permission.data.type === \"admin\") {\r\n        getAllPackages(); //for admin\r\n      } else {\r\n        getPackagesByUser();//for agent\r\n      }\r\n    } catch (error) {\r\nconsole.log(error)\r\n    }\r\n  }\r\n\r\n  const getPackagesByUser = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_PACKAGE_API)\r\n      if (result.data.success) {\r\n        setPackages(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      // console.error('Get All Packages Error: ', error)\r\n    }\r\n  }\r\n\r\n  const getAllPackages = async () => {\r\n    try {\r\n      let result = await axios.get(PACKAGE_ALL_API)\r\n      if (result.data.success) {\r\n        setPackages(result.data.data)\r\n\r\n      }\r\n    } catch (error) {\r\n      alert(\"data fetching error\")\r\n    }\r\n  }\r\n\r\n  return <PackagesContext.Provider value={{ packages, setPackages }}>{children}</PackagesContext.Provider>\r\n}\r\n\r\nexport default PackagesContextProvider","\r\nimport React, { useState, useContext, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport axios from '../../services/axios'\r\nimport { ITINERARY_API } from '../../services/api_url';\r\nimport { PackagesContext } from '../../contexts/AgentPackageContext'\r\nimport _ from \"lodash\"\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport ImageUploading from \"react-images-uploading\";\r\n\r\n\r\nfunction ItineraryForm({packageId}) {\r\n    var step = 1\r\n    const ItineraryModel = {\r\n        day: step,\r\n        routeName: '',\r\n        routeDesc: '',\r\n        routeImg: ''\r\n    }\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (key, value, name) => {\r\n        obj = {\r\n            key: key,\r\n            value: value,\r\n            name: name,\r\n        };\r\n\r\n        arr.push(obj);\r\n    };\r\n\r\n    const { packages } = useContext(PackagesContext)\r\n    const [itinerary, setItinerary] = useState([ItineraryModel]);\r\n    const [itineraryImage, setItineraryImage] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [day, setDay] = useState(step)\r\n    const { addToast } = useToasts()\r\n    const [preview, setPreview] = useState([]);\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    //    let pckgJSON = {}\r\n    const getSelectedImage = (files) => {\r\n        let fileObj = [];\r\n        let fileArray = []\r\n        fileObj.push(files)\r\n        for (let i = 0; i < fileObj[0].length; i++) {\r\n            fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n        }\r\n        setPreview(fileArray)\r\n        setItineraryImage(fileObj);\r\n    };\r\n    useEffect(() => {\r\n        packages.map((option, i) =>\r\n            newObj(i, option._id, option.title, option.title)\r\n        );\r\n    }, [arr])\r\n    const onUpdateItinerary = async (e) => {\r\n     \r\n        const formData = new FormData();\r\n        formData.append(\"event\", \"itinerary\");\r\n        formData.append(\"packageId\", packageId);\r\n        //Itinerary Array\r\n        Array.from(validFiles).map(function (value, index) {\r\n            formData.append(\"picture\", validFiles[index]);\r\n        })\r\n        formData.append(\"itinerary\", JSON.stringify(itinerary));\r\n        try {\r\n            let result = await axios.post(ITINERARY_API, formData);\r\n            if (result.data.success) {\r\n                addToast(\"Itinerary Added\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.href=\"/app/package-view\"\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                addToast(error.response.data.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setId(selectedList[0].value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        let filteredArray = selectedFiles.reduce((file, current) => {\r\n            const x = file.find(item => item.name === current.name);\r\n            if (!x) {\r\n                return file.concat([current]);\r\n            } else {\r\n                return file;\r\n            }\r\n        }, []);\r\n        setValidFiles([...filteredArray]);\r\n\r\n    }, [selectedFiles]);\r\n    const handleFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            // add to an array so we can display the name of file\r\n            setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n            // add a new property called invalid\r\n            // files\\[i\\]['invalid'] = true;\r\n            // add to the same array so we can display the name of the file\r\n            // set error message\r\n        }\r\n    }\r\n    const removeFile = (name) => {\r\n        // find the index of the item\r\n        // remove the item from array\r\n        const validFileIndex = validFiles.findIndex(e => e.name === name);\r\n        validFiles.splice(validFileIndex, 1);\r\n        // update validFiles array\r\n        setValidFiles([...validFiles]);\r\n        const selectedFileIndex = selectedFiles.findIndex(e => e.name === name);\r\n        selectedFiles.splice(selectedFileIndex, 1);\r\n        // update selectedFiles array\r\n        setSelectedFiles([...selectedFiles]);\r\n    }\r\n    const handleFileChange = () => {\r\n        getSelectedImage(fileInputRef.current.files)\r\n        if (fileInputRef.current.files.length) {\r\n            handleFiles(fileInputRef.current.files);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"bg-secondary shadow mb-4\">\r\n                <CardBody>\r\n                    <h3 className=\"text-muted mb-4\">Make sure you have added your itinerary correctly (Dont refresh page)</h3>\r\n                    {/* <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label className=\"form-control-label\">Package Type</label>\r\n                            <Multiselect\r\n                                selectionLimit=\"1\"\r\n                                displayValue=\"name\"\r\n                                className='form-control'\r\n                                options={arr}\r\n                                onSelect={onSelect}\r\n                                style={{\r\n                                    searchBox: {\r\n                                        border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col> */}\r\n                    <div className=\"pl-lg-4\">\r\n                        {itinerary.map((p, index) => {\r\n                            return (\r\n                                <>\r\n                                    <Row>\r\n                                        <label className=\"my-4\">Day {step++}</label>\r\n                                        <Col md=\"2\">\r\n                                            <FormGroup>\r\n                                                <label\r\n                                                    className=\"form-control-label\"\r\n                                                    htmlFor=\"input-address\"\r\n                                                > Route Name </label>\r\n                                                <input\r\n                                                    name='routeName'\r\n                                                    className='form-control'\r\n                                                    placeholder='enter route name'\r\n                                                    onChange={e => {\r\n                                                        const routeName = e.target.value;\r\n                                                        var temp = itinerary\r\n                                                        temp[index].routeName = routeName\r\n                                                        setItinerary(temp)\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md=\"6\">\r\n                                            <FormGroup>\r\n                                                <label\r\n                                                    className=\"form-control-label\"\r\n                                                    htmlFor=\"input-description\"\r\n                                                > Route Description </label>\r\n                                                <textarea\r\n                                                    rows=\"2\"\r\n                                                    cols=\"40\"\r\n                                                    name='routeDesc'\r\n                                                    className='form-control'\r\n                                                    placeholder='enter route description'\r\n                                                    onChange={e => {\r\n                                                        const routeDesc = e.target.value;\r\n                                                        var temp = itinerary\r\n                                                        temp[index].routeDesc = routeDesc\r\n                                                        setItinerary(temp)\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {/* <Col md=\"2\">\r\n                                            <FormGroup>\r\n                                                <label\r\n                                                    className=\"form-control-label\" htmlFor=\"input-description\">Image</label>\r\n                                                <input\r\n                                                    name=\"picture\"\r\n                                                    type=\"file\"\r\n                                                    accept=\"image/png, image/jpeg, image/jpg\"\r\n                                                    // onChange={(e) => getSelectedImage(e)}\r\n                                                    ref={fileInputRef}\r\n                                                    onChange={() => handleFileChange()}\r\n                                                    className=\"form-control\"\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col> */}\r\n                                        {/* {itinerary.length === index + 1 && <Button className=\"btn btn-danger\" onClick={(e) => removeForm(index)}>Remove</Button>} */}\r\n                                    </Row>\r\n                                </>\r\n                            );\r\n                        })}\r\n\r\n                        {/* {preview.length <= 0 ? \"\" :\r\n                            <div className=\"form-group multi-preview\">\r\n                                {validFiles && validFiles.map((file, i) =>\r\n                                    <>\r\n                                        <span><i className=\"fa fa-times\" onClick={() => removeFile(file.name)}></i></span>\r\n                                        <img height=\"100\" width=\"100\" className=\"img-fluid\" alt=\"Responsive image\" src={URL.createObjectURL(file)} />\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            </div>} */}\r\n                        <Button\r\n                            onClick={(e) => {\r\n                                e.preventDefault()\r\n                                let tempday = day\r\n                                tempday++;\r\n                                setDay(tempday)\r\n                                setItinerary(itinerary => [\r\n                                    ...itinerary,\r\n                                    {\r\n                                        day: tempday,\r\n                                        routeName: \"\",\r\n                                        routeDesc: \"\",\r\n                                        routeImg: '',\r\n                                    }\r\n                                ]);\r\n                            }}\r\n                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                            <li className=\"fas fa-plus\"></li>\r\n                        </Button>\r\n                        {day > 1 ? (<Button\r\n                            onClick={(e) => onUpdateItinerary(e)}\r\n                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                            Add Itinerary\r\n                        </Button>) :\r\n                            \"\"}\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItineraryForm\r\n\r\n\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  CardBody,\r\n  Card,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport PackageForm from \"./PackageForm\";\r\nimport ItineraryForm from \"./ItineraryForm\";\r\nconst PackageTab = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [packageId, setPackageId] = useState('');\r\n\r\n  const tabs = [\r\n    { id: \"1\", name: \"Package Information\", icon: \"fas fa-plus-square text-green\", visible: true },\r\n    { id: \"2\", name: \"Itinerary\", icon: \"fas fa-edit text-green\", visible: true }\r\n  ]\r\n  const actions = [\r\n    { icon: (<i className=\"fas fa-eye\"></i>), path: \"/app/package-view\", name: \"View Package List\" },\r\n  ]\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <PackageForm activeTab={activeTab} setActiveTab={setActiveTab} setPackageId={setPackageId} />\r\n              </TabPane>\r\n              {packageId !== \"\" ?\r\n                <TabPane tabId=\"2\">\r\n                  <ItineraryForm activeTab={activeTab} setActiveTab={setActiveTab} packageId={packageId} />\r\n                </TabPane> : (\r\n                  <Card className=\"bg-secondary shadow mb-4\">\r\n                    <CardBody>\r\n                      <h4>To add itinerary please first add your required package.</h4>\r\n                    </CardBody></Card>\r\n                )}\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PackageTab;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { RESTAURANT_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    address: Yup.string().required('Address room is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    desc: Yup.string().required('Description is required'),\r\n    country: Yup.string().required('Country is required'),\r\n})\r\n\r\nfunction RestaurantForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n    const [dateRange, setDateRange] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"restaurant\");\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(RESTAURANT_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Restaurant Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        address: '',\r\n                        contact: '',\r\n                        videoUrl: '',\r\n                        desc: '',\r\n                        country: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Restaurant Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Restaurant Name</label>\r\n                                            <input\r\n                                                name='name'\r\n                                                className='form-control'\r\n                                                placeholder='Enter restaurant name'\r\n                                                value={props.values.name}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.name && props.touched.name ? (\r\n                                                <small className='form-text text-danger'>{props.errors.name}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country</label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Address  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact  </label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='desc'\r\n                                                className='form-control'\r\n                                                placeholder='Enter restaurant description'\r\n                                                value={props.values.desc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.desc && props.touched.desc ? (\r\n                                                <small className='form-text text-danger'>{props.errors.desc}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                           \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i className=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i className=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default RestaurantForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport { AGENT_RESTAURANT_API, RESTAURANT_ALL_API } from '../services/api_url'\r\nimport PermissionHandler from 'services/permisionHandler'\r\n\r\nexport const RestaurantContext = createContext()\r\n\r\nconst RestaurantContextProvider = ({ children }) => {\r\n  const [restaurants, setRestaurants] = useState([])\r\n\r\n  useEffect(() => {\r\n    permissionController()\r\n  }, [])\r\n  const permissionController = async () => {\r\n    try {\r\n      let permission = await PermissionHandler();\r\n      if (permission.data.type === \"admin\") {\r\n        getAllRestaurant(); //for admin\r\n      } else {\r\n        getRestaurantByUser();//for agent\r\n      }\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const getRestaurantByUser = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_RESTAURANT_API)\r\n      if (result.data.success) {\r\n        setRestaurants(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Restaurant Error: ', error)\r\n    }\r\n  }\r\n  const getAllRestaurant = async () => {\r\n    try {\r\n      let result = await axios.get(RESTAURANT_ALL_API)\r\n      if (result.data.success) {\r\n        setRestaurants(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Restaurant Error: ', error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getRestaurantByUser()\r\n  }, [])\r\n\r\n  return <RestaurantContext.Provider value={{ restaurants, setRestaurants }}>{children}</RestaurantContext.Provider>\r\n}\r\n\r\nexport default RestaurantContextProvider","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { FOOD_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nimport { FOOD_TYPE } from 'MultipleOption';\r\nimport {RestaurantContext} from '../../contexts/AgentRestaurantContext'\r\nconst ValidationSchema = Yup.object().shape({\r\n    foodName: Yup.string().required('Name is required'),\r\n    price: Yup.string().required('Contact is required'),\r\n})\r\nfunction FoodForm() {\r\n    const {restaurants} =  useContext(RestaurantContext)\r\n    const [restaurantId, setRestaurantId] = useState('')\r\n    const [foodType, setFoodType] = useState('')\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 4;\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n    useEffect(() => {\r\n        restaurants.map((option, i) =>\r\n            newObj(option._id, option.name)\r\n        );\r\n    }, [arr])\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    const onSelectRestaurant = (item) => {\r\n        setRestaurantId(item.value)\r\n    }\r\n    const onSelectFoodType = (item) => {\r\n        setFoodType(item.value)\r\n    }\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"food\");\r\n            formData.append(\"foodType\", foodType);\r\n            formData.append(\"restaurant\", restaurantId);\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(FOOD_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    addToast(\"Food Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        foodName: '',\r\n                        price: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Food Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\" >Restaurant Name</label>\r\n                                            <Select\r\n                                                onChange={onSelectRestaurant}\r\n                                                options={arr} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Food Name</label>\r\n                                            <Field\r\n                                                name='foodName'\r\n                                                className='form-control'\r\n                                                placeholder='Enter food name'\r\n                                                value={props.values.foodName}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.foodName && props.touched.foodName ? (\r\n                                                <small classfoodName='form-text text-danger'>{props.errors.foodName}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='Enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Food Types</label>\r\n                                            <Select onChange={onSelectFoodType}\r\n                                                options={FOOD_TYPE} />\r\n                                        </FormGroup>\r\n                                    </Col> \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control' \r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i className=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i className=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FoodForm\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport RestaurantForm from './RestaurantForm'\r\nimport FoodForm from \"./FoodForm\";\r\nconst RestaurantTab = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const tabs =[\r\n    {id:\"1\",name:\"Add Restaurant\",icon:\"fas fa-plus-square text-green\",visible: true},\r\n    {id:\"2\",name:\"Food Section\",icon:\"fas fa-plus-square text-green\",visible: true},\r\n]\r\n  const actions =[\r\n    {icon:(<i className=\"fas fa-eye\"></i>) ,path:\"/app/restaurant-view\",name:\"View Restaurant List\"},\r\n]\r\n\r\n\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <RestaurantForm /> {/* //Adding Hotel */}   \r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <FoodForm/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantTab;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\n// import { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from \"react-select\"\r\nimport { AMENITIES } from '../../MultipleOption'\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    totalRoom: Yup.string().required('Total room is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    cancelPolicy: Yup.string().required('Cancel Policy is required'),\r\n    hotelDesc: Yup.string().required('Description is required')\r\n})\r\nfunction HotelForm({ setActiveTab, setHotelId }) {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [country, setCountry] = useState(\"\");\r\n    const [amenities, setAmenities] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"hotel\");\r\n            formData.append(\"country\", country);\r\n            //Amenities Array\r\n            for (var i = 0; i < amenities.length; i++) {\r\n                formData.append('amenities', amenities[i].value);\r\n            }\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(HOTEL_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    setHotelId(result.data.current_save_id);\r\n                    setActiveTab(\"2\")\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onSelectAmenities = (value) => {\r\n        setAmenities(value)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        totalRoom: '',\r\n                        address: '',\r\n                        // checkIn: '',\r\n                        // checkOut: '',\r\n                        cancelPolicy: '',\r\n                        hotelDesc: '',\r\n                        contact: '',\r\n                        videoUrl: ''\r\n                    }}\r\n                    // validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Hotel Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Hotel Name</label>\r\n                                            <input\r\n                                                name='name'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.name}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.name && props.touched.name ? (\r\n                                                <small className='form-text text-danger'>{props.errors.name}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Total Room</label>\r\n                                            <Field\r\n                                                name='totalRoom'\r\n                                                className='form-control'\r\n                                                placeholder='Enter total room'\r\n                                                value={props.values.totalRoom}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.totalRoom && props.touched.totalRoom ? (\r\n                                                <small className='form-text text-danger'>{props.errors.totalRoom}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country  </label>\r\n\r\n                                            <CountryDropdown\r\n                                                className='form-control'\r\n                                                value={country}\r\n                                                valueType=\"full\"\r\n                                                // whitelist={[\"NP\", \"US\"]}\r\n                                                priorityOptions={[\"NP\", \"US\", \"GB\"]}\r\n                                                onChange={(val) => setCountry(val)} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">\r\n                                                Address  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='hotelDesc'\r\n                                                className='form-control'\r\n                                                placeholder='Enter hotel description'\r\n                                                value={props.values.hotelDesc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Amenities</label>\r\n                                            <Select\r\n                                                isMulti\r\n                                                onChange={onSelectAmenities}\r\n                                                options={AMENITIES} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact</label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact number'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">\r\n                                                Cancellation Policy </label>\r\n                                            <select onChange={props.handleChange} name='cancelPolicy' className='form-control'>\r\n                                                <option value=\"\">Select Cancel Policy</option>\r\n                                                <option value=\"One day before check in (6 pm)\">One day before check in (6 pm)</option>\r\n                                                <option value=\"Two day before check in (6 pm)\">Two day before check in (6 pm)</option>\r\n                                            </select>\r\n                                            {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {/* //For check in check out  */}\r\n                                {/* <h6 className=\"heading-small text-muted mb-4\"> Amenities</h6>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-videoUrl\">\r\n                                                Check In/Out </label>\r\n                                            <DateRangePicker\r\n                                                onChange={item => setDateRange([item.selection])}\r\n                                                showSelectionPreview={true}\r\n                                                moveRangeOnFirstSelection={false}\r\n                                                months={2}\r\n                                                ranges={dateRange}\r\n                                                direction=\"horizontal\"\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                </Row> */}\r\n\r\n                                <hr className=\"my-4\" />\r\n                                <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i className=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i className=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n\r\n                            <div className='pl-lg-4 form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default HotelForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport { AGENT_HOTEL_API, HOTEL_ALL_API } from '../services/api_url'\r\nimport PermissionHandler from 'services/permisionHandler'\r\n\r\nexport const HotelContext = createContext()\r\n\r\nconst HotelContextProvider = ({ children }) => {\r\n  const [hotels, setHotels] = useState([])\r\n  useEffect(() => {\r\n    permissionController()\r\n  }, [])\r\n  const permissionController = async () => {\r\n    try {\r\n      let permission = await PermissionHandler();\r\n      if (permission.data.type === \"admin\") {\r\n        getAllHotels(); //for admin\r\n      } else {\r\n        getHotelDetails();//for agent\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const getHotelDetails = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_HOTEL_API)\r\n      if (result.data.success) {\r\n        setHotels(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Hotel Error: ', error)\r\n    }\r\n  }\r\n\r\n  const getAllHotels = async () => {\r\n    try {\r\n      let result = await axios.get(HOTEL_ALL_API)\r\n      if (result.data.success) {\r\n        setHotels(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      alert(\"data fetching error\")\r\n    }\r\n  }\r\n\r\n  return <HotelContext.Provider value={{ hotels, setHotels }}>{children}</HotelContext.Provider>\r\n}\r\n\r\nexport default HotelContextProvider","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_ROOM_ADD_API, AGENT_HOTEL_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nimport { HotelContext } from '../../contexts/HotelContext'\r\nimport { ROOM_TYPE } from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    price: Yup.string().required('Price is required'),\r\n    numberOfRoom: Yup.string().required('Total room is required'),\r\n    seat: Yup.string().required('seat is required'),\r\n})\r\n\r\nfunction HotelRoomForm({hotelId}) {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const [roomType, setRoomType] = useState(\"\");\r\n    const maxNumber = 10;\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n   \r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"room\");\r\n            formData.append(\"hotelId\", hotelId);\r\n            formData.append(\"type\", roomType);\r\n            //Package Image Arrary\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            //Non-Array Value to store package desc, name, title\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(HOTEL_ROOM_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Room Added. Add more if you want to\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const onSelectRoomType = (roomType) => {\r\n        setRoomType(roomType.value)\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        price:\"\",\r\n                        numberOfRoom: '',\r\n                        seat: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Hotel Room Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    {/* <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-username\" >Hotel Name</label>\r\n                                            <Select\r\n                                                onChange={onSelectHotelOption}\r\n                                                options={arr} />\r\n                                        </FormGroup>\r\n                                    </Col> */}\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-price\"\r\n                                            >Room Type</label>\r\n                                            <Select\r\n                                                onChange={onSelectRoomType}\r\n                                                options={ROOM_TYPE} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"> Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Number of room  </label>\r\n                                            <Field\r\n                                                name='numberOfRoom'\r\n                                                className='form-control'\r\n                                                placeholder='Enter number of room'\r\n                                                value={props.values.numberOfRoom}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.numberOfRoom && props.touched.numberOfRoom ? (\r\n                                                <small className='form-text text-danger'>{props.errors.numberOfRoom}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Available Seat(Person per bed)</label>\r\n                                            <Field\r\n                                                name='seat'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Seat per person'\r\n                                                value={props.values.seat}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.seat && props.touched.seat ? (\r\n                                                <small className='form-text text-danger'>{props.errors.seat}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                        <Col md=\"2\">\r\n                                                                <div \r\n                                                                    onClick={onImageUpload}>\r\n                                                                   <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i className=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i className=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default HotelRoomForm","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  TabContent,\r\n  TabPane,\r\n  CardBody,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport HotelForm from \"./HotelForm\";\r\nimport HotelRoomForm from \"./HotelRoomForm\";\r\nconst HotelTab = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [hotelId, setHotelId] = useState('');\r\n\r\n  const tabs = [\r\n    { id: \"1\", name: \"Add\", icon: \"fas fa-plus-square text-green\", visible: true },\r\n    { id: \"2\", name: \"Room\", icon: \"fas fa-edit text-green\", visible: true }\r\n  ]\r\n  const actions = [\r\n    { icon: (<i className=\"fas fa-eye\"></i>), path: \"/app/hotel-view\", name: \"View Hotel List\" },\r\n  ]\r\n\r\n\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <HotelForm activeTab={activeTab} setActiveTab={setActiveTab} setHotelId={setHotelId} /> {/* //Adding Hotel */}\r\n              </TabPane>\r\n              {hotelId !== \"\" ?\r\n                <TabPane tabId=\"2\">\r\n                  <HotelRoomForm activeTab={activeTab} setActiveTab={setActiveTab} hotelId={hotelId} />\r\n                </TabPane> : (\r\n                  <Card className=\"bg-secondary shadow mb-4\">\r\n                    <CardBody>\r\n                      <h4>To add room please {hotelId}  first add your hotel detail.</h4>\r\n                    </CardBody></Card>\r\n                )}\r\n\r\n\r\n\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotelTab;\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { CLUB_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nconst ValidationSchema = Yup.object().shape({\r\n    clubName: Yup.string().required('Name is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n})\r\nfunction ClubForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 4;\r\n  \r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    const onAddTrigger = async (values, actions) => {\r\n     \r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"club\");\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(CLUB_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    addToast(\"Club Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        clubName: '',\r\n                        address: '',\r\n                        country: '',\r\n                        desc: '',\r\n                        contact: ''\r\n                    }}\r\n                    // validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                               Club Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                  \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Club Name</label>\r\n                                            <Field\r\n                                                name='clubName'\r\n                                                className='form-control'\r\n                                                placeholder='Enter club name'\r\n                                                value={props.values.clubName}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.clubName && props.touched.clubName ? (\r\n                                                <small classclubName='form-text text-danger'>{props.errors.clubName}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country</label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact</label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>    \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Address</label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                              {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>                                \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"8\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description</label>\r\n                                            <Field\r\n                                                name='desc'\r\n                                                className='form-control'\r\n                                                placeholder='Describe about your club in detail.'\r\n                                                value={props.values.desc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                              {props.errors.desc && props.touched.desc ? (\r\n                                                <small className='form-text text-danger'>{props.errors.desc}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i className=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i className=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ClubForm\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    TabContent,\r\n    TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport ClubForm from \"./ClubForm\";\r\nconst ClubTab = () => {\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n    const tabs = [\r\n        { id: \"1\", name: \"Add\", icon: \"fas fa-plus-square text-green\",visible: false },\r\n    ]\r\n    const actions = [\r\n        { icon: (<i className=\"fas fa-eye\"></i>), path: \"/app/club-view\", name: \"View Club List\" },\r\n    ]\r\n    return (\r\n        <>\r\n            <BannerHeader actions={actions} />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                <Row>\r\n                    <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n                        <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ClubForm /> {/* //Adding Hotel */}\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClubTab;\r\n","import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Col } from 'reactstrap';\r\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nconst DataTable = ({ columns, data, defaultSorted }) => {\r\n  const { ToggleList } = ColumnToggle;\r\n  const { SearchBar } = Search;\r\n  const options = {\r\n    custom: true,\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: '<<',\r\n    prePageText: '<',\r\n    nextPageText: '>',\r\n    lastPageText: '>>',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: data.length\r\n  };\r\n  const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\r\n    sortOrder === 'asc' ? 'demo-sorting-asc' : 'demo-sorting-desc'\r\n  );\r\n  \r\n  const rowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n      //  console.log(row);\r\n    }\r\n  };\r\n  const rowStyle2 = (row, rowIndex) => {\r\n    const style = {};\r\n    if (row.id > 3) {\r\n      style.backgroundColor = '#c8e6c9';\r\n    } else {\r\n      style.backgroundColor = '#00BFFF';\r\n    }\r\n  \r\n    if (rowIndex > 2) {\r\n      style.fontWeight = 'bold';\r\n      style.color = 'white';\r\n    }\r\n  \r\n    return style;\r\n  };\r\n  // const rowStyle = { backgroundColor: '#c8e6c9', height: '70px', fontSize:\"100px\"};\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"id\"\r\n        columns={columns}\r\n        data={data}\r\n        search\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <hr />\r\n              <SearchBar\r\n                className=\"col-md-12\"\r\n                style={{ width: '300px' }}\r\n                placeholder=\"Search\"\r\n                {...props.searchProps} />\r\n              <BootstrapTable\r\n                classes=\"table-responsive table-dark table-f\"\r\n                keyField=\"id\"\r\n                data={data}\r\n                columns={columns}\r\n                rowEvents={rowEvents}\r\n                filter={filterFactory()}\r\n                defaultSorted={defaultSorted}\r\n                {...props.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </ToolkitProvider>\r\n      <PaginationListStandalone {...paginationProps} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <PaginationProvider\r\n      pagination={\r\n        paginationFactory(options)\r\n      }\r\n    >\r\n      {contentTable}\r\n    </PaginationProvider>\r\n  );\r\n}\r\n\r\n// import BootstrapTable from 'react-bootstrap-table-next';\r\n// import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\n// import filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n// import paginationFactory from 'react-bootstrap-table2-paginator';\r\n// const DataTable = ({ columns, data,defaultSorted }) => {\r\n//     return (\r\n//         <BootstrapTable\r\n//            bodyClasses=\"foo\"\r\n//             bootstrap4\r\n//             keyField=\"id\"\r\n//             data={data}\r\n//             columns={columns}\r\n//             defaultSorted={defaultSorted}\r\n//         />\r\n//     )\r\n// }\r\n\r\nexport default DataTable;","import React from \"react\";\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst NoActionBanner = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-2 pt-1 pt-lg-7 d-flex align-items-center\">\r\n        <span className=\"mask bg-gradient-default opacity-7\" />\r\n        {/* <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"action\">\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoActionBanner;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { APPROVE_PRE_REGISTER, PRE_REGISTER_GET } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\n\r\nfunction PreRegisters() {\r\n    const { addToast } = useToasts()\r\n    const [business, setBusiness] = useState([])\r\n    const confirmAction = (_id) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Confirmation for business approval.</h4>\r\n                        <p>Are you sure you want to confirm this business? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => {\r\n                                onApprove(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Approve</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const getAllBusinessDetail = async () => {\r\n        try {\r\n            let result = await axios.get(PRE_REGISTER_GET)\r\n            if (result.data.success) {\r\n                setBusiness(result.data.data)\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Data fetching error\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onApprove = async (id) => {\r\n        try {\r\n            let result = await axios.put(APPROVE_PRE_REGISTER + id,{\r\n                status:true\r\n            })\r\n            if (result.data.success) {\r\n                window.location.reload();\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Cannot Approve\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n        const onApproveAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div >\r\n                {row.status ? \"\" :<Button className=\"btn btn-success button\" onClick={(e) => confirmAction(row._id)}><i className=\"fas fa-check-double\"></i></Button>}\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc' \r\n    }];\r\n    const statusFormat = (cell, row, rowIndex, formatExtraData) => {\r\n        return <div >\r\n            {!row.status ? <span className=\"text-red\">Pending</span> :<span className=\"text-green\">Approved</span>}\r\n        </div>\r\n    }\r\n    const columns = [\r\n        { dataField: 'fullName',text: 'Name', },\r\n        { dataField: 'businessName', text: 'Business'},\r\n        { dataField: 'address', text: 'Address' },\r\n        { dataField: 'email', text: 'Email' },\r\n        { dataField: 'contact', text: 'Contact' },\r\n        { dataField: 'businessFor', text: 'Approach' },\r\n        { dataField: 'other', text: 'Other' },\r\n        { dataField: 'createdAt',sort:defaultSorted, text: 'Date',formatter:(cell,row)=>{return <span >{moment(row.createdAt).format(\"dddd, MMMM Do YYYY\")}</span>}},\r\n        { dataField: 'status', text: 'Approval', formatter: statusFormat },\r\n        { dataField: 'Action', text: 'Action', formatter: onApproveAction },\r\n    ];\r\n    useEffect(() => {\r\n        getAllBusinessDetail()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={business} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PreRegisters\r\n","import React, { useState, createContext } from 'react'\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/PropagateLoader'\r\n\r\nexport const PreLoaderContext = createContext()\r\n\r\nconst override = css`\r\n\tdisplay: block;\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tborder-color: #f7931e;\r\n\tz-index: 10000;\r\n\t\r\n`\r\n\r\nconst PreloaderContextProvider = ({ children }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\treturn (\r\n\t\t<PreLoaderContext.Provider value={{ isLoading, setIsLoading }}>\r\n\t\t\t{children}\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='pre-loader'></div>\r\n\t\t\t\t\t<GridLoader css={override} size={20} color={'#f7931e'} loading={isLoading} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</PreLoaderContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default PreloaderContextProvider\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { USERS_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nconst ValidationSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    gender: Yup.string().required('Gender is required'),\r\n    fullname: Yup.string().required('Fullname is required')\r\n})\r\nfunction UserAdd() {\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const onAddTrigger = async (values, actions) => {\r\n        try {\r\n            let result = await axios.post(USERS_ADD_API, values);\r\n            if (result.data.success) {\r\n                removeAllToasts()\r\n                window.location.reload();\r\n            }else{\r\n                addToast(result.data.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                removeAllToasts()\r\n                addToast(error.response.data.err, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">User Add Form</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            contact: '',\r\n                            gender: '',\r\n                            country: '',\r\n                            address: '',\r\n                            fullname: ''\r\n                        }}\r\n                        validationSchema={ValidationSchema}\r\n                        onSubmit={(values, actions) => {\r\n                            onAddTrigger(values, actions)\r\n                        }}>\r\n                        {props => (\r\n                            <Form className='col-md-12'>\r\n                                <div className=\"pl-lg-2\">\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Full Name</label>\r\n                                                <input\r\n                                                    name='fullname'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter your fullname'\r\n                                                    value={props.values.fullname}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.fullname && props.touched.fullname ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.fullname}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Email</label>\r\n                                                <Field\r\n                                                    name='email'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter email'\r\n                                                    value={props.values.email}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.email && props.touched.email ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.email}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Country  </label>\r\n                                                <Field\r\n                                                    name='country'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter country'\r\n                                                    value={props.values.country}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.country && props.touched.country ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Address  </label>\r\n                                                <Field\r\n                                                    name='address'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter address'\r\n                                                    value={props.values.address}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.address && props.touched.address ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Gender</label>\r\n                                                <select className='form-control' name=\"gender\"\r\n                                                    onChange={props.handleChange}>\r\n                                                    <option value=\"male\">Male</option>\r\n                                                    <option value=\"female\">Female</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Contact </label>\r\n                                                <Field\r\n                                                    name='contact'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter contact'\r\n                                                    value={props.values.contact}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.contact && props.touched.contact ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div className='pl-lg-4 form-group'>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAdd","import React, { useState, useContext, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { USERS_GET, USER_DELETE_API, USER_UPDATE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { PreLoaderContext } from '../../contexts/PreLoaderContext'\r\nimport Roles from '../../role'\r\nimport UserAdd from './UserAdd'\r\n\r\nfunction UsersDetails() {\r\n    const { setIsLoading } = useContext(PreLoaderContext)\r\n    const { addToast } = useToasts()\r\n    const [users, setUsers] = useState([])\r\n\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} User</h4>\r\n                        <p>Are you sure you want to delete this data? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteUser(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const getAllUsers = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            let result = await axios.get(USERS_GET)\r\n            if (result.data.success) {\r\n                setIsLoading(false)\r\n                setUsers(result.data.users)\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            if (error.response) {\r\n                addToast(error.response.data.error, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const onDeleteUser = async (id) => {\r\n        try {\r\n            let result = await axios.delete(USER_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Cannot delete\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onUpdateRole = async (e, id) => {\r\n        try {\r\n            let result = await axios.put(USER_UPDATE_API, {\r\n                type: e.target.value,\r\n                _id: id\r\n            })\r\n            if (result.data.success) {\r\n                window.location.reload();\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Update failed\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const actionOptionRow = (cell, row, rowIndex, formatExtraData) => {\r\n        return <>\r\n            <button className=\"btn-custominfo\" onClick={(e) => alert(rowIndex)}><i className=\"fas fa-edit\"></i></button>\r\n             <button className=\"btn-customdanger\" onClick={(e) => confirmDelete(row._id, row.fullname)}><i className=\"fas fa-trash\"></i></button>\r\n        </>\r\n    }\r\n    const userRoleSelection = (cell, row, rowIndex, formatExtraData) => {\r\n        return <>\r\n            <select className=\"form-control\" onChange={(e) => onUpdateRole(e, row._id)}>\r\n                <option>Not assigned</option>\r\n                {Roles.map((role) =>\r\n                    <option value={role.value} selected={row.type?.includes(role.value)}>\r\n                        {role.label}\r\n                    </option>\r\n                )}\r\n\r\n            </select>\r\n        </>\r\n    }\r\n    const columns = [\r\n        { dataField: 'fullname', text: 'Full Name' },\r\n        { dataField: 'email', text: 'Email' },\r\n        { dataField: 'contact', text: 'Contact' },\r\n        { dataField: 'gender', text: 'Gender' },\r\n        { dataField: 'country', text: 'Country' },\r\n        { dataField: 'address', text: 'Address' },\r\n        { dataField: 'type', text: 'Role', formatter: userRoleSelection },\r\n        { dataField: 'Action', text: 'Action', formatter: actionOptionRow },\r\n        // { dataField: 'userImage', text: 'Date', formatter: (cell, row) => { return <img src={row.userImage}/> } },\r\n    ];\r\n    useEffect(() => {\r\n        getAllUsers()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <UserAdd/>\r\n                    <div className=\"pb-3\">\r\n                        <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"><i className=\"fas fa-plus-circle\"></i></button>\r\n                    </div>\r\n                    <DataTable columns={columns} data={users} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersDetails\r\n","import React from 'react'\r\nfunction TitlePage({ title }) {\r\n    return (\r\n        <h2>{title}</h2>\r\n    )\r\n}\r\n\r\nexport default TitlePage\r\n","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { HotelContext } from 'contexts/HotelContext'\r\nimport TitlePage from 'components/Headers/TitlePage'\r\n\r\nfunction HotelDetails() {\r\n    const { addToast } = useToasts()\r\n    const {hotels} = useContext(HotelContext);\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Hotel</h4>\r\n                        <p>Are you sure you want to delete this hotel? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(HOTEL_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onDateText = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n           <span >{moment(row.startDate).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <button className=\"btn-custominfo\" onClick={(e) => alert(rowIndex)}><i className=\"fas fa-eye\"></i></button>\r\n                    <button className=\"btn-customdanger\" onClick={(e) => confirmDelete(row._id, row.title)}><i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const columns = [\r\n        { dataField: 'name', text: 'Hotel Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'totalRoom', text: 'Total Room',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'hotelDesc', text: 'Description',filter: textFilter() },\r\n        { dataField: 'videoUrl', text: 'Link'},\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    // useEffect(() => {\r\n    //     getAllHotels()\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                <TitlePage title=\"Hotel List\" />\r\n\r\n                    <DataTable columns={columns} data={hotels} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HotelDetails\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { PACKAGES_TYPE } from './PackageType';\r\nimport { PACKAGE_UPDATE_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { includesOption } from '../../MultipleOption'\r\n\r\nfunction PackageUpdate({ pckg, pkgId, setIsUpdate }) {\r\n    const initialValue = pckg;\r\n    const [includes, setIncludes] = useState([]);\r\n    const [value, onChange] = useState(new Date());\r\n    const [isPrice, setIsPrice] = useState(false)\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const GroupDiscountModel = {\r\n        people: 0,\r\n        discount: 0,\r\n    }\r\n    const [groupDiscount, setGroupDiscount] = useState([GroupDiscountModel]);\r\n    const onUpdate = async (values, actions) => {\r\n        return\r\n        const formData = new FormData();\r\n        formData.append(\"event\", \"package\");\r\n        formData.append(\"startDate\", value);\r\n        formData.append(\"_id\", pkgId);\r\n        //Includes Array\r\n        for (var i = 0; i < includes.length; i++) {\r\n            formData.append('includes', includes[i].name);\r\n        }\r\n        formData.append(\"groupDiscount\", JSON.stringify(groupDiscount));\r\n        //Non-Array Value to store package desc, name, title\r\n        for (const property in values) {\r\n            formData.append(property, values[property]);\r\n        }\r\n        try {\r\n            let result = await axios.post(PACKAGE_UPDATE_API, formData);\r\n            if (result.data.success) {\r\n                removeAllToasts()\r\n                actions.resetForm();\r\n                addToast(\"Packages Added\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                removeAllToasts()\r\n                addToast(error.response.data.error, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n\r\n    const onRemove = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"pb-3\">\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={(e) => setIsUpdate(false)}\r\n                >Bacl to list</button>\r\n            </div>\r\n            <Formik\r\n            enableReinitialize\r\n                initialValues={initialValue}\r\n                // validationSchema={ValidationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    onUpdate(values, actions)\r\n                }}>\r\n                {props => (\r\n                    <Form className='mt-2'>\r\n                        <h6 className=\"heading-small text-muted mb-4\">Add Packages</h6>\r\n                        <div className=\"pl-lg-4\">\r\n                            {!isPrice ? (\r\n                                <React.Fragment>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Package Type  </label>\r\n                                                <select onChange={props.handleChange} name='packageType' className='form-control'>\r\n                                                    <option>Select Package Type</option>\r\n                                                    {PACKAGES_TYPE.map((data, i) => (\r\n                                                        <option key={i} value={data}\r\n                                                        // selected={type?.includes(data.packageType)}\r\n                                                        >\r\n                                                            {data}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\"\r\n                                                    htmlFor=\"input-username\" >Package Title</label>\r\n                                                <input\r\n                                                    name='title'\r\n                                                    className='form-control'\r\n                                                    placeholder='e.g: anapurna base camp'\r\n                                                    value={props.values.title}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.title && props.touched.title ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.title}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                       \r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\"\r\n                                                    htmlFor=\"input-first-name\"\r\n                                                > Destination</label>\r\n                                                <Field\r\n                                                    name='destination'\r\n                                                    className='form-control'\r\n                                                    placeholder='e.g. Kathmandu'\r\n                                                    value={props.values.destination}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.destination && props.touched.destination ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.destination}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\"\r\n                                                    htmlFor=\"input-address\">\r\n                                                    Meeting Point  </label>\r\n                                                <Field\r\n                                                    name='address'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter address'\r\n                                                    value={props.values.address}\r\n                                                    onChange={props.handleChange('address')}\r\n                                                />\r\n                                                {props.errors.address && props.touched.address ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"2\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Minimum traveler</label>\r\n                                                <Field\r\n                                                    name='minTraveler'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter minimum traveler'\r\n                                                    value={props.values.minTraveler}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.minTraveler && props.touched.minTraveler ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.minTraveler}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"2\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Duration  </label>\r\n                                                <Field\r\n                                                    name='duration'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter duration'\r\n                                                    value={props.values.duration}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.duration && props.touched.duration ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.duration}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Start Date  </label>\r\n                                                <DateTimePicker\r\n                                                    className=\"react-datetime-picker form-control\"\r\n                                                    onChange={onChange}\r\n                                                    value={value}\r\n                                                    format=\"y-MM-dd h:mm:ss a\"\r\n                                                    minDate={new Date()}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg=\"12\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Overview </label>\r\n                                                <textarea\r\n                                                    rows=\"4\"\r\n                                                    cols=\"40\"\r\n                                                    name='overview'\r\n                                                    className='form-control'\r\n                                                    placeholder='Specify your package overview'\r\n                                                    value={props.values.overview}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.overview && props.touched.overview ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.overview}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <>\r\n                                    <Row>\r\n                                        <Col lg=\"2\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Price per person  </label>\r\n                                                <Field\r\n                                                    name='price'\r\n                                                    className='form-control'\r\n                                                    placeholder='Price per person'\r\n                                                    value={props.values.price}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.price && props.touched.price ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <h2>10% Commission wil be charged on every booking</h2></Col>\r\n                                    </Row>\r\n                                    <h6 className=\"heading-small text-muted mb-4\"> Group Discount</h6>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            {groupDiscount.map((p, index) => {\r\n                                                return (\r\n                                                    <Row>\r\n                                                        <Col md=\"6\">\r\n                                                            <FormGroup>\r\n                                                                <label\r\n                                                                    className=\"form-control-label\">Number of people </label>\r\n                                                                <Field\r\n                                                                    name='people'\r\n                                                                    className='form-control'\r\n                                                                    placeholder='Enter number of people'\r\n                                                                    // value={p.people ? p.people: null}\r\n                                                                    onChange={e => {\r\n                                                                        const people = e.target.value;\r\n                                                                        var temp = groupDiscount\r\n                                                                        temp[index].people = people\r\n                                                                        setGroupDiscount(temp)\r\n                                                                    }}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md=\"6\">\r\n                                                            <FormGroup>\r\n                                                                <label\r\n                                                                    className=\"form-control-label\"> Discount (in Rs) </label>\r\n                                                                <Field\r\n                                                                    name='discount'\r\n                                                                    className='form-control'\r\n                                                                    placeholder='Enter your discount rate'\r\n                                                                    // value={p}\r\n                                                                    onChange={e => {\r\n                                                                        const discount = e.target.value;\r\n                                                                        var temp = groupDiscount\r\n                                                                        temp[index].discount = discount\r\n                                                                        setGroupDiscount(temp)\r\n                                                                    }}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                    </Row>\r\n                                                );\r\n                                            })}\r\n                                        </Col>\r\n                                        <Button\r\n                                            onClick={(e) => {\r\n                                                e.preventDefault()\r\n                                                setGroupDiscount(discount => [\r\n                                                    ...discount,\r\n                                                    {\r\n                                                        people: \"\",\r\n                                                        discount: \"\",\r\n                                                    }\r\n                                                ]);\r\n                                            }}\r\n                                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                                            <li className=\"fas fa-plus\"></li>\r\n                                        </Button>\r\n                                    </Row>\r\n                                    <hr className=\"my-2\" />\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Include Section </label>\r\n                                                <Multiselect\r\n                                                    displayValue=\"key\"\r\n                                                    className='form-control'\r\n                                                    options={includesOption}\r\n                                                    displayValue=\"name\"\r\n                                                    onSelect={onSelect}\r\n                                                    onRemove={onRemove}\r\n                                                    style={{\r\n                                                        chips: { background: \"#0f367c\" },\r\n                                                        searchBox: {\r\n                                                            border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"12\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Cancellation Policy </label>\r\n                                                <select onChange={props.handleChange} name='cancelPolicy' className='form-control'>\r\n                                                    <option value=\"One day before check in (6 pm)\">One day before check in (6 pm)</option>\r\n                                                    <option value=\"Two day before check in (6 pm)\">Two day before check in (6 pm)</option>\r\n                                                </select>\r\n                                                {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <div className='pl-lg-4 form-group'>\r\n                            <div className=\"text-left\">\r\n                                {isPrice ? (\r\n                                    <>\r\n                                        <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(false)} type=\"button\">\r\n                                            Back </button>\r\n                                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                                            Confirm</button>\r\n                                    </>) :\r\n                                    <button className=\"btn btn-primary\" onClick={(e) => setIsPrice(true)} type=\"button\">\r\n                                        Next\r\n                                        </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PackageUpdate\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { useContext, useState } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { PACKAGE_UPDATE_API, PACKAGE_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { PackagesContext } from 'contexts/AgentPackageContext'\r\nimport PackageUpdate from './PackageUpdate'\r\nimport TitlePage from 'components/Headers/TitlePage'\r\n\r\nfunction PackageDetails() {\r\n    const { addToast } = useToasts()\r\n    const [updateData, setUpdateData] = useState([])\r\n    const [isUpdate, setIsUpdate] = useState(false)\r\n    const [pkgId, setPkgId] = useState(\"\")\r\n    const { packages } = useContext(PackagesContext)\r\n    const confirm = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">{title}</h4>\r\n                        <p>Are you sure? This action cannot be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeletePackage(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Confirm it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const onUpdateChange = (id, pckg) => {\r\n        setIsUpdate(true);\r\n        setUpdateData(pckg);\r\n        setPkgId(id);\r\n    }\r\n    const onDeletePackage = async (id) => {\r\n        try {\r\n            let result = await axios.delete(PACKAGE_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onPublish = async (e, id) => {\r\n        try {\r\n            let result = await axios.put(PACKAGE_UPDATE_API, {\r\n                _id: id,\r\n                status: true\r\n            })\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Publish failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const onDraftAndPublish = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <div>\r\n                {!row.status ? (\r\n                    <Button className=\"btn btn-success\" onClick={(e) => onPublish(e, row._id)}><i className=\"fas fa-share\"></i></Button>\r\n                ) : <span className=\"text-green\">Published</span>}\r\n            </div>\r\n        );\r\n    }\r\n    const onDateText = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <span >{moment(row.startDate).format(\"llll\")}</span>\r\n            </>\r\n        );\r\n    };\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{ width: \"250px\" }}>\r\n                    <button className=\"btn-custominfo\" onClick={(e) => onUpdateChange(row._id, row)}><i className=\"fas fa-eye\"></i></button>\r\n                    <button className=\"btn-customdanger\" onClick={(e) => confirm(row._id, `Delete this ${row.title}`)}><i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'title', text: 'Title', sort: true, filter: textFilter() },\r\n        { dataField: 'packageType', text: 'Type', filter: textFilter() },\r\n        { dataField: 'destination', text: 'Destination', filter: textFilter() },\r\n        { dataField: 'address', text: 'Meeting Point', filter: textFilter() },\r\n        { dataField: 'price', text: 'price', sort: true, filter: textFilter() },\r\n        { dataField: 'minTraveler', text: 'Min Traveler', sort: true, filter: textFilter() },\r\n        { dataField: 'startDate', text: 'Date', formatter: onDateText },\r\n        { dataField: 'status', text: 'Status', sort: true, formatter: onDraftAndPublish },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    // useEffect(() => {\r\n    //     getAllPackages()\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <TitlePage title=\"Package List\" />\r\n                    {isUpdate ? <PackageUpdate pckg={updateData} pkgId={pkgId} setIsUpdate={setIsUpdate} /> :\r\n                        <DataTable columns={columns} data={packages} defaultSorted={defaultSorted} />}\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PackageDetails\r\n","import React, { useState, useEffect, useMemo, useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { RESTAURANT_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport 'moment-precise-range-plugin';\r\nimport { RestaurantContext } from 'contexts/AgentRestaurantContext'\r\nimport TitlePage from 'components/Headers/TitlePage'\r\n\r\nfunction RestaurantDetails() {\r\n    const { addToast } = useToasts()\r\n    const { restaurants } = useContext(RestaurantContext)\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Restaurant</h4>\r\n                        <p>Are you sure you want to delete this restaurant? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    // delete selected restaurant\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(RESTAURANT_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{ width: \"200px\" }}>\r\n                     <button className=\"btn-custominfo\"  onClick={(e) => alert(rowIndex)}><i className=\"fas fa-eye\"></i></button>\r\n                    <button className=\"btn-customdanger\" onClick={(e) => confirmDelete(row._id, row.title)}><i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const columns = [\r\n        { dataField: 'name', text: 'Hotel Name', sort: true, filter: textFilter() },\r\n        { dataField: 'address', text: 'Address', filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact', filter: textFilter() },\r\n        { dataField: 'desc', text: 'Description', filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                <TitlePage title=\"Restaurant List\" />\r\n                    <DataTable columns={columns} data={restaurants} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestaurantDetails\r\n","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport axios from '../services/axios'\r\nimport {AGENT_CLUB_API} from '../services/api_url'\r\n\r\nimport {PreLoaderContext} from '../contexts/PreLoaderContext'\r\nexport const ClubContext = createContext()\r\n\r\nconst ClubContextProvider = ({ children }) => {\r\n  const { setIsLoading } = useContext(PreLoaderContext)\r\n\r\n  const [clubs, setClubs] = useState([])\r\n\r\n  // get all Club\r\n  const getClubByUser = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      let result = await axios.get(AGENT_CLUB_API)\r\n      if (result.data.success) {\r\n      setIsLoading(false)\r\n        setClubs(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      // console.error('Get All Club Error: ', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClubByUser()\r\n  }, [])\r\n\r\n  return <ClubContext.Provider value={{ clubs, setClubs }}>{children}</ClubContext.Provider>\r\n}\r\n\r\nexport default ClubContextProvider","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { CLUB_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { ClubContext } from 'contexts/AgentClubContext'\r\nimport TitlePage from 'components/Headers/TitlePage'\r\n\r\nfunction ClubDetails() {\r\n    const { addToast } = useToasts()\r\n    const {clubs} = useContext(ClubContext);\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Club</h4>\r\n                        <p>Are you sure you want to delete this club? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(CLUB_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                     <button className=\"btn-custominfo\"   onClick={(e) => alert(rowIndex)}><i className=\"fas fa-eye\"></i></button>\r\n                     <button className=\"btn-customdanger\" onClick={(e) => confirmDelete(row._id, row.title)}><i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'clubName', text: 'Club Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n \r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <TitlePage title=\"Club List\"/>\r\n                    <DataTable columns={columns} data={clubs} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClubDetails\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport PermissionHandler from 'services/permisionHandler'\r\n\r\nexport const PermissionContext = createContext()\r\n\r\nconst PermissionContextProvider = ({ children }) => {\r\n    const [granted, setGranted] = useState(\"\")\r\n   useEffect(() => {\r\n      PermissionHandler().then(result => setGranted(result.data.type)).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return <PermissionContext.Provider value={{ granted, setGranted }}>{children}</PermissionContext.Provider>\r\n}\r\n\r\nexport default PermissionContextProvider","import React, { useContext, useState, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { GET_BOOKING_BY_AGENT_API, CONFIRM_BOOKING_FOR_AGENT_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { PermissionContext } from 'contexts/PermissionContext'\r\nimport { TRAVEL, ADMINISTRATOR, HOTEL_AGENT } from '../../role_access'\r\nimport { PreLoaderContext } from '../../contexts/PreLoaderContext'\r\nimport moment from 'moment'\r\nimport TitlePage from 'components/Headers/TitlePage'\r\nfunction BookingDetails() {\r\n    const { addToast } = useToasts()\r\n    const { granted } = useContext(PermissionContext);\r\n    const { setIsLoading } = useContext(PreLoaderContext)\r\n    const [bookingDate, setBookingDate] = useState([])\r\n\r\n    const getBookingDetail = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            let result = await axios.post(GET_BOOKING_BY_AGENT_API, {\r\n                role: granted\r\n            })\r\n            if (result.data.success) {\r\n                setIsLoading(false)\r\n                setBookingDate(result.data.data)\r\n                console.log(result.data.data)\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const confirm = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Confirm {title} Booking</h4>\r\n                        <p>Are you sure? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onBookinConfirm(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    // delete selected Packages\r\n    const onBookinConfirm = async (id) => {\r\n        try {\r\n            // let result = await axios.delete(CLUB_DELETE_API + id)\r\n            // if (result.data.success) {\r\n            //     addToast(result.data.message, {\r\n            //         appearance: \"success\",\r\n            //         autoDismiss: true,\r\n            //     });\r\n            //     window.location.reload();\r\n            // }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const actionList = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{ width: \"200px\" }}>\r\n                    {!row.status ? (\r\n                        <button tooltip=\"Not confirm\" className=\"btn-customdone\" onClick={(e) => \"\"}><i className=\"fas fa-check-double\"></i></button>\r\n                    ) : <span className=\"text-green\">Confirmed</span>}\r\n                    <button className=\"btn-custominfo\" onClick={(e) => alert(rowIndex)}><i className=\"fas fa-eye\"></i></button>\r\n                    <button className=\"btn-customdanger\" onClick={(e) => confirm(row._id, row.title)}><i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const dateFormat = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <span >{moment(row.bookDate).format(\"llll\")}</span>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const statusFormat = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <div>\r\n                {!row.status ? (\r\n                    <span className=\"text-red\">Pending</span>\r\n                ) : <span className=\"text-green\">Confirmed</span>}\r\n            </div>\r\n        );\r\n    }\r\n    const peopleFormat = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <div>\r\n                <span>{`${row.adult} + ${row.child} = ${row.numberOfPeople} people`}</span>\r\n            </div>\r\n        );\r\n    }\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const hotelColumn = [\r\n        { dataField: 'bookDate', text: 'Booking Date', formatter: dateFormat, sort: true },\r\n        { dataField: 'hotel.name', text: 'Pck. Title' },\r\n        { dataField: 'hotel.totalRoom', text: 'Pck. Destiantion' },\r\n        { dataField: 'hotel.address', text: 'Pck. Address' },\r\n        { dataField: 'child', text: 'adult+child', formatter: peopleFormat },\r\n        { dataField: 'user.fullname', text: 'Booked By' },\r\n        { dataField: 'user.contact', text: 'Contact' },\r\n        { dataField: 'status', text: 'Approve', formatter: statusFormat },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    const travelColumn = [\r\n        { dataField: 'bookDate', text: 'Booking Date', formatter: dateFormat, sort: true },\r\n        { dataField: 'package.title', text: 'Pck. Title' },\r\n        { dataField: 'package.destination', text: 'Pck. Destiantion' },\r\n        { dataField: 'package.address', text: 'Pck. Address' },\r\n        { dataField: 'child', text: 'adult+child', formatter: peopleFormat },\r\n        { dataField: 'user.fullname', text: 'Booked By' },\r\n        { dataField: 'user.contact', text: 'Contact' },\r\n        { dataField: 'status', text: 'Approve', formatter: statusFormat },\r\n        { dataField: 'Action', text: 'Action', formatter: actionList },\r\n    ];\r\n    useEffect(() => {\r\n        getBookingDetail()\r\n    }, [])\r\n    if (granted === ADMINISTRATOR) {\r\n        return (\r\n            <>\r\n                <NoActionBanner />\r\n                <Card className=\"bg-secondary shadow mb-\">\r\n                    <CardBody>\r\n                        <TitlePage title=\"Travel Package Booking List\" />\r\n                        <DataTable columns={travelColumn} data={bookingDate} defaultSorted={defaultSorted} />\r\n                    </CardBody>\r\n                </Card>\r\n                <Card className=\"bg-secondary shadow mb-\">\r\n                    <CardBody>\r\n                        <TitlePage title=\"Hotel Booking List\" />\r\n                        <DataTable columns={hotelColumn} data={bookingDate} defaultSorted={defaultSorted} />\r\n                    </CardBody>\r\n                </Card>\r\n            </>\r\n        )\r\n    } else if (granted === TRAVEL) {\r\n        return (\r\n            <>\r\n                <NoActionBanner />\r\n                <Card className=\"bg-secondary shadow mb-\">\r\n                    <CardBody>\r\n                        <DataTable columns={travelColumn} data={bookingDate} defaultSorted={defaultSorted} />\r\n                    </CardBody>\r\n                </Card>\r\n            </>\r\n        )\r\n    } else if (granted === HOTEL_AGENT) {\r\n        return (\r\n            <>\r\n                <NoActionBanner />\r\n                <Card className=\"bg-secondary shadow mb-\">\r\n                    <CardBody>\r\n                        <DataTable columns={hotelColumn} data={bookingDate} defaultSorted={defaultSorted} />\r\n                    </CardBody>\r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookingDetails\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport PackageTab from \"views/package/PackageTab\";\r\nimport RestaurantTab from \"views/restaurant/RestaurantTab\";\r\nimport HotelTab from \"views/hotel/HotelTab\";\r\nimport ClubTab from \"views/club/ClubTab\";\r\nimport PreRegisters from \"views/pre-register/PreRegisters\";\r\nimport UserDetails from \"views/user/UserDetails\";\r\nimport HotelDetails from \"views/hotel/HotelDetails\";\r\nimport PackageDetails from \"views/package/PackageDetails\";\r\nimport RestaurantDetails from \"views/restaurant/RestaurantDetails\";\r\nimport ClubDetails from \"views/club/ClubDetails\";\r\nimport BookingDetails from \"views/booking/BoookingDetails\";\r\nvar adminRoutes =[\r\n    {\r\n      path: \"/dashboard\",\r\n      name: \"Dashboard\",\r\n      icon: \"ni ni-tv-2 text-primary\",\r\n      component: Index,\r\n      layout: \"/app\"\r\n    },\r\n    {\r\n      path: \"/package\",\r\n      name: \"Add Package\",\r\n      icon: \"fas fa-route text-blue\",\r\n      component: PackageTab,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/package-view\",\r\n      name: \"Package List\",\r\n      icon: \"fas fa-route text-blue\",\r\n      component: PackageDetails,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/hotel\",\r\n      name: \"Add Hotel\",\r\n      icon: \"fa fa-bed text-orange\",\r\n      component: HotelTab,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/hotel-view\",\r\n      name: \"Hotel List\",\r\n      icon: \"fa fa-bed text-orange\",\r\n      component: HotelDetails,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/restaurant\",\r\n      name: \"Add Restaurant\",\r\n      icon: \"fas fa-utensils text-yellow\",\r\n      component: RestaurantTab,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/restaurant-view\",\r\n      name: \"Restaurant List\",\r\n      icon: \"fas fa-utensils text-yellow\",\r\n      component: RestaurantDetails,\r\n      layout: \"/app\",\r\n    },\r\n    {\r\n      path: \"/club\",\r\n      name: \"Add Club\",\r\n      icon: \"fas fa-glass-cheers text-orange\",\r\n      component: ClubTab,\r\n      layout: \"/app\"\r\n    },\r\n    {\r\n      path: \"/club-view\",\r\n      name: \"Club List\",\r\n      icon: \"fas fa-glass-cheers text-orange\",\r\n      component: ClubDetails,\r\n      layout: \"/app\"\r\n    },\r\n    // {\r\n    //   path: \"/gallery\",\r\n    //   name: \"Gallery\",\r\n    //   icon: \"fas fa-images text-blue\",\r\n    //   // component: Register,\r\n    //   layout: \"/app\"\r\n    // },\r\n    {\r\n      path: \"/booking\",\r\n      name: \"Booking\",\r\n      icon: \"fas fa-map-marker-alt text-blue\",\r\n      component: BookingDetails,\r\n      layout: \"/app\"\r\n    },\r\n    // {\r\n    //   path: \"/review\",\r\n    //   name: \"Review\",\r\n    //   icon: \"fas fa-images text-blue\",\r\n    //   component: ReviewDetails,\r\n    //   layout: \"/app\"\r\n    // },\r\n    {\r\n      path: \"/registration\",\r\n      name: \"Pre-Registration\",\r\n      icon: \"fas fa-check text-orange\",\r\n      component: PreRegisters,\r\n      layout: \"/app\"\r\n    },\r\n    {\r\n      path: \"/users\",\r\n      name: \"Users\",\r\n      icon: \"fas fa-user text-orange\",\r\n      component: UserDetails,\r\n      layout: \"/app\"\r\n    },\r\n\r\n ]\r\n\r\nexport default adminRoutes;\r\n","\r\nimport BookingDetails from \"views/booking/BoookingDetails\";\r\nimport Index from \"views/Index.js\";\r\nimport PackageDetails from \"views/package/PackageDetails\";\r\nimport PackageTab from \"views/package/PackageTab\";\r\nvar travelRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\",\r\n    },\r\n  {\r\n    path: \"/package\",\r\n    name: \"Package Add\",\r\n    icon: \"fas fa-route text-blue\",\r\n    component: PackageTab,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/package-view\",\r\n    name: \"Package List\",\r\n    icon: \"fas fa-route text-blue\",\r\n    component: PackageDetails,\r\n    layout: \"/app\",\r\n  },{\r\n    path: \"/booking\",\r\n    name: \"Booking\",\r\n    icon: \"fas fa-map-marker-alt text-blue\",\r\n    component: BookingDetails,\r\n    layout: \"/app\"\r\n  },\r\n];\r\n\r\nexport default travelRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport RestaurantDetails from \"views/restaurant/RestaurantDetails\";\r\nimport RestaurantTab from \"views/restaurant/RestaurantTab\";\r\nvar restaurantRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\"\r\n      },\r\n  {\r\n    path: \"/restaurant\",\r\n    name: \"Restaurant Add\",\r\n    icon: \"fas fa-utensils text-yellow\",\r\n    component: RestaurantTab,\r\n    layout: \"/app\"\r\n    },\r\n  {\r\n    path: \"/restaurant-view\",\r\n    name: \"Restaurant List\",\r\n    icon: \"fas fa-utensils text-yellow\",\r\n    component: RestaurantDetails,\r\n    layout: \"/app\"\r\n    }\r\n];\r\n\r\nexport default restaurantRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport ClubTab from \"views/club/ClubTab\";\r\nimport ClubDetails from \"views/club/ClubDetails\";\r\nimport BookingDetails from \"views/booking/BoookingDetails\";\r\nvar clubRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/club\",\r\n    name: \"Club Add\",\r\n    icon: \"fas fa-glass-cheers text-orange\",\r\n    component: ClubTab,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/club-view\",\r\n    name: \"Club List\",\r\n    icon: \"fas fa-glass-cheers text-orange\",\r\n    component: ClubDetails,\r\n    layout: \"/app\",\r\n  },\r\n  {\r\n    path: \"/booking\",\r\n    name: \"Booking\",\r\n    icon: \"fas fa-map-marker-alt text-blue\",\r\n    component: BookingDetails,\r\n    layout: \"/app\"\r\n  },\r\n];\r\n\r\nexport default clubRoutes;\r\n","\r\nimport Index from \"views/Index.js\";\r\nimport HotelTab from \"views/hotel/HotelTab\";\r\nimport HotelDetails from \"views/hotel/HotelDetails\";\r\nimport BookingDetails from \"views/booking/BoookingDetails\";\r\nvar hotelRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/app\",\r\n    access:\"all\"\r\n    },\r\n  {\r\n    path: \"/hotel\",\r\n    name: \"Hotel Add\",\r\n    icon: \"fa fa-bed text-orange\",\r\n    component: HotelTab,\r\n    layout: \"/app\",\r\n    access:\"hotel\"\r\n  },\r\n  {\r\n    path: \"/hotel-view\",\r\n    name: \"Hotel List\",\r\n    icon: \"fa fa-bed text-orange\",\r\n    component: HotelDetails,\r\n    layout: \"/app\",\r\n    access:\"hotel\"\r\n  }, {\r\n    path: \"/booking\",\r\n    name: \"Booking\",\r\n    icon: \"fas fa-map-marker-alt text-blue\",\r\n    component: BookingDetails,\r\n    layout: \"/app\"\r\n  },\r\n];\r\n\r\nexport default hotelRoutes;\r\n","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './contexts/UserAuthentication'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/sign-in', state: { from: props.location } }} />)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useContext } from \"react\";\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nimport { AuthContext } from '../../contexts/UserAuthentication'\nconst UserHeader = () => {\n  const {  authUser } = useContext(AuthContext)\n\n  return (\n    <>\n      <div\n        className=\"header pb-8 d-flex align-items-center\"\n        style={{\n          minHeight: \"300px\",\n          backgroundImage:\n            `url(${process.env.PUBLIC_URL}/res/img/logo7.png)`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center top\",\n        }}\n      >\n        {/* Mask */}\n        <span className=\"mask bg-gradient-default opacity-8\" />\n        {/* Header container */}\n        <Container className=\"align-items-center\" fluid>\n          <Row>\n            <Col lg=\"7\" md=\"10\">\n              <h4 className=\"text-white\">Currently loged in: {authUser.email}</h4>\n              <p className=\"text-white mt-0\"></p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default UserHeader;\n","import React, { useState, useEffect, useContext } from \"react\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Input,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from 'yup'\nimport { USER_UPDATE_PASSWORD_API } from '../../services/api_url'\nimport axios from '../../services/axios'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nimport { useToasts } from 'react-toast-notifications'\n\nconst ValidationSchema = Yup.object().shape({\n  currentpassword: Yup.string().required('Field is required'),\n  password: Yup.string().required('Field is required'),\n  cpassword: Yup.string().required('Field is required'),\n})\nconst Profile = () => {\n  // const [profile, setProfile] = useState({})\n  const { authUser } = useContext(AuthContext)\n  const { addToast, removeAllToasts } = useToasts()\n  const onUpdatePassword = async (values, actions) => {\n    try {\n      if (values.password === values.cpassword) {\n        let result = await axios.post(USER_UPDATE_PASSWORD_API, values)\n        if (result.data.success) {\n          addToast(result.data.message, {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          actions.resetForm();\n          window.location.reload();\n        }else{\n          addToast(result.data.message, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      } else {\n        addToast(\"Password not match\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (error) {\n      if (error.response) {\n        removeAllToasts()\n        addToast(error.response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n  }\n  return (\n    <>\n      <UserHeader />\n      {/* Page content */}\n      <Container className=\"mt--6\" fluid>\n        <Row>\n          <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n            <Card className=\"card-profile shadow\">\n              <Row className=\"justify-content-center\">\n                <Col className=\"order-lg-2\" lg=\"3\">\n                  <div className=\"card-profile-image\">\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <img\n                        alt=\"no profile\"\n                        className=\"rounded-circle\"\n                        src={`${process.env.PUBLIC_URL}/res/img/default_user.svg`}\n                      />\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n              <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                <div className=\"d-flex justify-content-between\">\n                  {/* //Content */}\n                </div>\n              </CardHeader>\n              <CardBody className=\"pt-0 pt-md-4\">\n                <Row>\n                  <div className=\"col\">\n                    <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                      {/* <div>\n                        <span className=\"heading\">22</span>\n                        <span className=\"description\">Friends</span>\n                      </div>\n                      <div>\n                        <span className=\"heading\">10</span>\n                        <span className=\"description\">Photos</span>\n                      </div>\n                      <div>\n                        <span className=\"heading\">89</span>\n                        <span className=\"description\">Comments</span>\n                      </div> */}\n                    </div>\n                  </div>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col className=\"order-xl-1\" xl=\"8\">\n            <Card className=\"bg-secondary shadow\">\n              <CardHeader className=\"bg-white border-0\">\n                <Row className=\"align-items-center\">\n                  <Col xs=\"8\">\n                    <h3 className=\"mb-0\">My account</h3>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"pl-lg-4\">\n                  <Row>\n                    <Col lg=\"6\">\n                      <FormGroup>\n                        <label className=\"form-control-label\"   >\n                          Your full name\n                          </label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          defaultValue={authUser.name}\n                          readOnly\n                          placeholder=\"Username\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col lg=\"6\">\n                      <FormGroup>\n                        <label\n                          className=\"form-control-label\" >\n                          Email address\n                          </label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          value={authUser.email}\n                          placeholder={authUser.email}\n                          type=\"email\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </div>\n\n                <hr className=\"my-4\" />\n                {/* Address */}\n                <h6 className=\"heading-small text-muted mb-4\">\n                  Password Section\n                  </h6>\n                <div className=\"pl-lg-4\">\n                  <Formik\n                    initialValues={{\n                      currentpassword: '',\n                      password: '',\n                      cpassword: '',\n                    }}\n                    validationSchema={ValidationSchema}\n                    onSubmit={(values, actions) => {\n                      onUpdatePassword(values, actions)\n                    }}>\n                    {props => (\n                      <Form className='mt-2'>\n                        <Row>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label\n                                className=\"form-control-label\">Current Password</label>\n                              <Field\n                                type=\"password\"\n                                name=\"currentpassword\"\n                                className=\"form-control\"\n                                placeholder=\"Enter your current password\"\n                                value={props.values.currentpassword}\n                                onChange={props.handleChange}\n                              />\n                              {props.errors.currentpassword && props.touched.currentpassword ? (\n                                <small className='form-text text-danger'>{props.errors.currentpassword}</small>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label\n                                className=\"form-control-label\">New Password\n                          </label>\n                              <Field\n                                name=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Enter your new password\"\n                                type=\"text\"\n                                value={props.values.password}\n                                onChange={props.handleChange}\n                              />\n                              {props.errors.password && props.touched.password ? (\n                                <small className='form-text text-danger'>{props.errors.password}</small>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label\n                                className=\"form-control-label\">Confirm Password\n                          </label>\n                              <Field\n                                name=\"cpassword\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm new password\"\n                                type=\"text\"\n                                value={props.values.cpassword}\n                                onChange={props.handleChange}\n                              />\n                              {props.errors.cpassword && props.touched.cpassword ? (\n                                <small className='form-text text-danger'>{props.errors.cpassword}</small>\n                              ) : null}\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                        <div className=\"text-left\">\n                          <button className=\"btn btn-primary\" type=\"submit\">Update Your New Password</button>\n                        </div>\n                      </Form>\n                    )}\n                  </Formik>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","\nimport React, { useContext, useState } from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport { AuthContext } from '../contexts/UserAuthentication'\n\nimport routes from \"../routes/routes\";\nimport adminRoutes from \"../routes/routes_admin\";\nimport travelRoutes from \"../routes/routes_travel\";\nimport restaurantRoutes from \"../routes/routes_restaurant\";\nimport clubRoutes from \"../routes/routes_club\";\nimport hotelRoutes from \"../routes/routes_hotel\";\nimport ProtectedRoute from \"ProtectedRoute\";\n// import PackageDetails from \"views/package/PackageDetails\";\n// import HotelDetails from \"views/hotel/HotelDetails\";\n// import RestaurantDetails from \"views/restaurant/RestaurantDetails\";\n// import ClubDetails from \"views/club/ClubDetails\";\nimport Profile from \"views/setting/Profile\";\nimport { PermissionContext } from \"contexts/PermissionContext\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  const {granted} = useContext(PermissionContext)\n  // React.useEffect(() => {\n  //   PermissionHandler().then(result => setGranted(result.data.type)).catch(err => console.log(err))\n  // }, [])\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes, grant) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/app\") {\n        return (\n          <ProtectedRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />)\n      } else {\n        return null;\n      }\n    });\n  };\n  // const getTextHeaderName = (routess) => {\n  //   for (let i = 0; i < routess.length; i++) {\n  //       return routess[i].name;\n  //   }\n  // };\n  const getTextHeaderName = (routess) => {\n    for (let i = 0; i < routess.length; i++) {\n            return routess[i].name;\n        }\n    // for (let i = 0; i < routess.length; i++) {\n    //   if (\n    //     props.location.pathname.indexOf(routess[i].layout + routess[i].path) !==\n    //     -1\n    //   ) {\n    //     return routess[i].name;\n    //   }\n    // }\n    // return \"Brand\";\n  };\n\n  const getBrandText = (path) => {\n    if (granted === \"admin\") {\n     return getTextHeaderName(adminRoutes);\n    } else if (granted === \"travel\") {\n     return getTextHeaderName(travelRoutes);\n    } else if (granted === \"hotel\") {\n     return getTextHeaderName(hotelRoutes);\n    } else if (granted === \"club\") {\n    return  getTextHeaderName(clubRoutes);\n    } else if (granted === \"restaurant\") {\n    return  getTextHeaderName(restaurantRoutes);\n    }\n  };\n\n  return (\n    <>\n      {granted === \"admin\" ? <Sidebar\n        {...props}\n        routes={adminRoutes}\n        logo={{\n          innerLink: \"/app/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"travel\" ? <Sidebar\n        {...props}\n        routes={travelRoutes}\n        logo={{\n          innerLink: \"/app/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"restaurant\" ? <Sidebar\n        {...props}\n        routes={restaurantRoutes}\n        logo={{\n          innerLink: \"/app/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"club\" ? <Sidebar\n        {...props}\n        routes={clubRoutes}\n        logo={{\n          innerLink: \"/app/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      {granted === \"hotel\" ? <Sidebar\n        {...props}\n        routes={hotelRoutes}\n        logo={{\n          innerLink: \"/app/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      /> : \"\"}\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {/* <ProtectedRoute path=\"/app/package-view\" component={PackageDetails} />\n          <ProtectedRoute path=\"/app/hotel-view\" component={HotelDetails} />\n          <ProtectedRoute path=\"/app/restaurant-view\" component={RestaurantDetails} />\n          <ProtectedRoute path=\"/app/club-view\" component={ClubDetails} />\n        <ProtectedRoute path=\"/app/profile/\" component={Profile} /> */}\n          <ProtectedRoute path=\"/app/profile/\" component={Profile} />\n          {granted === \"admin\" && getRoutes(adminRoutes, granted)}\n          {granted === \"travel\" && getRoutes(travelRoutes, granted)}\n          {granted === \"hotel\" && getRoutes(hotelRoutes, granted)}\n          {granted === \"restaurant\" && getRoutes(restaurantRoutes, granted)}\n          {granted === \"club\" && getRoutes(clubRoutes, granted)}\n          {granted === undefined && <Redirect from=\"*\" to=\"/\" />}\n\n        </Switch>\n        {/* <Container fluid>\n          <AdminFooter />\n        </Container> */}\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={`${process.env.PUBLIC_URL}/res/img/logo30.png`}\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nconst Login = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <a\n                  className=\"font-weight-bold ml-1\"\n                  href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                  target=\"_blank\"\n                >\n                 Scout-Admin\n                </a>\n              </div>\n            </Col>\n            \n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  Col,\n} from \"reactstrap\";\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from 'yup'\nimport axios from '../../services/axios'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nimport { useToasts } from 'react-toast-notifications'\nimport { LOGIN_API } from \"services/api_url\";\nimport gotoPage from \"services/gotoPage\";\nimport {PreLoaderContext} from '../../contexts/PreLoaderContext'\nconst SignInSchema = Yup.object().shape({\n  email: Yup.string().email().required('Email is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters long').required('Password is required'),\n})\nconst Login = () => {\n  const { setIsLoading } = useContext(PreLoaderContext)\n  const { setIsAuthenticated, setAuthUser } = useContext(AuthContext)\n  const { addToast } = useToasts()\n  \n  //For Agent Authentication\n  const onLogin = async (values) => {\n    try {\n      setIsLoading(true)\n      let result = await axios.post(LOGIN_API, values);\n      if (result.data.success) {\n      setIsLoading(false)\n        setAuthUser(result.data.user)\n        setIsAuthenticated(true)\n        gotoPage(result.data.user.token, result.data.user, \"/app/dashboard\")\n      }\n    } catch (error) {\n      setIsLoading(false)\n      if (error.response) {\n        addToast(error.response.data.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n  }\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n         \n          <CardBody className=\"px-lg-5 py-lg-2\">\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={SignInSchema}\n              onSubmit={values => {\n                onLogin(values)\n              }}\n            >\n              {props => (\n                <Form className='mt-5'>\n                  <div className='form-group'>\n                    <label className='font-weight-bold'>Email</label>\n                    <Field\n                      name='email'\n                      className='form-control'\n                      placeholder='e.g: example@gmail.com'\n                      value={props.values.email}\n                      onChange={props.handleChange('email')}\n                    />\n                    {props.errors.email && props.touched.email ? (\n                      <small className='form-text text-danger'>{props.errors.email}</small>\n                    ) : null}\n                  </div>\n\n                  <div className='form-group'>\n                    <label className='font-weight-bold'>Password</label>\n                    <Input\n                      name='password'\n                      type='password'\n                      className='form-control'\n                      placeholder='********'\n                      value={props.values.password}\n                      onChange={props.handleChange('password')}\n                    />\n                    {props.errors.password && props.touched.password ? (\n                      <small className='form-text text-danger'>{props.errors.password}</small>\n                    ) : null}\n                  </div>\n                  <div className='form-group'>\n                    <div className=\"text-center\">\n                      <Button className=\"my-4\" color=\"primary\" type=\"submit\">\n                        Sign in\n                     </Button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n} from \"reactstrap\";\r\nconst Denied = () => {\r\n  \r\n  return (\r\n    <>\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardBody className=\"px-lg-5 py-lg-2\">\r\n           <h1>Permission Denied</h1>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Denied;\r\n","import Login from \"views/auth/Login.js\";\r\nimport Denied from \"views/auth/Denied.js\";\r\n\r\nvar routes = [\r\n    {\r\n      path: \"/login\",\r\n      name: \"Login\",\r\n      icon: \"fas fa-sign-in-alt text-yellow\",\r\n      component: Login,\r\n      layout: \"/auth\",\r\n    },\r\n    {\r\n      path: \"/fail\",\r\n      name: \"Fail\",\r\n      component: Denied,\r\n      layout: \"/auth\",\r\n    }    \r\n  ];\r\n\r\n  export default routes;","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './contexts/UserAuthentication'\r\nconst PublicRoute = ({ component, ...rest }) => {\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuthenticated ? (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/app/dashboard\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                        React.createElement(component, props)\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default PublicRoute\r\n","import React from \"react\";\nimport { useLocation, Switch, Redirect, Route } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\nimport authroutes from \"auth_routes\";\nimport PublicRoute from '../PublicRoute'\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <PublicRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col  md=\"12\">\n                  <h1 className=\"text-white\">Authentication (Restaurant/Hotel/Tour/Travel)</h1>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(authroutes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      {/* <AuthFooter /> */}\n    </>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport \"react-responsive-combo-box/dist/index.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport AuthContextProvider from './contexts/UserAuthentication'\nimport { ToastProvider } from 'react-toast-notifications'\nimport PackagesContextProvider from \"contexts/AgentPackageContext\";\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport HotelContextProvider from \"contexts/HotelContext\";\nimport RestaurantContextProvider from \"contexts/AgentRestaurantContext\";\nimport PreloaderContextProvider from \"contexts/PreLoaderContext\";\nimport ClubContextProvider from \"contexts/AgentClubContext\";\nimport PermissionContextProvider from \"contexts/PermissionContext\";\nReactDOM.render(\n  <PermissionContextProvider>\n    <PreloaderContextProvider>\n      <PackagesContextProvider>\n        <HotelContextProvider>\n          <RestaurantContextProvider>\n            <ClubContextProvider>\n              <AuthContextProvider>\n                <ToastProvider placement='top-center' autoDismissTimeout='3000'>\n                  <BrowserRouter>\n                    <Switch>\n                      <Route path=\"/app\" render={(props) => <AdminLayout {...props} />} />\n                      <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n                      <Redirect from=\"/\" to=\"/auth/login\" />\n                    </Switch>\n                  </BrowserRouter>\n                </ToastProvider>\n              </AuthContextProvider>\n            </ClubContextProvider>\n          </RestaurantContextProvider>\n        </HotelContextProvider>\n      </PackagesContextProvider>\n    </PreloaderContextProvider>\n  </PermissionContextProvider>\n  ,\n  document.getElementById(\"root\")\n);\n","module.exports = {\r\n    PACKAGES_TYPE: [\r\n      \"Weekends\",\"Tours\",\"Treks\",\r\n    ]\r\n  }\r\n  ","//Nodejs Version 12.18.4\r\nmodule.exports = {\r\n    ADMINISTRATOR: 'admin',\r\n    TRAVEL: 'travel',\r\n    HOTEL_AGENT: 'hotel',\r\n    CLUB_AGENT: 'club',\r\n    GUIDE: 'guide',\r\n    USER: 'user',\r\n    RESTAURANT: 'restaurant',\r\n  }\r\n  "],"sourceRoot":""}