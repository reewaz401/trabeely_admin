{"version":3,"sources":["services/api_url.js","views/package/PackageType.js","role.js","services/gotoPage.js","services/axios.js","contexts/UserAuthentication.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Index.js","views/auth/Register.js","components/Headers/BannerHeader.js","views/TabArea.js","views/package/PackageForm.js","contexts/AgentPackageContext.js","views/package/ItineraryForm.js","views/package/PackageTab.js","views/restaurant/RestaurantForm.js","contexts/AgentRestaurantContext.js","views/restaurant/FoodForm.js","views/restaurant/RestaurantTab.js","views/hotel/HotelForm.js","contexts/HotelContext.js","views/hotel/HotelRoomForm.js","views/hotel/HotelTab.js","views/club/ClubForm.js","views/club/ClubTab.js","components/Datatable/DataTable.js","components/Headers/NoActionBanner.js","views/pre-register/PreRegisters.js","contexts/PreLoaderContext.js","views/user/UserAdd.js","views/user/UserDetails.js","routes.js","ProtectedRoute.js","views/package/PackageDetails.js","views/hotel/HotelDetails.js","views/restaurant/RestaurantDetails.js","contexts/AgentClubContext.js","views/club/ClubDetails.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","views/auth/Login.js","auth_routes.js","PublicRoute.js","layouts/Auth.js","index.js","MultipleOption.js"],"names":["BASE_URI","process","module","exports","LOGIN_API","REGISTER_API","LOGOUT_API","roleUpdateAPI","tokenAPI","PACKAGE_API","PACKAGE_DELETE_API","ITINERARY_API","AGENT_PACKAGE_API","PACKAGE_ALL_API","HOTEL_ADD_API","HOTEL_ROOM_ADD_API","AGENT_HOTEL_API","HOTEL_DELETE_API","HOTEL_ALL_API","RESTAURANT_ADD_API","FOOD_ADD_API","AGENT_RESTAURANT_API","RESTAURANT_DELETE_API","RESTAURANT_ALL_API","CLUB_ADD_API","AGENT_CLUB_API","CLUB_DELETE_API","CLUB_ALL_API","GALLERY_ADD_API","AGENT_GALLERY_API","GALLERY_DELETE_API","GALLERY_ALL_API","PRE_REGISTER_GET","APPROVE_PRE_REGISTER","USERS_GET","USERS_ADD_API","USER_DELETE_API","USER_UPDATE_API","PACKAGES_TYPE","value","label","token","user","path","localStorage","setItem","JSON","stringify","window","location","href","instance","axios","create","baseURL","withCredentials","headers","getItem","AuthContext","createContext","AuthContextProvider","children","parse","useState","isAuthenticated","setIsAuthenticated","authUser","setAuthUser","Provider","AdminNavbar","props","useContext","onLogout","e","a","preventDefault","post","data","success","replace","removeItem","alert","Navbar","className","expand","id","Container","fluid","to","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","name","DropdownMenu","right","DropdownItem","header","tag","Link","divider","onClick","Sidebar","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","bgColor","logo","navbarBrandProps","innerLink","outterLink","target","type","NavbarBrand","alt","imgAlt","src","aria-labelledby","Collapse","isOpen","Row","Col","xs","imgSrc","Form","InputGroup","Input","aria-label","placeholder","InputGroupAddon","addonType","InputGroupText","map","prop","key","NavItem","NavLink","layout","NavLinkRRD","activeClassName","icon","createLinks","defaultProps","Header","lg","xl","Card","CardBody","CardTitle","width","height","Index","Register","md","CardHeader","role","FormGroup","autoComplete","htmlFor","Button","color","BannerHeader","actions","action","TabArea","tabss","setActiveTab","activeTab","tabs","tab","index","classnames","active","toggle","ValidationSchema","Yup","shape","title","required","price","packageType","address","PackageForm","includes","setIncludes","validFiles","setValidFiles","Date","onChange","useToasts","addToast","removeAllToasts","images","setImages","onImageSelectChange","imageList","addUpdateIndex","file","push","onAddPackage","values","length","appearance","autoDismiss","formData","FormData","append","i","property","Array","from","response","error","onSelect","selectedList","onRemove","initialValues","destination","duration","cancelPolicy","validationSchema","onSubmit","handleChange","errors","touched","minTraveler","displayValue","options","includesOption","style","chips","background","searchBox","border","format","minDate","rows","cols","multiple","maxNumber","dataURLKey","onImageUpload","onImageUpdate","onImageRemove","image","data_url","tooltip","class","PackagesContext","PackagesContextProvider","packages","setPackages","getPackagesByUser","get","result","useEffect","ItineraryForm","step","ItineraryModel","day","routeName","routeDesc","obj","arr","itinerary","setItinerary","setItineraryImage","setId","setDay","preview","setPreview","selectedFiles","setSelectedFiles","fileInputRef","useRef","option","newObj","_id","onUpdateItinerary","message","filteredArray","reduce","current","find","item","concat","handleFileChange","files","fileObj","fileArray","URL","createObjectURL","getSelectedImage","prevArray","handleFiles","selectionLimit","p","temp","accept","ref","tempday","routeImg","PackageTab","TabContent","TabPane","tabId","contact","desc","country","RestaurantForm","startDate","endDate","onAddTrigger","err","videoUrl","RestaurantContext","RestaurantContextProvider","restaurants","setRestaurants","RestaurantDetails","foodName","FoodForm","restaurantId","setRestaurantId","foodType","setFoodType","onSelectRestaurant","onSelectFoodType","classfoodName","FOOD_TYPE","RestaurantTab","totalRoom","hotelDesc","HotelForm","amenities","setAmenities","onSelectAmenities","isMulti","AMENITIES","HotelContext","HotelContextProvider","hotels","setHotels","getHotelDetails","HotelRoomForm","setHotelId","onSelectHotelOption","hotel","ROOM_TYPE","numberOfRoom","seat","HotelTab","clubName","ClubForm","classclubName","ClubTab","DataTable","columns","defaultSorted","SearchBar","Search","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","rowEvents","row","rowIndex","pagination","paginationFactory","paginationProps","paginationTableProps","keyField","search","searchProps","classes","filter","filterFactory","baseProps","NoActionBanner","PreRegisters","business","setBusiness","getAllBusinessDetail","onApprove","put","status","reload","dataField","order","text","sort","formatter","cell","moment","createdAt","formatExtraData","confirmAction","confirmAlert","customUI","onClose","PreLoaderContext","override","css","PreloaderContextProvider","isLoading","setIsLoading","size","loading","email","gender","fullname","UserAdd","tabIndex","aria-hidden","data-dismiss","UsersDetails","component","users","setUsers","getAllUsers","console","log","onDeleteUser","delete","onUpdateRole","Roles","selected","confirmDelete","data-toggle","data-target","ProtectedRoute","Component","rest","render","pathname","state","PackageDetails","onDeletePackage","textFilter","HotelDetails","onDeleteAction","ClubContext","ClubContextProvider","clubs","setClubs","getClubByUser","ClubDetails","Admin","mainContent","React","useLocation","document","documentElement","scrollTop","scrollingElement","indexOf","getBrandText","UncontrolledCollapse","toggler","Login","SignInSchema","password","min","onLogin","gotoPage","PublicRoute","createElement","Auth","body","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","authroutes","ReactDOM","placement","autoDismissTimeout","getElementById"],"mappings":"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","file":"static/js/main.351de6a2.chunk.js","sourcesContent":["const BASE_URI = process.env.REACT_APP_BASE_URI;\r\nmodule.exports = {\r\n    LOGIN_API: BASE_URI + \"/auth/sign-in\",\r\n    REGISTER_API: BASE_URI + \"/auth/sign-up\",\r\n    LOGOUT_API: BASE_URI + \"/auth/logout\",\r\n    roleUpdateAPI: BASE_URI + \"/user/update-role/\",  //{id}\r\n    tokenAPI: BASE_URI + \"/check-token\",\r\n    //Package\r\n    PACKAGE_API: BASE_URI + \"/packages/add-package\",\r\n    PACKAGE_DELETE_API: BASE_URI + \"/packages/delete/\",//{id}\r\n    ITINERARY_API: BASE_URI + \"/packages/add-itinerary\",\r\n    AGENT_PACKAGE_API: BASE_URI + \"/packages/agent-package\", \r\n    PACKAGE_ALL_API: BASE_URI + \"/packages\",\r\n    //Hotels\r\n    HOTEL_ADD_API:BASE_URI+\"/hotels/add-hotel\",\r\n    HOTEL_ROOM_ADD_API:BASE_URI+\"/hotels/add-room\",\r\n    AGENT_HOTEL_API:BASE_URI+\"/hotels/agent-hotel\",\r\n    HOTEL_DELETE_API:BASE_URI+\"/hotels/delete/\",//{id}\r\n    HOTEL_ALL_API: BASE_URI + \"/hotels\",\r\n    //Restaurant\r\n    RESTAURANT_ADD_API:BASE_URI+\"/restaurants/add-restaurant\",\r\n    FOOD_ADD_API:BASE_URI+\"/foods/add-food\",\r\n    AGENT_RESTAURANT_API:BASE_URI+\"/restaurants/agent-restaurant\",\r\n    RESTAURANT_DELETE_API:BASE_URI+\"/restaurants/delete/\",//{id}\r\n    RESTAURANT_ALL_API: BASE_URI + \"/restaurants\",\r\n    //Club\r\n    CLUB_ADD_API:BASE_URI+\"/club/add-club\",\r\n    AGENT_CLUB_API:BASE_URI+\"/club/agent-club\",\r\n    CLUB_DELETE_API:BASE_URI+\"/club/delete/\",//{id}\r\n    CLUB_ALL_API: BASE_URI + \"/club\",\r\n    \r\n    //GALLERY\r\n    GALLERY_ADD_API:BASE_URI+\"/gallery/add-gallery\",\r\n    AGENT_GALLERY_API:BASE_URI+\"/gallery/agent-gallery\",\r\n    GALLERY_DELETE_API:BASE_URI+\"/gallery/delete/\",//{id}\r\n    GALLERY_ALL_API: BASE_URI + \"/gallery\",\r\n    \r\n    //Admin Work\r\n    //Business\r\n    PRE_REGISTER_GET:BASE_URI+\"/auth/business-detail\",\r\n    APPROVE_PRE_REGISTER:BASE_URI+\"/auth/approve-business/\", //{id}\r\n    //Users\r\n    USERS_GET:BASE_URI+\"/users\",\r\n    USERS_ADD_API:BASE_URI+\"/users/user-add\",\r\n    USER_DELETE_API:BASE_URI+\"/users/delete/\",//{id}\r\n    USER_UPDATE_API:BASE_URI+\"/users/update\"\r\n\r\n}","module.exports = {\r\n    PACKAGES_TYPE: [\r\n      \"Weekend\",\"Normal\",\"Tour\",\"Trek\",\r\n    ]\r\n  }\r\n  ","//Nodejs Version 12.18.4\r\nmodule.exports = [\r\n  { value: \"admin\", label: \"Admin\" },\r\n  { value: \"hotel\", label: \"Hotel\" },\r\n  { value: \"restaurant\", label: \"Restaurant\" },\r\n  { value: \"club\", label: \"Club\" },\r\n  { value: \"user\", label: \"User\" },\r\n  { value: \"travel\", label: \"Travel\" },\r\n]\r\n","module.exports = (token, user, path) => {\r\n    localStorage.setItem(\"_token\", token);\r\n    localStorage.setItem(\"_auth\", JSON.stringify(user));\r\n    window.location.href = path;\r\n};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: process.env.REACT_APP_BASE_URI,\r\n\twithCredentials: true,\r\n\t// headers: {\r\n\t\t// \t'CSRF-Token': csrfToken_generate(),\r\n\t\t//   },\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\"Authorization\": \"Bearer \" + localStorage.getItem(\"_token\")\r\n\t\t}\r\n})\r\n\r\nexport default instance","import React, { createContext, useState } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const user = JSON.parse(localStorage.getItem('_auth'))\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    return user !== null ? true : false\r\n  })\r\n  const [authUser, setAuthUser] = useState(() => {\r\n    return user !== null ? user : {}\r\n  })\r\n  return <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, authUser, setAuthUser }}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\nimport axios from '../../services/axios'\nimport { LOGOUT_API } from '../../services/api_url'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nconst AdminNavbar = (props) => {\n  const { isAuthenticated, authUser } = useContext(AuthContext)\n\n  const onLogout = async e => {\n    e.preventDefault()\n    try {\n      let result = await axios.post(LOGOUT_API)\n      if (result.data.success) {\n        window.location.replace('/')\n        localStorage.removeItem('_token')\n        localStorage.removeItem('_auth')\n      }\n    } catch (error) {\n      alert(\"Logout Failed\");\n    }\n  }\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n            <h2 className=\"text-white\">{props.brandText}</h2>\n          </Link>\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    {/* //use profile */}\n                    {/* <img\n                      alt=\"...\"\n                      src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n                    /> */}\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      {authUser.name}\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => onLogout(e)}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","import React, { useState } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n    <Navbar\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\n      expand=\"md\"\n      id=\"sidenav-main\"\n    >\n      <Container fluid>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Brand */}\n        {logo ? (\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={`${process.env.PUBLIC_URL}/res/img/logo30.png`}\n            />\n            {/* <h4>TRABEELY-ADMIN</h4> */}\n          </NavbarBrand>\n        ) : null}\n        {/* User */}\n        <Nav className=\"align-items-center d-md-none\">\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav className=\"nav-link-icon\">\n              <i className=\"ni ni-bell-55\" />\n            </DropdownToggle>\n            <DropdownMenu\n              aria-labelledby=\"navbar-default_dropdown_1\"\n              className=\"dropdown-menu-arrow\"\n              right\n            >\n              <DropdownItem>Action</DropdownItem>\n              <DropdownItem>Another action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Something else here</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav>\n              <Media className=\"align-items-center\">\n                <span className=\"avatar avatar-sm rounded-circle\">\n                  <img\n                    alt=\"...\"\n                    src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n                  />\n                </span>\n              </Media>\n            </DropdownToggle>\n            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n              <DropdownItem className=\"noti-title\" header tag=\"div\">\n                <h6 className=\"text-overflow m-0\">Welcome!</h6>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-single-02\" />\n                <span>My profile</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-settings-gear-65\" />\n                <span>Settings</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-calendar-grid-58\" />\n                <span>Activity</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-support-16\" />\n                <span>Support</span>\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <i className=\"ni ni-user-run\" />\n                <span>Logout</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* Collapse */}\n        <Collapse navbar isOpen={collapseOpen}>\n          {/* Collapse header */}\n          <div className=\"navbar-collapse-header d-md-none\">\n            <Row>\n              {logo ? (\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  {logo.innerLink ? (\n                    <Link to={logo.innerLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </Link>\n\n                  ) : (\n                    <a href={logo.outterLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </a>\n                  )}\n                </Col>\n              ) : null}\n              <Col className=\"collapse-close\" xs=\"6\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={toggleCollapse}\n                >\n                  <span />\n                  <span />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          {/* Form */}\n          <Form className=\"mt-4 mb-3 d-md-none\">\n            <InputGroup className=\"input-group-rounded input-group-merge\">\n              <Input\n                aria-label=\"Search\"\n                className=\"form-control-rounded form-control-prepended\"\n                placeholder=\"Search\"\n                type=\"search\"\n              />\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <span className=\"fa fa-search\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n          {/* Navigation */}\n          <Nav navbar>{createLinks(routes)}</Nav>\n          {/* Divider */}\n          <hr className=\"my-3\" />\n          {/* Heading */}\n          <h6 className=\"navbar-heading text-muted\">Policy</h6>\n          {/* Navigation */}\n\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","import React from \"react\";\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Users\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                        Total User:  350,897\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow.png`} alt=\"\"/>\n                      </span>\n                      <span className=\"text-nowrap\"> </span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                        Packages\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">2,356</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                      <img width=\"100\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow4.png`} alt=\"\"/>\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Hotels\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">924</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-warning mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow5.png`} alt=\"\"/>\n                      </span>\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Restaurants\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                      <img width=\"90\" height=\"100\" src={`${process.env.PUBLIC_URL}/res/img/arrow6.png`} alt=\"\"/>\n\n                      </span>\n                      <span className=\"text-nowrap\"></span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// reactstrap components\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n\nimport Header from \"components/Headers/Header.js\";\n\nconst Index = (props) => {\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"bg-gradient-default shadow\">\n              {/* <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Sales value</h2>\n                  </div>\n                  <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody> */}\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            {/* <Car€ */}\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            {/* <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Page visits</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Page name</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\">Unique users</th>\n                    <th scope=\"col\">Bounce rate</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">/argon/</th>\n                    <td>4,569</td>\n                    <td>340</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/index.html</th>\n                    <td>3,985</td>\n                    <td>319</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/charts.html</th>\n                    <td>3,513</td>\n                    <td>294</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      36,49%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/tables.html</th>\n                    <td>2,050</td>\n                    <td>147</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/profile.html</th>\n                    <td>1,795</td>\n                    <td>190</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card> */}\n          </Col>\n          <Col xl=\"4\">\n            {/* <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Social traffic</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Referral</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>1,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">60%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"60\"\n                            barClassName=\"bg-gradient-danger\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>5,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">70%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"70\"\n                            barClassName=\"bg-gradient-success\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Google</th>\n                    <td>4,807</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">80%</span>\n                        <div>\n                          <Progress max=\"100\" value=\"80\" />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Instagram</th>\n                    <td>3,678</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">75%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"75\"\n                            barClassName=\"bg-gradient-info\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">twitter</th>\n                    <td>2,645</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">30%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"30\"\n                            barClassName=\"bg-gradient-warning\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card> */}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst Register = () => {\n  return (\n    <>\n      <Col lg=\"6\" md=\"8\">\n        <Card className=\"bg-secondary shadow border-0\">\n         <CardBody className=\"px-lg-5 py-lg-5\">\n         <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-3\">\n              <h3>Sign up with valid credentials.</h3>\n            </div>\n           \n          </CardHeader>\n            <Form role=\"form\">\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative mb-3\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-hat-3\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Name\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative mb-3\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                  />\n                </InputGroup>\n              </FormGroup>\n              {/* <div className=\"text-muted font-italic\">\n                <small>\n                  password strength:{\" \"}\n                  <span className=\"text-success font-weight-700\">strong</span>\n                </small>\n              </div> */}\n              <Row className=\"my-4\">\n                <Col xs=\"12\">\n                  <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                    <input\n                      className=\"custom-control-input\"\n                      id=\"customCheckRegister\"\n                      type=\"checkbox\"\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor=\"customCheckRegister\"\n                    >\n                      <span className=\"text-muted\">\n                        I agree with the\n                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                          Privacy Policy\n                        </a>\n                      </span>\n                    </label>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"text-center\">\n                <Button className=\"mt-4\" color=\"primary\" type=\"button\">\n                  Create account\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst BannerHeader = ({actions}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-8 pt-1 pt-lg-7 d-flex align-items-center\">\r\n        {/* Mask */}\r\n        <span className=\"mask bg-gradient-default opacity-7\" />\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"action\">\r\n                {actions.map((action) =>\r\n                  <a\r\n                    className=\"text-white\"\r\n                    href={action.path}\r\n                    // onClick={(e) => e.preventDefault()}\r\n                  >\r\n                  {action.icon}  {action.name}\r\n                  </a>)}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BannerHeader;\r\n","import React from 'react'\r\nimport { Nav, NavLink, NavItem, } from \"reactstrap\";\r\nimport classnames from 'classnames'\r\nfunction TabArea({ tabss, setActiveTab, activeTab }) {\r\n    const toggle = tab => {\r\n        \r\n        if (activeTab !== tab) {\r\n            setActiveTab(tab);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Nav tabs>\r\n                {tabss.map((tab, index) => (\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: activeTab === tab.id })}\r\n                            onClick={() => toggle(tab.id)}\r\n                        >\r\n                            <i className={tab.icon}></i> {tab.name}\r\n                        </NavLink>\r\n                    </NavItem>\r\n                ))}\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TabArea\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { PACKAGES_TYPE } from './PackageType';\r\nimport { PACKAGE_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport {includesOption} from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    title: Yup.string().required('title is required'),\r\n    price: Yup.string().required('price is required'),\r\n    packageType: Yup.string().required('packageType is required'),\r\n    address: Yup.string().required('address is required'),\r\n})\r\n\r\nfunction PackageForm() {\r\n    const [includes, setIncludes] = useState([]);\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [value, onChange] = useState(new Date());\r\n   \r\n    const { addToast,removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddPackage = async (values, actions) => {\r\n        if(validFiles.length == 0 ){\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }else if(includes.length ==0){\r\n            addToast(\"You have not included item for package !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }else{\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"package\");\r\n            formData.append(\"startDate\", value);\r\n            //Includes Array\r\n            for (var i = 0; i < includes.length; i++) {\r\n                formData.append('includes', includes[i].name);\r\n            }\r\n            //Package Image Arrary\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            //Non-Array Value to store package desc, name, title\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(PACKAGE_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Packages Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.error, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n\r\n    const onRemove = (selectedList) => {\r\n        setIncludes(selectedList);\r\n    };\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                \r\n                <Formik\r\n                    initialValues={{\r\n                        title: '',\r\n                        price: '',\r\n                        destination: '',\r\n                        address: '',\r\n                        duration: '',\r\n                        cancelPolicy: '',\r\n                        packageType: ''\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddPackage(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Package information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-username\" >Package Title</label>\r\n                                            <input\r\n                                                name='title'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna base camp'\r\n                                                value={props.values.title}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.title && props.touched.title ? (\r\n                                                <small className='form-text text-danger'>{props.errors.title}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-price\"\r\n                                            >Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='Enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-price\"\r\n                                            >Minimum traveler</label>\r\n                                            <Field\r\n                                                name='minTraveler'\r\n                                                className='form-control'\r\n                                                placeholder='Enter minimum traveler'\r\n                                                value={props.values.minTraveler}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.minTraveler && props.touched.minTraveler ? (\r\n                                                <small className='form-text text-danger'>{props.errors.minTraveler}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-first-name\"\r\n                                            > Destination</label>\r\n                                            <Field\r\n                                                name='destination'\r\n                                                className='form-control'\r\n                                                placeholder='e.g. Kathmandu'\r\n                                                value={props.values.destination}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.destination && props.touched.destination ? (\r\n                                                <small className='form-text text-danger'>{props.errors.destination}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Meeting Point  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange('address')}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Duration  </label>\r\n                                            <Field\r\n                                                name='duration'\r\n                                                className='form-control'\r\n                                                placeholder='Enter duration'\r\n                                                value={props.values.duration}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.duration && props.touched.duration ? (\r\n                                                <small className='form-text text-danger'>{props.errors.duration}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">Package Type  </label>\r\n                                            <select onChange={props.handleChange} name='packageType' className='form-control'>\r\n                                                <option>Select Package Type</option>\r\n                                                {PACKAGES_TYPE.map((data, i) => (\r\n                                                    <option key={i} value={data}\r\n                                                    // selected={type?.includes(data.packageType)}\r\n                                                    >\r\n                                                        {data}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <h6 className=\"heading-small text-muted mb-4\"> Includes Section</h6>\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <Multiselect\r\n                                                displayValue=\"key\"\r\n                                                className='form-control'\r\n                                                options={includesOption}\r\n                                                displayValue=\"name\"\r\n                                                onSelect={onSelect}\r\n                                                onRemove={onRemove}\r\n                                                style={{\r\n                                                    chips: { background: \"#0f367c\" },\r\n                                                    searchBox: {\r\n                                                        border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">\r\n                                               Start Date  </label>\r\n                                            <DateTimePicker\r\n                                                className=\"react-datetime-picker form-control\"\r\n                                                onChange={onChange}\r\n                                                value={value}\r\n                                                format=\"y-MM-dd h:mm:ss a\"\r\n                                                minDate={new Date()}\r\n                                            />\r\n                                           \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">\r\n                                            Cancellation Policy </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='cancelPolicy'\r\n                                                className='form-control'\r\n                                                placeholder='Enter cancel policy'\r\n                                                value={props.values.cancelPolicy}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.cancelPolicy && props.touched.cancelPolicy ? (\r\n                                                <small className='form-text text-danger'>{props.errors.cancelPolicy}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            {/* <ImageUploader\r\n                                                withIcon={true}\r\n                                                withPreview={true}\r\n                                                buttonText='Choose images'\r\n                                                onChange={onDrop}\r\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                                                maxFileSize={15242880}\r\n                                            /> */}\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div \r\n                                                                    onClick={onImageUpload}>\r\n                                                                   <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n\r\n\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='pl-lg-4 form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary col-md-1\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default PackageForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport {AGENT_PACKAGE_API} from '../services/api_url'\r\n\r\nexport const PackagesContext = createContext()\r\n\r\nconst PackagesContextProvider = ({ children }) => {\r\n  const [packages, setPackages] = useState([])\r\n\r\n  // get all Packages\r\n  const getPackagesByUser = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_PACKAGE_API)\r\n      if (result.data.success) {\r\n        setPackages(result.data.packages)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Packages Error: ', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPackagesByUser()\r\n  }, [])\r\n\r\n  return <PackagesContext.Provider value={{ packages, setPackages }}>{children}</PackagesContext.Provider>\r\n}\r\n\r\nexport default PackagesContextProvider","import React, { useState, useContext, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport axios from '../../services/axios'\r\nimport { ITINERARY_API } from '../../services/api_url';\r\nimport { PackagesContext } from '../../contexts/AgentPackageContext'\r\nimport _ from \"lodash\"\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport ImageUploading from \"react-images-uploading\";\r\n\r\n\r\nfunction ItineraryForm() {\r\n    var step = 1\r\n    const ItineraryModel = {\r\n        day: step,\r\n        routeName: '',\r\n        routeDesc: ''\r\n        // routeImg: ''\r\n    }\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (key, value, name) => {\r\n        obj = {\r\n            key: key,\r\n            value: value,\r\n            name: name,\r\n        };\r\n\r\n        arr.push(obj);\r\n    };\r\n\r\n    const { packages } = useContext(PackagesContext)\r\n    const [itinerary, setItinerary] = useState([ItineraryModel]);\r\n    const [itineraryImage, setItineraryImage] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [day, setDay] = useState(step)\r\n    const { addToast } = useToasts()\r\n    const [preview, setPreview] = useState([]);\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    //    let pckgJSON = {}\r\n    const getSelectedImage = (files) => {\r\n        let fileObj = [];\r\n        let fileArray = []\r\n        fileObj.push(files)\r\n        for (let i = 0; i < fileObj[0].length; i++) {\r\n            fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n        }\r\n        setPreview(fileArray)\r\n        setItineraryImage(fileObj);\r\n        // const routeImg = e.target.files[0];\r\n        // let temp2 = itineraryImage\r\n        // temp2.push(routeImg)\r\n        // setItineraryImage(temp2)\r\n    };\r\n    useEffect(() => {\r\n        packages.map((option, i) =>\r\n            newObj(i, option._id, option.title, option.title)\r\n        );\r\n    }, [arr])\r\n    const onUpdateItinerary = async (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"event\", \"itinerary\");\r\n        formData.append(\"packageId\", id);\r\n        //Itinerary Array\r\n        Array.from(validFiles).map(function (value, index) {\r\n            formData.append(\"picture\", validFiles[index]);\r\n        })\r\n        formData.append(\"itinerary\", JSON.stringify(itinerary));\r\n        try {\r\n            let result = await axios.post(ITINERARY_API, formData);\r\n            if (result.data.success) {\r\n                addToast(\"Itinerary Added\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                addToast(error.response.data.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // multiselect on select and remove\r\n    const onSelect = (selectedList) => {\r\n        setId(selectedList[0].value)\r\n    };\r\n    // const fileType = (fileName) => {\r\n    //     return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n    // }\r\n\r\n    const removeFile = (name) => {\r\n        // find the index of the item\r\n        // remove the item from array\r\n\r\n        const validFileIndex = validFiles.findIndex(e => e.name === name);\r\n        validFiles.splice(validFileIndex, 1);\r\n        // update validFiles array\r\n        setValidFiles([...validFiles]);\r\n        const selectedFileIndex = selectedFiles.findIndex(e => e.name === name);\r\n        selectedFiles.splice(selectedFileIndex, 1);\r\n        // update selectedFiles array\r\n        setSelectedFiles([...selectedFiles]);\r\n    }\r\n    useEffect(() => {\r\n        let filteredArray = selectedFiles.reduce((file, current) => {\r\n            const x = file.find(item => item.name === current.name);\r\n            if (!x) {\r\n                return file.concat([current]);\r\n            } else {\r\n                return file;\r\n            }\r\n        }, []);\r\n        setValidFiles([...filteredArray]);\r\n\r\n    }, [selectedFiles]);\r\n    const handleFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            // add to an array so we can display the name of file\r\n            setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n            // add a new property called invalid\r\n            // files\\[i\\]['invalid'] = true;\r\n            // add to the same array so we can display the name of the file\r\n            // set error message\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleFileChange = () => {\r\n        getSelectedImage(fileInputRef.current.files)\r\n        if (fileInputRef.current.files.length) {\r\n            handleFiles(fileInputRef.current.files);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"bg-secondary shadow mb-4\">\r\n                <CardBody>\r\n                    <h6 className=\"heading-small text-muted mb-4\"> Itinerary Information</h6>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label className=\"form-control-label\">Package Type</label>\r\n                            <Multiselect\r\n                                selectionLimit=\"1\"\r\n                                displayValue=\"name\"\r\n                                className='form-control'\r\n                                options={arr}\r\n                                onSelect={onSelect}\r\n                                style={{\r\n                                    searchBox: {\r\n                                        border: \"none\", \"borderBottom\": \"1px solid blue\", \"borderRadius\": \"0px\"\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {/* <select name='packageType' onClick={(e) => setId(e.target.value)} className='form-control'>\r\n                                {packages.map((data, i) => (\r\n                                    <option key={i} value={data._id}>\r\n                                        {data.title}\r\n                                    </option>\r\n                                ))}\r\n                            </select> */}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <div className=\"pl-lg-4\">\r\n                        {itinerary.map((p, index) => {\r\n                            return (\r\n                                <Row>\r\n                                    <label className=\"my-4\">Day {step++}</label>\r\n                                    <Col md=\"2\">\r\n                                        <FormGroup>\r\n                                            <label\r\n                                                className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\"\r\n                                            > Route Name </label>\r\n                                            <input\r\n                                                name='routeName'\r\n                                                className='form-control'\r\n                                                placeholder='enter route name'\r\n                                                onChange={e => {\r\n                                                    const routeName = e.target.value;\r\n                                                    var temp = itinerary\r\n                                                    temp[index].routeName = routeName\r\n                                                    setItinerary(temp)\r\n                                                }}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <FormGroup>\r\n                                            <label\r\n                                                className=\"form-control-label\"\r\n                                                htmlFor=\"input-description\"\r\n                                            > Route Description </label>\r\n                                            <textarea\r\n                                                rows=\"1\"\r\n                                                cols=\"40\"\r\n                                                name='routeDesc'\r\n                                                className='form-control'\r\n                                                placeholder='enter route description'\r\n                                                onChange={e => {\r\n                                                    const routeDesc = e.target.value;\r\n                                                    var temp = itinerary\r\n                                                    temp[index].routeDesc = routeDesc\r\n                                                    setItinerary(temp)\r\n                                                }}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <FormGroup>\r\n                                            <label\r\n                                                className=\"form-control-label\" htmlFor=\"input-description\">Image</label>\r\n                                            <input\r\n                                                name=\"picture\"\r\n                                                type=\"file\"\r\n                                                accept=\"image/png, image/jpeg, image/jpg\"\r\n                                                // onChange={(e) => getSelectedImage(e)}\r\n                                                ref={fileInputRef}\r\n                                                onChange={() => handleFileChange()}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            );\r\n                        })}\r\n                        {preview.length <= 0 ? \"\" :\r\n                            <div className=\"form-group multi-preview\">\r\n                                {validFiles && validFiles.map((file, i) =>\r\n                                    <>\r\n                                        {/* <span><i className=\"fa fa-times\" onClick={() => removeFile(file.name)}></i></span> */}\r\n                                        <img height=\"100\" width=\"100\" className=\"img-fluid\" alt=\"Responsive image\" src={URL.createObjectURL(file)} />\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            </div>}\r\n                        {/* {itineraryImage.length != 0 ?\r\n                                                <div className=\"form-group multi-preview\">\r\n                                                    {itineraryImage.map((image, index) => (\r\n                                                        <Row>\r\n                                                            <div className=\"col-md-8\">\r\n                                                                <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                    <img className=\"img-fluid\" alt=\"Responsive image\" src={URL.createObjectURL(image)} alt=\"\" width=\"100\" />\r\n                                                                </CardTitle>\r\n                                                            </div>\r\n                                                            <Col className=\"col-auto\">\r\n                                                                <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    ))}\r\n                                                </div> : \"Image not selected.\"} */}\r\n                        {/* {itineraryImage.length != 0 ?\r\n                                <div className=\"form-group multi-preview\">\r\n                                    {itineraryImage.map((data, index) => (\r\n                                        <Row>\r\n                                            <div className=\"col-md-8\">\r\n                                                <CardTitle className=\"text-uppercase text-muted\">\r\n                                                    <img className=\"img-fluid\" alt=\"Responsive image\" src={URL.createObjectURL(data)} alt=\"\" width=\"100\" />\r\n                                                </CardTitle>\r\n                                            </div>\r\n                                        </Row>\r\n                                    ))}\r\n                                </div> : \"\"} */}\r\n\r\n                        <Button\r\n                            onClick={(e) => {\r\n                                e.preventDefault()\r\n                                let tempday = day\r\n                                tempday++;\r\n                                setDay(tempday)\r\n                                setItinerary(itinerary => [\r\n                                    ...itinerary,\r\n                                    {\r\n                                        day: tempday,\r\n                                        routeName: \"\",\r\n                                        routeDesc: \"\",\r\n                                        routeImg: '',\r\n                                    }\r\n                                ]);\r\n                            }}\r\n                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                            <li className=\"fas fa-plus\"></li>\r\n                        </Button>\r\n                        {day > 1 ? (<Button\r\n                            onClick={(e) => onUpdateItinerary(e)}\r\n                            className=\"text-left my-2\" color=\"primary\" type=\"button\">\r\n                            Add Itinerary\r\n                        </Button>) :\r\n                            \"\"}\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItineraryForm\r\n\r\n\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport PackageForm from \"./PackageForm\";\r\nimport ItineraryForm from \"./ItineraryForm\";\r\nconst PackageTab = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const tabs =[\r\n    {id:\"1\",name:\"Add\",icon:\"fas fa-plus-square text-green\"},\r\n    {id:\"2\",name:\"Itinerary\",icon:\"fas fa-edit text-green\"}\r\n]\r\n  const actions =[\r\n    {icon:(<i class=\"fas fa-eye\"></i>) ,path:\"/app/package-view\",name:\"View Package List\"},\r\n]\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <PackageForm /> {/* //Adding Package */}   \r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <ItineraryForm/>\r\n              </TabPane>\r\n             \r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PackageTab;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { RESTAURANT_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    address: Yup.string().required('Address room is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    desc: Yup.string().required('Description is required'),\r\n    country: Yup.string().required('Country is required'),\r\n})\r\n\r\nfunction RestaurantForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n    const [dateRange, setDateRange] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"hotel\");\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(RESTAURANT_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Hotels Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        address: '',\r\n                        contact: '',\r\n                        videoUrl: '',\r\n                        desc: '',\r\n                        country: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Restaurant Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Restaurant Name</label>\r\n                                            <input\r\n                                                name='name'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.name}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.name && props.touched.name ? (\r\n                                                <small className='form-text text-danger'>{props.errors.name}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country</label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Address  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact  </label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='desc'\r\n                                                className='form-control'\r\n                                                placeholder='Enter hotel description'\r\n                                                value={props.values.desc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.desc && props.touched.desc ? (\r\n                                                <small className='form-text text-danger'>{props.errors.desc}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                           \r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default RestaurantForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport {AGENT_RESTAURANT_API} from '../services/api_url'\r\n\r\nexport const RestaurantContext = createContext()\r\n\r\nconst RestaurantContextProvider = ({ children }) => {\r\n  const [restaurants, setRestaurants] = useState([])\r\n  const RestaurantDetails = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_RESTAURANT_API)\r\n      if (result.data.success) {\r\n        setRestaurants(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Restaurant Error: ', error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    RestaurantDetails()\r\n  }, [])\r\n\r\n  return <RestaurantContext.Provider value={{ restaurants, setRestaurants }}>{children}</RestaurantContext.Provider>\r\n}\r\n\r\nexport default RestaurantContextProvider","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { FOOD_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nimport { FOOD_TYPE } from 'MultipleOption';\r\nimport {RestaurantContext} from '../../contexts/AgentRestaurantContext'\r\nconst ValidationSchema = Yup.object().shape({\r\n    foodName: Yup.string().required('Name is required'),\r\n    price: Yup.string().required('Contact is required'),\r\n})\r\nfunction FoodForm() {\r\n    const {restaurants} =  useContext(RestaurantContext)\r\n    const [restaurantId, setRestaurantId] = useState('')\r\n    const [foodType, setFoodType] = useState('')\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 4;\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n    useEffect(() => {\r\n        restaurants.map((option, i) =>\r\n            newObj(option._id, option.name)\r\n        );\r\n    }, [arr])\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    const onSelectRestaurant = (item) => {\r\n        setRestaurantId(item.value)\r\n    }\r\n    const onSelectFoodType = (item) => {\r\n        setFoodType(item.value)\r\n    }\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"food\");\r\n            formData.append(\"foodType\", foodType);\r\n            formData.append(\"restaurant\", restaurantId);\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(FOOD_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    addToast(\"Food Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        foodName: '',\r\n                        price: '',\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Food Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\" >Restaurant Name</label>\r\n                                            <Select\r\n                                                onChange={onSelectRestaurant}\r\n                                                options={arr} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Food Name</label>\r\n                                            <Field\r\n                                                name='foodName'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.foodName}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.foodName && props.touched.foodName ? (\r\n                                                <small classfoodName='form-text text-danger'>{props.errors.foodName}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='Enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Food Types</label>\r\n                                            <Select onChange={onSelectFoodType}\r\n                                                options={FOOD_TYPE} />\r\n                                        </FormGroup>\r\n                                    </Col> \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FoodForm\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport RestaurantForm from './RestaurantForm'\r\nimport FoodForm from \"./FoodForm\";\r\nconst RestaurantTab = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const tabs =[\r\n    {id:\"1\",name:\"Add Restaurant\",icon:\"fas fa-plus-square text-green\"},\r\n    {id:\"2\",name:\"Food Section\",icon:\"fas fa-plus-square text-green\"},\r\n]\r\n  const actions =[\r\n    {icon:(<i class=\"fas fa-eye\"></i>) ,path:\"/app/restaurant-view\",name:\"View Restaurant List\"},\r\n]\r\n\r\n\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <RestaurantForm /> {/* //Adding Hotel */}   \r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <FoodForm/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantTab;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\n// import { Multiselect } from 'multiselect-react-dropdown'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from \"react-select\"\r\nimport { AMENITIES } from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    totalRoom: Yup.string().required('Total room is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    hotelDesc: Yup.string().required('Description is required')\r\n})\r\nfunction HotelForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [amenities, setAmenities] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 10;\r\n\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"hotel\");\r\n            //Amenities Array\r\n            for (var i = 0; i < amenities.length; i++) {\r\n                formData.append('amenities', amenities[i].value);\r\n            }\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(HOTEL_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Hotels Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onSelectAmenities = (value) => {\r\n        setAmenities(value)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        totalRoom: '',\r\n                        address: '',\r\n                        country: '',\r\n                        // checkIn: '',\r\n                        // checkOut: '',\r\n                        hotelDesc: '',\r\n                        contact: '',\r\n                        videoUrl: ''\r\n                    }}\r\n                    // validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Hotel Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Hotel Name</label>\r\n                                            <input\r\n                                                name='name'\r\n                                                className='form-control'\r\n                                                placeholder='e.g: anapurna hotel'\r\n                                                value={props.values.name}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.name && props.touched.name ? (\r\n                                                <small className='form-text text-danger'>{props.errors.name}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Total Room</label>\r\n                                            <Field\r\n                                                name='totalRoom'\r\n                                                className='form-control'\r\n                                                placeholder='Enter total room'\r\n                                                value={props.values.totalRoom}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.totalRoom && props.touched.totalRoom ? (\r\n                                                <small className='form-text text-danger'>{props.errors.totalRoom}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country  </label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">\r\n                                                Address  </label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description </label>\r\n                                            <textarea\r\n                                                rows=\"4\"\r\n                                                cols=\"40\"\r\n                                                name='hotelDesc'\r\n                                                className='form-control'\r\n                                                placeholder='Enter hotel description'\r\n                                                value={props.values.hotelDesc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"12\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Amenities</label>\r\n                                            <Select\r\n                                                isMulti\r\n                                                onChange={onSelectAmenities}\r\n                                                options={AMENITIES} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.videoUrl && props.touched.videoUrl ? (\r\n                                                <small className='form-text text-danger'>{props.errors.videoUrl}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact</label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact number'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {/* //For check in check out  */}\r\n                                {/* <h6 className=\"heading-small text-muted mb-4\"> Amenities</h6>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-videoUrl\">\r\n                                                Check In/Out </label>\r\n                                            <DateRangePicker\r\n                                                onChange={item => setDateRange([item.selection])}\r\n                                                showSelectionPreview={true}\r\n                                                moveRangeOnFirstSelection={false}\r\n                                                months={2}\r\n                                                ranges={dateRange}\r\n                                                direction=\"horizontal\"\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row> */}\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='pl-lg-4 form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary col-md-1\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default HotelForm\r\n\r\n// const getSelectedImage = (files) => {\r\n//     let fileObj = [];\r\n//     let fileArray = []\r\n//     fileObj.push(files)\r\n//     for (let i = 0; i < fileObj[0].length; i++) {\r\n//         fileArray.push(URL.createObjectURL(fileObj[0][i]))\r\n//     }\r\n//     setPreview(fileArray);\r\n//     setSelectPackageImage(fileObj);\r\n\r\n// };","import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from '../services/axios'\r\nimport {AGENT_HOTEL_API} from '../services/api_url'\r\n\r\nexport const HotelContext = createContext()\r\n\r\nconst HotelContextProvider = ({ children }) => {\r\n  const [hotels, setHotels] = useState([])\r\n  const getHotelDetails = async () => {\r\n    try {\r\n      let result = await axios.get(AGENT_HOTEL_API)\r\n      if (result.data.success) {\r\n        setHotels(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      // console.error('Get All Hotel Error: ', error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getHotelDetails()\r\n  }, [])\r\n\r\n  return <HotelContext.Provider value={{ hotels, setHotels }}>{children}</HotelContext.Provider>\r\n}\r\n\r\nexport default HotelContextProvider","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_ROOM_ADD_API, AGENT_HOTEL_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nimport { HotelContext } from '../../contexts/HotelContext'\r\nimport { ROOM_TYPE } from '../../MultipleOption'\r\nconst ValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    totalRoom: Yup.string().required('Total room is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    hotelDesc: Yup.string().required('Description is required'),\r\n})\r\n\r\nfunction HotelRoomForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const [hotelId, setHotelId] = useState(null)\r\n    const maxNumber = 10;\r\n    const { hotels } = useContext(HotelContext)\r\n    let obj = {};\r\n    let arr = [];\r\n    const newObj = (value, label) => {\r\n        obj = {\r\n            value: value,\r\n            label: label,\r\n        };\r\n        arr.push(obj);\r\n    };\r\n\r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    useEffect(() => {\r\n        hotels.map((option, i) =>\r\n            newObj(option._id, option.name)\r\n        );\r\n    }, [arr])\r\n\r\n    const onAddTrigger = async (values, actions) => {\r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"room\");\r\n            //Package Image Arrary\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            //Non-Array Value to store package desc, name, title\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(HOTEL_ROOM_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    removeAllToasts()\r\n                    addToast(\"Hotel Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    removeAllToasts()\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const onSelectHotelOption = (hotel) => {\r\n        setHotelId(hotel.value)\r\n    }\r\n    const onSelectRoomType = (roomType) => {\r\n        setHotelId(roomType.value)\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        totalRoom: '',\r\n                        address: '',\r\n                        country: '',\r\n                        // checkIn: '',\r\n                        // checkOut: '',\r\n                        hotelDesc: ''\r\n                    }}\r\n                    validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                                Hotel Room Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-username\" >Hotel Name</label>\r\n                                            <Select\r\n                                                onChange={onSelectHotelOption}\r\n                                                options={arr} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-price\"\r\n                                            >Room Type</label>\r\n                                            <Select\r\n                                                onChange={onSelectHotelOption}\r\n                                                options={ROOM_TYPE} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"> Price</label>\r\n                                            <Field\r\n                                                name='price'\r\n                                                className='form-control'\r\n                                                placeholder='enter price'\r\n                                                value={props.values.price}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.price && props.touched.price ? (\r\n                                                <small className='form-text text-danger'>{props.errors.price}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Room  </label>\r\n                                            <Field\r\n                                                name='numberOfRoom'\r\n                                                className='form-control'\r\n                                                placeholder='Enter number of room'\r\n                                                value={props.values.numberOfRoom}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.numberOfRoom && props.touched.numberOfRoom ? (\r\n                                                <small className='form-text text-danger'>{props.errors.numberOfRoom}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\"\r\n                                                htmlFor=\"input-address\">\r\n                                                Available Seat(Person per bed)</label>\r\n                                            <Field\r\n                                                name='seat'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Seat per person'\r\n                                                value={props.values.seat}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.seat && props.touched.seat ? (\r\n                                                <small className='form-text text-danger'>{props.errors.seat}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                        <Col md=\"2\">\r\n                                                                <div \r\n                                                                    onClick={onImageUpload}>\r\n                                                                   <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default HotelRoomForm","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport HotelForm from \"./HotelForm\";\r\nimport HotelRoomForm from \"./HotelRoomForm\";\r\nconst HotelTab = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const tabs =[\r\n    {id:\"1\",name:\"Add\",icon:\"fas fa-plus-square text-green\"},\r\n    {id:\"2\",name:\"Room\",icon:\"fas fa-edit text-green\"}\r\n]\r\n  const actions =[\r\n    {icon:(<i class=\"fas fa-eye\"></i>) ,path:\"/app/hotel-view\",name:\"View Hotel List\"},\r\n]\r\n\r\n\r\n  return (\r\n    <>\r\n      <BannerHeader actions={actions} />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n            <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <HotelForm /> {/* //Adding Hotel */}   \r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <HotelRoomForm/>\r\n              </TabPane>\r\n             \r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotelTab;\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardImg, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { CLUB_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport Select from 'react-select'\r\nconst ValidationSchema = Yup.object().shape({\r\n    clubName: Yup.string().required('Name is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n})\r\nfunction ClubForm() {\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const { addToast } = useToasts()\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 4;\r\n  \r\n    const onImageSelectChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        let file = []\r\n        imageList.map(data => file.push(data.file))\r\n        setValidFiles(file)\r\n        setImages(imageList);\r\n    };\r\n    const onAddTrigger = async (values, actions) => {\r\n     \r\n        if (validFiles.length == 0) {\r\n            addToast(\"You have not selected any images !\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"event\", \"club\");\r\n            Array.from(validFiles).map(function (value, index) {\r\n                formData.append(\"picture\", validFiles[index]);\r\n            })\r\n            for (const property in values) {\r\n                formData.append(property, values[property]);\r\n            }\r\n            try {\r\n                let result = await axios.post(CLUB_ADD_API, formData);\r\n                if (result.data.success) {\r\n                    addToast(\"Club Added\", {\r\n                        appearance: \"success\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    addToast(error.response.data.err, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Card className=\"bg-secondary shadow mb-4\">\r\n            <CardBody>\r\n                <Formik\r\n                    initialValues={{\r\n                        clubName: '',\r\n                        address: '',\r\n                        country: '',\r\n                        desc: '',\r\n                        contact: ''\r\n                    }}\r\n                    // validationSchema={ValidationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onAddTrigger(values, actions)\r\n                    }}>\r\n                    {props => (\r\n                        <Form className='mt-2'>\r\n                            <h6 className=\"heading-small text-muted mb-4\">\r\n                               Club Information</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                  \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Club Name</label>\r\n                                            <Field\r\n                                                name='clubName'\r\n                                                className='form-control'\r\n                                                placeholder='Enter club name'\r\n                                                value={props.values.clubName}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.clubName && props.touched.clubName ? (\r\n                                                <small classclubName='form-text text-danger'>{props.errors.clubName}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Country</label>\r\n                                            <Field\r\n                                                name='country'\r\n                                                className='form-control'\r\n                                                placeholder='Enter country'\r\n                                                value={props.values.country}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.country && props.touched.country ? (\r\n                                                <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Contact</label>\r\n                                            <Field\r\n                                                name='contact'\r\n                                                className='form-control'\r\n                                                placeholder='Enter contact'\r\n                                                value={props.values.contact}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                            {props.errors.contact && props.touched.contact ? (\r\n                                                <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>    \r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Address</label>\r\n                                            <Field\r\n                                                name='address'\r\n                                                className='form-control'\r\n                                                placeholder='Enter address'\r\n                                                value={props.values.address}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                              {props.errors.address && props.touched.address ? (\r\n                                                <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>                                \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg=\"4\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Youtube Video Link </label>\r\n                                            <Field\r\n                                                name='videoUrl'\r\n                                                className='form-control'\r\n                                                placeholder='Enter Link (embedded code | share link)'\r\n                                                value={props.values.videoUrl}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg=\"8\">\r\n                                        <FormGroup>\r\n                                            <label className=\"form-control-label\">Description</label>\r\n                                            <Field\r\n                                                name='desc'\r\n                                                className='form-control'\r\n                                                placeholder='Describe about your club in detail.'\r\n                                                value={props.values.desc}\r\n                                                onChange={props.handleChange}\r\n                                            />\r\n                                              {props.errors.desc && props.touched.desc ? (\r\n                                                <small className='form-text text-danger'>{props.errors.desc}</small>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n                            <h6 className=\"heading-small text-muted mb-4\"> Image Section</h6>\r\n                            <div className=\"pl-lg-4\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <ImageUploading\r\n                                                multiple\r\n                                                value={images}\r\n                                                onChange={onImageSelectChange}\r\n                                                maxNumber={maxNumber}\r\n                                                dataURLKey=\"data_url\"\r\n                                            >\r\n                                                {({\r\n                                                    imageList,\r\n                                                    onImageUpload,\r\n                                                    onImageUpdate,\r\n                                                    onImageRemove,\r\n                                                }) => (\r\n                                                    <>\r\n                                                        <Row>\r\n                                                            <Col md=\"2\">\r\n                                                                <div\r\n                                                                    onClick={onImageUpload}>\r\n                                                                    <a className=\"btn btn-primary\"> <span className=\"text-white\">Open image</span></a>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {imageList.length != 0 ?\r\n                                                                    <div className=\"form-group multi-preview\">\r\n                                                                        {imageList.map((image, index) => (\r\n                                                                            <Row>\r\n                                                                                <div className=\"col-md-8\">\r\n                                                                                    <CardTitle className=\"text-uppercase text-muted mb-0\">\r\n                                                                                        <img className=\"img-fluid\" alt=\"Responsive image\" src={image.data_url} alt=\"\" width=\"100\" />\r\n                                                                                    </CardTitle>\r\n                                                                                </div>\r\n                                                                                <Col className=\"col-auto\">\r\n                                                                                    <Button color=\"primary\" tooltip=\"update\" className=\"text-left my-2\" onClick={() => onImageUpdate(index)}><i class=\"fas fa-edit\"></i></Button>\r\n                                                                                    <Button color=\"danger\" className=\"text-left my-2\" onClick={() => onImageRemove(index)}><i class=\"fas fa-eraser\"></i></Button>\r\n\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        ))}\r\n                                                                    </div> : \"Image not selected.\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )}\r\n                                            </ImageUploading>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <div className=\"text-left\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Add\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ClubForm\r\n","import React, { useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    TabContent,\r\n    TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport BannerHeader from \"components/Headers/BannerHeader\";\r\nimport TabArea from \"views/TabArea\";\r\nimport ClubForm from \"./ClubForm\";\r\nconst ClubTab = () => {\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n    const tabs = [\r\n        { id: \"1\", name: \"Add\", icon: \"fas fa-plus-square text-green\" },\r\n    ]\r\n    const actions = [\r\n        { icon: (<i class=\"fas fa-eye\"></i>), path: \"/app/club-view\", name: \"View Club List\" },\r\n    ]\r\n    return (\r\n        <>\r\n            <BannerHeader actions={actions} />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                <Row>\r\n                    <Col className=\"nav-item order-xl-1\" xl=\"12\">\r\n                        <TabArea tabss={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ClubForm /> {/* //Adding Hotel */}\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClubTab;\r\n","import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { Col } from 'reactstrap';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nconst DataTable = ({ columns, data, defaultSorted }) => {\r\n\r\n  const { SearchBar } = Search;\r\n  const options = {\r\n    custom: true,\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: '<<',\r\n    prePageText: '<',\r\n    nextPageText: '>',\r\n    lastPageText: '>>',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: data.length\r\n  };\r\n  const rowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n    //  console.log(row);\r\n    }\r\n  };\r\n  \r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"id\"\r\n        columns={columns}\r\n        data={data}\r\n        search\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <SearchBar \r\n               className=\"col-md-12\"\r\n               style={ { width: '500px' } }\r\n               placeholder=\"Search\"\r\n              {...props.searchProps} />\r\n              <BootstrapTable\r\n                classes=\"table-responsive table-dark\"\r\n                keyField=\"id\"\r\n                data={data}\r\n                columns={columns}\r\n                rowEvents={rowEvents}\r\n                filter={filterFactory()}\r\n                defaultSorted={defaultSorted}\r\n                {...props.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </ToolkitProvider>\r\n      <PaginationListStandalone {...paginationProps} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <PaginationProvider\r\n        pagination={\r\n          paginationFactory(options)\r\n        }\r\n      >\r\n        {contentTable}\r\n      </PaginationProvider>\r\n  );\r\n}\r\n\r\n// import BootstrapTable from 'react-bootstrap-table-next';\r\n// import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\n// import filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\n// import paginationFactory from 'react-bootstrap-table2-paginator';\r\n// const DataTable = ({ columns, data,defaultSorted }) => {\r\n//     return (\r\n//         <BootstrapTable\r\n//            bodyClasses=\"foo\"\r\n//             bootstrap4\r\n//             keyField=\"id\"\r\n//             data={data}\r\n//             columns={columns}\r\n//             defaultSorted={defaultSorted}\r\n//         />\r\n//     )\r\n// }\r\n\r\nexport default DataTable;","import React from \"react\";\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nconst NoActionBanner = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-2 pt-1 pt-lg-7 d-flex align-items-center\">\r\n        <span className=\"mask bg-gradient-default opacity-7\" />\r\n        {/* <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"action\">\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoActionBanner;\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { APPROVE_PRE_REGISTER, PRE_REGISTER_GET } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\n\r\nfunction PreRegisters() {\r\n    const { addToast } = useToasts()\r\n    const [business, setBusiness] = useState([])\r\n    const confirmAction = (_id) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Confirmation for business approval.</h4>\r\n                        <p>Are you sure you want to confirm this business? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => {\r\n                                onApprove(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Approve</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const getAllBusinessDetail = async () => {\r\n        try {\r\n            let result = await axios.get(PRE_REGISTER_GET)\r\n            if (result.data.success) {\r\n                setBusiness(result.data.data)\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Data fetching error\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onApprove = async (id) => {\r\n        try {\r\n            alert(id)\r\n            let result = await axios.put(APPROVE_PRE_REGISTER + id,{\r\n                status:true\r\n            })\r\n            if (result.data.success) {\r\n                window.location.reload();\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Cannot Approve\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n        const onApproveAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div >\r\n                {row.status ? \"\" :<Button className=\"btn btn-success button\" onClick={(e) => confirmAction(row._id)}><i class=\"fas fa-check-double\"></i></Button>}\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc' \r\n    }];\r\n    const statusFormat = (cell, row, rowIndex, formatExtraData) => {\r\n        return <div >\r\n            {!row.status ? <span className=\"text-red\">Pending</span> :<span className=\"text-green\">Approved</span>}\r\n        </div>\r\n    }\r\n    const columns = [\r\n        { dataField: 'fullName',text: 'Name', },\r\n        { dataField: 'businessName', text: 'Business'},\r\n        { dataField: 'address', text: 'Address' },\r\n        { dataField: 'email', text: 'Email' },\r\n        { dataField: 'contact', text: 'Contact' },\r\n        { dataField: 'businessFor', text: 'Approach' },\r\n        { dataField: 'other', text: 'Other' },\r\n        { dataField: 'createdAt',sort:defaultSorted, text: 'Date',formatter:(cell,row)=>{return <span >{moment(row.createdAt).format(\"dddd, MMMM Do YYYY\")}</span>}},\r\n        { dataField: 'status', text: 'Approval', formatter: statusFormat },\r\n        { dataField: 'Action', text: 'Action', formatter: onApproveAction },\r\n    ];\r\n    useEffect(() => {\r\n        getAllBusinessDetail()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={business} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PreRegisters\r\n","import React, { useState, createContext } from 'react'\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\n\r\nexport const PreLoaderContext = createContext()\r\n\r\nconst override = css`\r\n\tdisplay: block;\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tborder-color: #5491d4;\r\n\tz-index: 10000;\r\n\t\r\n`\r\n\r\nconst PreloaderContextProvider = ({ children }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\treturn (\r\n\t\t<PreLoaderContext.Provider value={{ isLoading, setIsLoading }}>\r\n\t\t\t{children}\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='pre-loader'></div>\r\n\t\t\t\t\t<GridLoader css={override} size={20} color={'#5491d4'} loading={isLoading} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</PreLoaderContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default PreloaderContextProvider\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    FormGroup, Row, Col, CardTitle\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from '../../services/axios'\r\nimport { USERS_ADD_API } from '../../services/api_url'\r\nimport { useToasts } from 'react-toast-notifications'\r\nconst ValidationSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required'),\r\n    contact: Yup.string().required('Contact is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    gender: Yup.string().required('Gender is required'),\r\n    fullname: Yup.string().required('Fullname is required')\r\n})\r\nfunction UserAdd() {\r\n    const { addToast, removeAllToasts } = useToasts()\r\n    const onAddTrigger = async (values, actions) => {\r\n        try {\r\n            let result = await axios.post(USERS_ADD_API, values);\r\n            if (result.data.success) {\r\n                removeAllToasts()\r\n                window.location.reload();\r\n            }else{\r\n                addToast(result.data.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                removeAllToasts()\r\n                addToast(error.response.data.err, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">User Add Form</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            contact: '',\r\n                            gender: '',\r\n                            country: '',\r\n                            address: '',\r\n                            fullname: ''\r\n                        }}\r\n                        validationSchema={ValidationSchema}\r\n                        onSubmit={(values, actions) => {\r\n                            onAddTrigger(values, actions)\r\n                        }}>\r\n                        {props => (\r\n                            <Form className='col-md-12'>\r\n                                <div className=\"pl-lg-2\">\r\n                                    <Row>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Full Name</label>\r\n                                                <input\r\n                                                    name='fullname'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter your fullname'\r\n                                                    value={props.values.fullname}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.fullname && props.touched.fullname ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.fullname}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"6\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Email</label>\r\n                                                <Field\r\n                                                    name='email'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter email'\r\n                                                    value={props.values.email}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.email && props.touched.email ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.email}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Country  </label>\r\n                                                <Field\r\n                                                    name='country'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter country'\r\n                                                    value={props.values.country}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.country && props.touched.country ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.country}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">\r\n                                                    Address  </label>\r\n                                                <Field\r\n                                                    name='address'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter address'\r\n                                                    value={props.values.address}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.address && props.touched.address ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.address}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Gender</label>\r\n                                                <select className='form-control' name=\"gender\"\r\n                                                    onChange={props.handleChange}>\r\n                                                    <option value=\"male\">Male</option>\r\n                                                    <option value=\"female\">Female</option>\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col lg=\"4\">\r\n                                            <FormGroup>\r\n                                                <label className=\"form-control-label\">Contact </label>\r\n                                                <Field\r\n                                                    name='contact'\r\n                                                    className='form-control'\r\n                                                    placeholder='Enter contact'\r\n                                                    value={props.values.contact}\r\n                                                    onChange={props.handleChange}\r\n                                                />\r\n                                                {props.errors.contact && props.touched.contact ? (\r\n                                                    <small className='form-text text-danger'>{props.errors.contact}</small>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div className='pl-lg-4 form-group'>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAdd","import React, { useState, useContext, useEffect } from 'react'\r\nimport axios from '../../services/axios'\r\nimport { USERS_GET, USER_DELETE_API, USER_UPDATE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { PreLoaderContext } from '../../contexts/PreLoaderContext'\r\nimport Roles from '../../role'\r\nimport UserAdd from './UserAdd'\r\n\r\nfunction UsersDetails() {\r\n    const { setIsLoading } = useContext(PreLoaderContext)\r\n    const { addToast } = useToasts()\r\n    const [users, setUsers] = useState([])\r\n\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} User</h4>\r\n                        <p>Are you sure you want to delete this data? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteUser(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    const getAllUsers = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            let result = await axios.get(USERS_GET)\r\n            console.log(result)\r\n            if (result.data.success) {\r\n                setIsLoading(false)\r\n\r\n                setUsers(result.data.users)\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n\r\n            if (error.response) {\r\n                addToast(error.response.data.error, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const onDeleteUser = async (id) => {\r\n        try {\r\n            let result = await axios.delete(USER_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Cannot delete\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const onUpdateRole = async (e, id) => {\r\n        try {\r\n            let result = await axios.put(USER_UPDATE_API, {\r\n                type: e.target.value,\r\n                _id: id\r\n            })\r\n            if (result.data.success) {\r\n                window.location.reload();\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Update failed\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const actionOptionRow = (cell, row, rowIndex, formatExtraData) => {\r\n        return <>\r\n            <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-edit\"></i></Button>\r\n            <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.fullname)}><i class=\"fas fa-trash\"></i></Button>\r\n        </>\r\n    }\r\n    const userRoleSelection = (cell, row, rowIndex, formatExtraData) => {\r\n        return <>\r\n            <select className=\"form-control\" onChange={(e) => onUpdateRole(e, row._id)}>\r\n                <option>Not assigned</option>\r\n                {Roles.map((role) =>\r\n                    <option value={role.value} selected={row.type?.includes(role.value)}>\r\n                        {role.label}\r\n                    </option>\r\n                )}\r\n\r\n            </select>\r\n        </>\r\n    }\r\n    const columns = [\r\n        { dataField: 'fullname', text: 'Full Name' },\r\n        { dataField: 'email', text: 'Email' },\r\n        { dataField: 'contact', text: 'Contact' },\r\n        { dataField: 'gender', text: 'Gender' },\r\n        { dataField: 'country', text: 'Country' },\r\n        { dataField: 'address', text: 'Address' },\r\n        { dataField: 'type', text: 'Role', formatter: userRoleSelection },\r\n        { dataField: 'Action', text: 'Action', formatter: actionOptionRow },\r\n        // { dataField: 'userImage', text: 'Date', formatter: (cell, row) => { return <img src={row.userImage}/> } },\r\n    ];\r\n    useEffect(() => {\r\n        getAllUsers()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <UserAdd/>\r\n                    <div className=\"pb-3\">\r\n                        <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"><i class=\"fas fa-plus-circle\"></i></button>\r\n                    </div>\r\n                    <DataTable columns={columns} data={users} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersDetails\r\n","\nimport Index from \"views/Index.js\";\n// import Profile from \"views/auth/Profile.js\";\nimport Register from \"views/auth/Register.js\";\nimport PackageTab from \"views/package/PackageTab\";\nimport RestaurantTab from \"views/restaurant/RestaurantTab\";\nimport HotelTab from \"views/hotel/HotelTab\";\nimport ClubTab from \"views/club/ClubTab\";\nimport PreRegisters from \"views/pre-register/PreRegisters\";\nimport UserDetails from \"views/user/UserDetails\";\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/app\"\n    },\n  {\n    path: \"/package\",\n    name: \"Package\",\n    icon: \"fas fa-route text-blue\",\n    component: PackageTab,\n    layout: \"/app\",\n  },\n  {\n    path: \"/hotel\",\n    name: \"Hotels\",\n    icon: \"fa fa-bed text-orange\",\n    component: HotelTab,\n    layout: \"/app\",\n  },\n  {\n    path: \"/restaurant\",\n    name: \"Restaurant\",\n    icon: \"fas fa-utensils text-yellow\",\n    component: RestaurantTab,\n    layout: \"/app\",\n  },\n  {\n    path: \"/club\",\n    name: \"Club\",\n    icon: \"fas fa-glass-cheers text-orange\",\n    component: ClubTab,\n    layout: \"/app\"\n  },\n  {\n    path: \"/gallery\",\n    name: \"Gallery\",\n    icon: \"fas fa-images text-blue\",\n    component: Register,\n    layout: \"/app\"\n  },\n  {\n    path: \"/registration\",\n    name: \"Pre-Registration\",\n    icon: \"fas fa-check text-orange\",\n    component: PreRegisters,\n    layout: \"/app\"\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"fas fa-user text-orange\",\n    component: UserDetails,\n    layout: \"/app\"\n  },\n];\n\n\nexport default routes;\n","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './contexts/UserAuthentication'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/sign-in', state: { from: props.location } }} />)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useState, useEffect, useMemo, useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { PACKAGE_ALL_API, PACKAGE_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { PackagesContext } from 'contexts/AgentPackageContext'\r\n\r\nfunction PackageDetails() {\r\n    const { addToast } = useToasts()\r\n    // const [packages, setPackages] = useState([])\r\n    const {packages} = useContext(PackagesContext)\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Package</h4>\r\n                        <p>Are you sure you want to delete this packages? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeletePackage(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete this package !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    // // get all Packages\r\n    // const getAllPackages = async () => {\r\n    //     try {\r\n    //         let result = await axios.get(PACKAGE_ALL_API)\r\n    //         if (result.data.success) {\r\n    //             setPackages(result.data.packages)\r\n    //         }\r\n    //     } catch (error) {\r\n    //         alert(\"data fetching error\")\r\n    //     }\r\n    // }\r\n    // delete selected Packages\r\n    const onDeletePackage = async (id) => {\r\n        try {\r\n            let result = await axios.delete(PACKAGE_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    const onDateText = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n           <span >{moment(row.startDate).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const deleteAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'name',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'title', text: 'Title', sort: true,filter: textFilter() },\r\n        { dataField: 'packageType', text: 'Type',filter: textFilter() },\r\n        { dataField: 'destination', text: 'Destination', filter: textFilter() },\r\n        { dataField: 'address', text: 'Meeting Point',filter: textFilter() },\r\n        { dataField: 'price', text: 'price', sort: true ,filter: textFilter()},\r\n        { dataField: 'minTraveler', text: 'Min Traveler', sort: true ,filter: textFilter()},\r\n        { dataField: 'startDate', text: 'Date',formatter:onDateText },\r\n        { dataField: 'Action', text: 'Action', formatter: deleteAction },\r\n    ];\r\n    // useEffect(() => {\r\n    //     getAllPackages()\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={packages} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PackageDetails\r\n","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { HOTEL_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport moment from 'moment'\r\nimport 'moment-precise-range-plugin';\r\nimport { HotelContext } from 'contexts/HotelContext'\r\n\r\nfunction HotelDetails() {\r\n    const { addToast } = useToasts()\r\n    const {hotels} = useContext(HotelContext);\r\n    // const [hotels, setHotels] = useState([])\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Hotel</h4>\r\n                        <p>Are you sure you want to delete this hotel? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    // get all Packages\r\n    // const getAllHotels = async () => {\r\n    //     try {\r\n    //         let result = await axios.get(HOTEL_ALL_API)\r\n    //         if (result.data.success) {\r\n    //             setHotels(result.data.data)\r\n    //         }\r\n    //     } catch (error) {\r\n    //         alert(\"data fetching error\")\r\n    //     }\r\n    // }\r\n    // delete selected Packages\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(HOTEL_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    const onDateText = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n           <span >{moment(row.startDate).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const deleteAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'name',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'name', text: 'Hotel Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'totalRoom', text: 'Total Room',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'hotelDesc', text: 'Description',filter: textFilter() },\r\n        { dataField: 'videoUrl', text: 'Link'},\r\n        { dataField: 'Action', text: 'Action', formatter: deleteAction },\r\n    ];\r\n    // useEffect(() => {\r\n    //     getAllHotels()\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={hotels} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HotelDetails\r\n","import React, { useState, useEffect, useMemo, useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { RESTAURANT_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport 'moment-precise-range-plugin';\r\nimport { RestaurantContext } from 'contexts/AgentRestaurantContext'\r\n\r\nfunction RestaurantDetails() {\r\n    const { addToast } = useToasts()\r\n    const {restaurants} = useContext(RestaurantContext)\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Restaurant</h4>\r\n                        <p>Are you sure you want to delete this restaurant? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n    // delete selected restaurant\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(RESTAURANT_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'name',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'name', text: 'Hotel Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'desc', text: 'Description',filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: deleteAction },\r\n    ];\r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={restaurants} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestaurantDetails\r\n","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport axios from '../services/axios'\r\nimport {AGENT_CLUB_API} from '../services/api_url'\r\n\r\nimport {PreLoaderContext} from '../contexts/PreLoaderContext'\r\nexport const ClubContext = createContext()\r\n\r\nconst ClubContextProvider = ({ children }) => {\r\n  const { setIsLoading } = useContext(PreLoaderContext)\r\n\r\n  const [clubs, setClubs] = useState([])\r\n\r\n  // get all Club\r\n  const getClubByUser = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      let result = await axios.get(AGENT_CLUB_API)\r\n      if (result.data.success) {\r\n      setIsLoading(false)\r\n        setClubs(result.data.data)\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      // console.error('Get All Club Error: ', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClubByUser()\r\n  }, [])\r\n\r\n  return <ClubContext.Provider value={{ clubs, setClubs }}>{children}</ClubContext.Provider>\r\n}\r\n\r\nexport default ClubContextProvider","import React, { useContext } from 'react'\r\n\r\nimport axios from '../../services/axios'\r\nimport { CLUB_DELETE_API } from '../../services/api_url'\r\nimport DataTable from 'components/Datatable/DataTable'\r\nimport { Card, CardBody, Button } from 'reactstrap'\r\nimport { textFilter } from 'react-bootstrap-table2-filter';\r\nimport NoActionBanner from 'components/Headers/NoActionBanner'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { ClubContext } from 'contexts/AgentClubContext'\r\n\r\nfunction ClubDetails() {\r\n    const { addToast } = useToasts()\r\n    const {clubs} = useContext(ClubContext);\r\n    const confirmDelete = (_id, title) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"confirmation-box\">\r\n                        <h4 className=\"title\">Delete {title} Club</h4>\r\n                        <p>Are you sure you want to delete this club? This action cannot\r\n                            be undone!</p>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                onDeleteAction(_id);\r\n                                onClose();\r\n                            }}\r\n                        >Yes, Delete it !</button>\r\n                        <button className=\"btn btn-dark\" onClick={onClose}>\r\n                            Cancel</button>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    // delete selected Packages\r\n    const onDeleteAction = async (id) => {\r\n        try {\r\n            let result = await axios.delete(CLUB_DELETE_API + id)\r\n            if (result.data.success) {\r\n                addToast(result.data.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n                window.location.reload();\r\n\r\n            }\r\n        } catch (error) {\r\n            addToast(\"Delete failed. Please try again\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    }\r\n    const deleteAction = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <>\r\n                <div style={{width:\"200px\"}}>\r\n                    <Button className=\"btn btn-info button\" onClick={(e) => alert(rowIndex)}><i class=\"fas fa-eye\"></i></Button>\r\n                    <Button className=\"btn btn-danger button\" onClick={(e) => confirmDelete(row._id, row.title)}><i class=\"fas fa-trash\"></i></Button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    const defaultSorted = [{\r\n        dataField: 'createdAt',\r\n        order: 'desc'\r\n    }];\r\n    const columns = [\r\n        { dataField: 'clubName', text: 'Club Name', sort: true,filter: textFilter() },\r\n        { dataField: 'address', text: 'Address',filter: textFilter() },\r\n        { dataField: 'country', text: 'Country', filter: textFilter() },\r\n        { dataField: 'contact', text: 'Contact',filter: textFilter() },\r\n        { dataField: 'Action', text: 'Action', formatter: deleteAction },\r\n    ];\r\n \r\n    return (\r\n        <>\r\n            <NoActionBanner />\r\n            <Card className=\"bg-secondary shadow mb-\">\r\n                <CardBody>\r\n                    <DataTable columns={columns} data={clubs} defaultSorted={defaultSorted} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClubDetails\r\n","\nimport React,{useContext} from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport {AuthContext} from '../contexts/UserAuthentication'\n\nimport routes from \"routes.js\";\nimport ProtectedRoute from \"ProtectedRoute\";\nimport PackageDetails from \"views/package/PackageDetails\";\nimport HotelDetails from \"views/hotel/HotelDetails\";\nimport RestaurantDetails from \"views/restaurant/RestaurantDetails\";\nimport ClubDetails from \"views/club/ClubDetails\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  const {authUser} = useContext(AuthContext)\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/app\") {\n        return (\n          <ProtectedRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: `${process.env.PUBLIC_URL}/res/img/logo7.png`,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          <ProtectedRoute path=\"/app/package-view\" component={PackageDetails} />\n          <ProtectedRoute path=\"/app/hotel-view\" component={HotelDetails} />\n          <ProtectedRoute path=\"/app/restaurant-view\" component={RestaurantDetails} />\n          <ProtectedRoute path=\"/app/club-view\" component={ClubDetails} />\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"\" />\n        </Switch>\n        {/* <Container fluid>\n          <AdminFooter />\n        </Container> */}\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={`${process.env.PUBLIC_URL}/res/img/logo29.png`}\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={`${process.env.PUBLIC_URL}/res/img/logo30.png`}\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nconst Login = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <a\n                  className=\"font-weight-bold ml-1\"\n                  href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                  target=\"_blank\"\n                >\n                 Scout-Admin\n                </a>\n              </div>\n            </Col>\n            \n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  Col,\n} from \"reactstrap\";\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from 'yup'\nimport axios from '../../services/axios'\nimport { AuthContext } from '../../contexts/UserAuthentication'\nimport { useToasts } from 'react-toast-notifications'\nimport { LOGIN_API } from \"services/api_url\";\nimport gotoPage from \"services/gotoPage\";\nimport {PreLoaderContext} from '../../contexts/PreLoaderContext'\nconst SignInSchema = Yup.object().shape({\n  email: Yup.string().email().required('Email is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters long').required('Password is required'),\n})\nconst Login = () => {\n  const { setIsLoading } = useContext(PreLoaderContext)\n  const { setIsAuthenticated, setAuthUser } = useContext(AuthContext)\n  const { addToast } = useToasts()\n  \n  //For Agent Authentication\n  const onLogin = async (values) => {\n    try {\n      setIsLoading(true)\n      let result = await axios.post(LOGIN_API, values);\n      if (result.data.success) {\n      setIsLoading(false)\n        setAuthUser(result.data.user)\n        setIsAuthenticated(true)\n        gotoPage(result.data.user.token, result.data.user, \"/app/dashboard\")\n      }\n    } catch (error) {\n      setIsLoading(false)\n      if (error.response) {\n        addToast(error.response.data.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n  }\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n         \n          <CardBody className=\"px-lg-5 py-lg-2\">\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={SignInSchema}\n              onSubmit={values => {\n                onLogin(values)\n              }}\n            >\n              {props => (\n                <Form className='mt-5'>\n                  <div className='form-group'>\n                    <label className='font-weight-bold'>Email</label>\n                    <Field\n                      name='email'\n                      className='form-control'\n                      placeholder='e.g: example@gmail.com'\n                      value={props.values.email}\n                      onChange={props.handleChange('email')}\n                    />\n                    {props.errors.email && props.touched.email ? (\n                      <small className='form-text text-danger'>{props.errors.email}</small>\n                    ) : null}\n                  </div>\n\n                  <div className='form-group'>\n                    <label className='font-weight-bold'>Password</label>\n                    <Input\n                      name='password'\n                      type='password'\n                      className='form-control'\n                      placeholder='********'\n                      value={props.values.password}\n                      onChange={props.handleChange('password')}\n                    />\n                    {props.errors.password && props.touched.password ? (\n                      <small className='form-text text-danger'>{props.errors.password}</small>\n                    ) : null}\n                  </div>\n                  <div className='form-group'>\n                    <div className=\"text-center\">\n                      <Button className=\"my-4\" color=\"primary\" type=\"submit\">\n                        Sign in\n                     </Button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","import Register from \"views/auth/Register.js\";\r\nimport Login from \"views/auth/Login.js\";\r\n\r\nvar routes = [\r\n    {\r\n      path: \"/login\",\r\n      name: \"Login\",\r\n      icon: \"fas fa-sign-in-alt text-yellow\",\r\n      component: Login,\r\n      layout: \"/auth\",\r\n    }    \r\n  ];\r\n\r\n  export default routes;","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './contexts/UserAuthentication'\r\nconst PublicRoute = ({ component, ...rest }) => {\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuthenticated ? (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/app/dashboard\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                        React.createElement(component, props)\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default PublicRoute\r\n","import React from \"react\";\nimport { useLocation, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\nimport authroutes from \"auth_routes\";\nimport PublicRoute from '../PublicRoute'\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <PublicRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col  md=\"12\">\n                  <h1 className=\"text-white\">Authentication (Restaurant/Hotel/Tour/Travel)</h1>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(authroutes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      {/* <AuthFooter /> */}\n    </>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport \"react-responsive-combo-box/dist/index.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport AuthContextProvider from './contexts/UserAuthentication'\nimport { ToastProvider } from 'react-toast-notifications'\nimport PackagesContextProvider from \"contexts/AgentPackageContext\";\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport HotelContextProvider from \"contexts/HotelContext\";\nimport RestaurantContextProvider from \"contexts/AgentRestaurantContext\";\nimport PreloaderContextProvider from \"contexts/PreLoaderContext\";\nimport ClubContextProvider from \"contexts/AgentClubContext\";\n// import PreloaderContextProvider from './contexts/Preloader'\nReactDOM.render(\n  <PreloaderContextProvider>\n    <PackagesContextProvider>\n      <HotelContextProvider>\n        <RestaurantContextProvider>\n          <ClubContextProvider>\n            <AuthContextProvider>\n              <ToastProvider placement='top-center' autoDismissTimeout='3000'>\n                <BrowserRouter>\n                  <Switch>\n                    <Route path=\"/app\" render={(props) => <AdminLayout {...props} />} />\n                    <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n                    <Redirect from=\"/\" to=\"/auth/login\" />\n                  </Switch>\n                </BrowserRouter>\n              </ToastProvider>\n            </AuthContextProvider>\n          </ClubContextProvider>\n        </RestaurantContextProvider>\n      </HotelContextProvider>\n    </PackagesContextProvider>\n  </PreloaderContextProvider>\n  ,\n  document.getElementById(\"root\")\n);\n","//Nodejs Version 12.18.4\r\nmodule.exports = {\r\n    includesOption : [\r\n        { name: \"Bag\" },\r\n        { name: \"Fruits\" },\r\n        { name: \"Transportation\" },\r\n        { name: \"Guide Service\" },\r\n        { name: \"Sleeping Bag\" }\r\n    ],\r\n    ROOM_TYPE: [\r\n        { value: \"normal\", label: \"Normal Room\" },\r\n        { value: \"medium\", label: \"Medium Room\" },\r\n        { value: \"delux\", label: \"Delux Room\" },\r\n        { value: \"luxury\", label: \"Luxury Room\" }\r\n    ],\r\n    FOOD_TYPE:[\r\n        { value: \"spicy\", label: \"Spicy\" },\r\n        { value: \"continental\", label: \"Continental\" },\r\n        { value: \"fastFood\", label: \"Fast Food\" },\r\n        { value: \"dietary\", label: \"Dietary Dinner\" },\r\n        { value: \"casualFood \", label: \"Casual Food\" },\r\n        { value: \"cafe\", label: \"Cafe\" },\r\n    ],\r\n    AMENITIES:[\r\n        { value: \"ac\", label: \"Air Conditioning\" },\r\n        { value: \"attached-bathroom\", label: \"Attached bathroom\" },\r\n        { value: \"tv\", label: \"TV\" },\r\n        { value: \"balcony\", label: \"Balcony\" },\r\n        { value: \"terrace \", label: \"Terrace\" },\r\n        { value: \"wifi\", label: \"Free WIFI\" },\r\n        { value: \"room-service\", label: \"Room Service\" },\r\n        { value: \"bar\", label: \"Bar\" },\r\n        { value: \"swimming-pool\", label: \"Swimming pool\" },\r\n        { value: \"sauna\", label: \"Sauna\" },\r\n        { value: \"frontdesk\", label: \"24-hour Front desk\" },\r\n        { value: \"hotwater\", label: \"Hot water\" },\r\n    ]\r\n\r\n}\r\n"],"sourceRoot":""}